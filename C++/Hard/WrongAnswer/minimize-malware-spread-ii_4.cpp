class Solution {
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        
        int n = graph.size();
        vector<int> infected(n, 0);
        for (int i: initial) {
            infected[i] = 1;
        }
        vector<int> parent(n, -1);
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                if (graph[i][j] == 1 && infected[i] && infected[j]) {
                    if (parent[i] == -1) {
                        parent[i] = i;
                    }
                    if (parent[j] == -1) {
                        parent[j] = i;
                    }
                    parent[j] = i;
                }
            }
        }
        vector<int> count(n, 0);
        for (int i = 0; i < n; ++i) {
            if (parent[i] == -1) {
                continue;
            }
            count[parent[i]] += infected[i];
        }
        int ans = -1, maxCount = 0;
        for (int i: initial) {
            if (ans == -1 || (count[parent[i]] > maxCount) || (count[parent[i]] == maxCount && parent[i] < parent[ans])) {
                ans = i;
                maxCount = count[parent[i]];
            }
        }
        return ans;
    }
};
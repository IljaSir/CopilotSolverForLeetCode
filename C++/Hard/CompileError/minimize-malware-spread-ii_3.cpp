class Solution {
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        
        int n = graph.size();
        vector<int> group(n, -1);
        for (int i = 0; i < n; ++i) {
            if (group[i] == -1) {
                dfs(graph, group, i, i);
            }
        }
        vector<int> groupSize(n, 0);
        for (int i = 0; i < n; ++i) {
            groupSize[group[i]]++;
        }
        vector<int> infected(n, 0);
        for (int i : initial) {
            infected[group[i]]++;
        }
        int ans = *min_element(initial.begin(), initial.end());
        int ansSize = -1;
        for (int i : initial) {
            int g = group[i];
            if (infected[g] == 1) {
                if (groupSize[g] > ansSize) {
                    ans = i;
                    ansSize = groupSize[g];
                }
            }
        }
        return ans;
    }
};
class Solution {
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        
        int n = graph.size();
        vector<int> color(n, -1);
        int c = 0;
        for (int i = 0; i < n; ++i) {
            if (color[i] == -1) {
                dfs(graph, color, i, c++);
            }
        }
        vector<int> size(c, 0);
        for (int i = 0; i < n; ++i) {
            ++size[color[i]];
        }
        vector<int> malware(c, 0);
        for (int i : initial) {
            ++malware[color[i]];
        }
        int ans = INT_MAX;
        for (int i : initial) {
            int c = color[i];
            if (malware[c] == 1) {
                if (ans == INT_MAX) {
                    ans = i;
                } else if (size[c] > size[color[ans]]) {
                    ans = i;
                } else if (size[c] == size[color[ans]] && i < ans) {
                    ans = i;
                }
            }
        }
        if (ans == INT_MAX) {
            for (int i : initial) {
                ans = min(ans, i);
            }
        }
        return ans;
    }
};
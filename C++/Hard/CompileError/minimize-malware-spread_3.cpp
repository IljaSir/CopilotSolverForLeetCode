class Solution {
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        
        int n = graph.size();
        vector<int> color(n, -1);
        for (int c = 0, i = 0; i < n; ++i)
            if (color[i] == -1)
                dfs(graph, color, c++, i);
        vector<int> size(n);
        for (int c: color)
            size[c]++;
        vector<int> malwareCount(n);
        for (int i: initial)
            malwareCount[color[i]]++;
        int ans = INT_MAX;
        for (int i: initial) {
            int c = color[i];
            if (malwareCount[c] == 1) {
                if (ans == INT_MAX)
                    ans = i;
                else if (size[c] > size[color[ans]])
                    ans = i;
                else if (size[c] == size[color[ans]] && i < ans)
                    ans = i;
            }
        }
        if (ans == INT_MAX)
            for (int i: initial)
                ans = min(ans, i);
        return ans;
    }
};
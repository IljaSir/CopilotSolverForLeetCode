class Solution {
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        
        int n = graph.size();
        vector<int> color(n, -1);
        for (int c = 0, i = 0; i < n; ++i) {
            if (color[i] == -1) {
                dfs(graph, color, i, c++);
            }
        }
        vector<int> count(n);
        for (int c: color) {
            count[c]++;
        }
        vector<int> infected(n);
        for (int i: initial) {
            infected[color[i]]++;
        }
        int ans = INT_MAX;
        for (int i: initial) {
            int c = color[i];
            if (infected[c] == 1) {
                if (ans == INT_MAX) {
                    ans = i;
                } else if (count[c] > count[color[ans]]) {
                    ans = i;
                } else if (count[c] == count[color[ans]] && i < ans) {
                    ans = i;
                }
            }
        }
        if (ans == INT_MAX) {
            for (int i: initial) {
                ans = min(ans, i);
            }
        }
        return ans;
    }
};
class Solution {
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        
        int n = graph.size();
        vector<int> color(n, -1);
        int c = 0;
        for (int i = 0; i < n; ++i) {
            if (color[i] == -1) {
                dfs(graph, color, i, c++);
            }
        }
        vector<int> colorSize(c);
        for (int x : color) {
            colorSize[x]++;
        }
        vector<int> infected(c);
        for (int x : initial) {
            infected[color[x]]++;
        }
        int ans = INT_MAX;
        for (int x : initial) {
            int c = color[x];
            if (infected[c] == 1) {
                if (ans == INT_MAX) {
                    ans = x;
                } else if (colorSize[c] > colorSize[color[ans]]) {
                    ans = x;
                } else if (colorSize[c] == colorSize[color[ans]] && x < ans) {
                    ans = x;
                }
            }
        }
        if (ans == INT_MAX) {
            for (int x : initial) {
                ans = min(ans, x);
            }
        }
        return ans;
    }
};
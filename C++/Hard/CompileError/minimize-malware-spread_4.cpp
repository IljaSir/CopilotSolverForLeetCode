class Solution {
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        
        int n = graph.size();
        vector<int> infected(n, 0);
        for (int i : initial) infected[i] = 1;
        vector<int> root(n);
        for (int i = 0; i < n; ++i) root[i] = i;
        for (int i = 0; i < n; ++i) {
            for (int j = i + 1; j < n; ++j) {
                if (graph[i][j] == 1) {
                    int rooti = find(root, i), rootj = find(root, j);
                    if (rooti != rootj) {
                        if (infected[rooti] == 1 && infected[rootj] == 1) continue;
                        if (infected[rooti] == 1) root[rootj] = rooti;
                        else if (infected[rootj] == 1) root[rooti] = rootj;
                        else root[rooti] = rootj;
                    }
                }
            }
        }
        vector<int> cnt(n, 0);
        for (int i = 0; i < n; ++i) {
            int rooti = find(root, i);
            if (infected[rooti] == 1) cnt[rooti]++;
        }
        int ans = -1, ans_cnt = -1;
        for (int i : initial) {
            int rooti = find(root, i);
            if (cnt[rooti] > ans_cnt) {
                ans = i;
                ans_cnt = cnt[rooti];
            }
        }
        return ans;
    }
};
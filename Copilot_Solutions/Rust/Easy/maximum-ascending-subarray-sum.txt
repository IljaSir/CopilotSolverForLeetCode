Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut sum = nums[0];
        let mut max = sum;
        for i in 1..nums.len() {
            if nums[i] > nums[i-1] {
                sum += nums[i];
            } else {
                sum = nums[i];
            }
            if sum > max {
                max = sum;
            }
        }
        max

=======

        let mut sum = nums[0];
        let mut max = sum;
        for i in 1..nums.len() {
            if nums[i] > nums[i-1] {
                sum += nums[i];
            } else {
                if sum > max {
                    max = sum;
                }
                sum = nums[i];
            }
        }
        if sum > max {
            max = sum;
        }
        max
    }
}

=======

        let mut max = nums[0];
        let mut sum = nums[0];
        for i in 1..nums.len() {
            if nums[i] > nums[i-1] {
                sum += nums[i];
            } else {
                max = std::cmp::max(max, sum);
                sum = nums[i];
            }
        }
        std::cmp::max(max, sum)
    }
}

=======

        let mut max = nums[0];
        let mut sum = nums[0];
        for i in 1..nums.len() {
            if nums[i] > nums[i-1] {
                sum += nums[i];
            } else {
                if sum > max {
                    max = sum;
                }
                sum = nums[i];
            }
        }
        if sum > max {
            max = sum;
        }
        max

=======

        let mut max = 0;
        let mut cur = 0;
        for i in 0..nums.len() {
            if i == 0 || nums[i] > nums[i-1] {
                cur += nums[i];
            } else {
                max = std::cmp::max(max, cur);
                cur = nums[i];
            }
        }
        std::cmp::max(max, cur)
    }
}

=======

        let mut max = 0;
        let mut sum = 0;
        for i in 0..nums.len() {
            if i == 0 {
                sum += nums[i];
            } else if nums[i] > nums[i-1] {
                sum += nums[i];
            } else {
                if sum > max {
                    max = sum;
                }
                sum = nums[i];
            }
        }
        if sum > max {
            max = sum;
        }
        max

=======

        let mut sum = 0;
        let mut max = 0;
        for i in 0..nums.len() {
            if i == 0 {
                sum = nums[i];
            } else {
                if nums[i] > nums[i - 1] {
                    sum += nums[i];
                } else {
                    sum = nums[i];
                }
            }
            max = max.max(sum);
        }
        max
    }
}

=======

        let mut max = 0;
        let mut sum = 0;
        for i in 0..nums.len() {
            if i == 0 {
                sum = nums[i];
                max = sum;
            } else {
                if nums[i] > nums[i-1] {
                    sum += nums[i];
                } else {
                    sum = nums[i];
                }
                if sum > max {
                    max = sum;
                }
            }
        }
        max
    }
}

=======

        let mut max = 0;
        let mut sum = 0;
        for i in 0..nums.len() {
            if i == 0 {
                sum += nums[i];
                max = sum;
            } else {
                if nums[i] > nums[i - 1] {
                    sum += nums[i];
                } else {
                    sum = nums[i];
                }
                if sum > max {
                    max = sum;
                }
            }
        }
        max
    }
}

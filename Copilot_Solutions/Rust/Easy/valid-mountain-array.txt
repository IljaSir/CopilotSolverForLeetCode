Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut i = 0;
        while i < arr.len() - 1 && arr[i] < arr[i + 1] {
            i += 1;
        }
        if i == 0 || i == arr.len() - 1 {
            return false;
        }
        while i < arr.len() - 1 && arr[i] > arr[i + 1] {
            i += 1;
        }
        i == arr.len() - 1

=======

        let mut i = 0;
        while i < arr.len() - 1 && arr[i] < arr[i + 1] {
            i += 1;
        }
        if i == 0 || i == arr.len() - 1 {
            return false;
        }
        while i < arr.len() - 1 && arr[i] > arr[i + 1] {
            i += 1;
        }
        i == arr.len() - 1
    }
}

=======

        let mut i = 0;
        while i + 1 < arr.len() && arr[i] < arr[i + 1] {
            i += 1;
        }
        if i == 0 || i == arr.len() - 1 {
            return false;
        }
        while i + 1 < arr.len() && arr[i] > arr[i + 1] {
            i += 1;
        }
        i == arr.len() - 1

=======

        let len = arr.len();
        if len < 3 {
            return false;
        }
        let mut i = 0;
        while i < len - 1 && arr[i] < arr[i + 1] {
            i += 1;
        }
        if i == 0 || i == len - 1 {
            return false;
        }
        while i < len - 1 && arr[i] > arr[i + 1] {
            i += 1;
        }
        i == len - 1
    }
}

=======

        let len = arr.len();
        if len < 3 {
            return false;
        }
        let mut i = 0;
        while i < len - 1 && arr[i] < arr[i + 1] {
            i += 1;
        }
        if i == 0 || i == len - 1 {
            return false;
        }
        while i < len - 1 && arr[i] > arr[i + 1] {
            i += 1;
        }
        i == len - 1

=======

        let n = arr.len();
        if n < 3 {
            return false;
        }
        let mut i = 0;
        while i < n-1 && arr[i] < arr[i+1] {
            i += 1;
        }
        if i == 0 || i == n-1 {
            return false;
        }
        while i < n-1 && arr[i] > arr[i+1] {
            i += 1;
        }
        i == n-1
    }
}

=======

        if arr.len() < 3 {
            return false;
        }
        let mut i = 0;
        let mut j = arr.len() - 1;
        while i < arr.len() - 1 && arr[i] < arr[i + 1] {
            i += 1;
        }
        while j > 0 && arr[j - 1] > arr[j] {
            j -= 1;
        }
        i > 0 && i == j && j < arr.len() - 1
    }
}

=======

        let mut i = 0;
        let mut j = arr.len() - 1;
        while i < j && arr[i] < arr[i + 1] {
            i += 1;
        }
        while i < j && arr[j] < arr[j - 1] {
            j -= 1;
        }
        i == j && i != 0 && j != arr.len() - 1
    }
}

=======

        if arr.len() < 3 {
            return false;
        }
        let mut increase = true;
        for i in 1..arr.len() {
            if arr[i] == arr[i-1] {
                return false;
            }
            if arr[i] < arr[i-1] {
                increase = false;
            }
            if arr[i] > arr[i-1] && !increase {
                return false;
            }
        }
        !increase
    }
}

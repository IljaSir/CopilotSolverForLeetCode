Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut n = n;
        let mut product = 1;
        let mut sum = 0;
        while n > 0 {
            let digit = n % 10;
            product *= digit;
            sum += digit;
            n /= 10;
        }
        product - sum

=======

        let mut n = n;
        let mut sum = 0;
        let mut product = 1;
        while n > 0 {
            let digit = n % 10;
            sum += digit;
            product *= digit;
            n /= 10;
        }
        product - sum

=======

        let mut product = 1;
        let mut sum = 0;
        let mut n = n;
        while n > 0 {
            product *= n % 10;
            sum += n % 10;
            n /= 10;
        }
        product - sum

=======

        let mut sum = 0;
        let mut product = 1;
        let mut n = n;
        while n > 0 {
            let digit = n % 10;
            sum += digit;
            product *= digit;
            n /= 10;
        }
        product - sum

=======

        let mut n = n;
        let mut prod = 1;
        let mut sum = 0;
        while n > 0 {
            let digit = n % 10;
            prod *= digit;
            sum += digit;
            n /= 10;
        }
        prod - sum

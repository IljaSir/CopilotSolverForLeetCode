Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut target = Vec::new();
        for i in 0..nums.len() {
            target.insert(index[i] as usize, nums[i]);
        }
        target
    }
}

=======

        let mut target = Vec::new();
        for i in 0..nums.len() {
            target.insert(index[i] as usize, nums[i]);
        }
        target

=======

        let mut target = vec![];
        for i in 0..nums.len() {
            target.insert(index[i] as usize, nums[i]);
        }
        target
    }
}

=======

        let mut target: Vec<i32> = Vec::new();
        for i in 0..nums.len() {
            target.insert(index[i] as usize, nums[i]);
        }
        return target;

=======

        let mut v: Vec<i32> = Vec::new();
        for i in 0..nums.len() {
            v.insert(index[i] as usize, nums[i]);
        }
        v
    }
}

=======

        let mut target: Vec<i32> = Vec::new();
        for (i, n) in nums.iter().enumerate() {
            target.insert(index[i] as usize, *n);
        }
        target
    }
}

=======

        let mut target = Vec::new();
        for (num, idx) in nums.iter().zip(index.iter()) {
            target.insert(*idx as usize, *num);
        }
        target

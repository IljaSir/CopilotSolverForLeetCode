Synthesizing 5/10 solutions

=======

        let mut result = Vec::new();
        for i in 0..12 {
            for j in 0..60 {
                if i.count_ones() + j.count_ones() == turned_on as u32 {
                    result.push(format!("{}:{:02}", i, j));
                }
            }
        }
        result

=======

        let mut res = Vec::new();
        for i in 0..12 {
            for j in 0..60 {
                if i.count_ones() as i32 + j.count_ones() as i32 == turned_on {
                    res.push(format!("{}:{:02}", i, j));
                }
            }
        }
        res

=======

        let mut result = vec![];
        for i in 0..12 {
            for j in 0..60 {
                if i.count_ones() + j.count_ones() == turned_on as u32 {
                    result.push(format!("{}:{:02}", i, j));
                }
            }
        }
        result

=======

        let mut ans: Vec<String> = Vec::new();
        for h in 0..12 {
            for m in 0..60 {
                if (h as i32).count_ones() + (m as i32).count_ones() == turned_on {
                    ans.push(format!("{}:{:02}", h, m));
                }
            }
        }
        ans

=======

        
    }
}

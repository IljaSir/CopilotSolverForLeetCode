Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut count = 0;
        for i in 0..start_time.len() {
            if start_time[i] <= query_time && end_time[i] >= query_time {
                count += 1;
            }
        }
        count

=======

        let mut count = 0;
        for i in 0..start_time.len() {
            if start_time[i] <= query_time && query_time <= end_time[i] {
                count += 1;
            }
        }
        count

=======

        let mut ret = 0;
        for i in 0..start_time.len() {
            if start_time[i] <= query_time && end_time[i] >= query_time {
                ret += 1;
            }
        }
        ret

=======

        let mut c = 0;
        for i in 0..start_time.len() {
            if start_time[i] <= query_time && end_time[i] >= query_time {
                c += 1;
            }
        }
        c

=======

        let mut count = 0;
        for (s, e) in start_time.iter().zip(end_time.iter()) {
            if s <= &query_time && e >= &query_time {
                count += 1;
            }
        }
        count

=======

        start_time
            .iter()
            .zip(end_time.iter())
            .filter(|(s, e)| *s <= &query_time && *e >= &query_time)
            .count() as i32

=======

        start_time.iter().zip(end_time.iter()).filter(|(st, et)| **st <= query_time && **et >= query_time).count() as i32

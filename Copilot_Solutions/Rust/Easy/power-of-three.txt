Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if n <= 0 {
            return false;
        }
        let mut n = n;
        while n % 3 == 0 {
            n /= 3;
        }
        n == 1

=======

        if n <= 0 {
            return false;
        }
        let mut n = n;
        while n > 1 {
            if n % 3 != 0 {
                return false;
            }
            n /= 3;
        }
        true

=======

        let mut n = n;
        if n == 0 {
            return false;
        }
        while n % 3 == 0 {
            n /= 3;
        }
        n == 1

=======

        if n <= 0 {
            return false;
        }
        let mut n = n;
        while n > 1 {
            if n % 3 != 0 {
                return false;
            }
            n = n / 3;
        }
        return true;

=======

        if n <= 0 { return false; }
        let mut n = n;
        while n % 3 == 0 {
            n /= 3;
        }
        n == 1
    }
}

=======

        if n < 1 { return false; }
        let mut n = n;
        while n % 3 == 0 {
            n /= 3;
        }
        n == 1

=======

        if n <= 0 { return false; }
        let mut x = n;
        while x % 3 == 0 {
            x /= 3;
        }
        x == 1

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut g = g;
        let mut s = s;
        g.sort();
        s.sort();
        let mut i = 0;
        let mut j = 0;
        while i < g.len() && j < s.len() {
            if g[i] <= s[j] {
                i += 1;
            }
            j += 1;
        }
        i as i32

=======

        let mut g = g;
        let mut s = s;
        g.sort();
        s.sort();
        let mut i = 0;
        let mut j = 0;
        while i < g.len() && j < s.len() {
            if g[i] <= s[j] {
                i += 1;
            }
            j += 1;
        }
        return i as i32;

=======

        let mut g = g;
        let mut s = s;
        g.sort();
        s.sort();
        let mut gi = 0;
        let mut si = 0;
        while gi < g.len() && si < s.len() {
            if g[gi] <= s[si] {
                gi += 1;
            }
            si += 1;
        }
        gi as i32

=======

        let mut g = g;
        let mut s = s;
        g.sort();
        s.sort();
        let (mut i, mut j) = (0, 0);
        while i < g.len() && j < s.len() {
            if g[i] <= s[j] {
                i += 1;
            }
            j += 1;
        }
        i as i32

=======

        let mut g = g;
        let mut s = s;
        g.sort();
        s.sort();
        let mut i = 0;
        let mut j = 0;
        let mut count = 0;
        while i < g.len() && j < s.len() {
            if g[i] <= s[j] {
                count += 1;
                i += 1;
                j += 1;
            } else {
                j += 1;
            }
        }
        count

=======

        let mut g = g;
        g.sort();
        let mut s = s;
        s.sort();
        let mut i = 0;
        let mut j = 0;
        let mut ans = 0;
        while i < g.len() && j < s.len() {
            if g[i] <= s[j] {
                ans += 1;
                i += 1;
                j += 1;
            } else {
                j += 1;
            }
        }
        ans

=======

        let mut g = g;
        let mut s = s;
        g.sort();
        s.sort();
        let mut ans = 0;
        let mut i = 0;
        for j in 0..s.len() {
            if i < g.len() && g[i] <= s[j] {
                ans += 1;
                i += 1;
            }
        }
        ans

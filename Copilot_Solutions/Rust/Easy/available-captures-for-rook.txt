Synthesizing 10/10 solutions

=======

        let (mut x, mut y) = (0, 0);
        for i in 0..8 {
            for j in 0..8 {
                if board[i][j] == 'R' {
                    x = i;
                    y = j;
                    break;
                }
            }
        }
        let mut res = 0;
        for i in (0..x).rev() {
            if board[i][y] == 'p' {
                res += 1;
                break;
            } else if board[i][y] == 'B' {
                break;
            }
        }
        for i in x+1..8 {
            if board[i][y] == 'p' {
                res += 1;
                break;
            } else if board[i][y] == 'B' {
                break;
            }
        }
        for i in (0..y).rev() {
            if board[x][i] == 'p' {
                res += 1;
                break;
            } else if board[x][i] == 'B' {
                break;
            }
        }
        for i in y+1..8 {
            if board[x][i] == 'p' {
                res += 1;
                break;
            } else if board[x][i] == 'B' {
                break;
            }
        }
        res

=======

        let mut x = 0;
        let mut y = 0;
        for i in 0..8 {
            for j in 0..8 {
                if board[i][j] == 'R' {
                    x = i;
                    y = j;
                    break;
                }
            }
        }
        let mut count = 0;
        for i in (0..x).rev() {
            if board[i][y] == 'p' {
                count += 1;
                break;
            }
            if board[i][y] == 'B' {
                break;
            }
        }
        for i in x+1..8 {
            if board[i][y] == 'p' {
                count += 1;
                break;
            }
            if board[i][y] == 'B' {
                break;
            }
        }
        for j in (0..y).rev() {
            if board[x][j] == 'p' {
                count += 1;
                break;
            }
            if board[x][j] == 'B' {
                break;
            }
        }
        for j in y+1..8 {
            if board[x][j] == 'p' {
                count += 1;
                break;
            }
            if board[x][j] == 'B' {
                break;
            }
        }
        count

=======

        let mut x = 0;
        let mut y = 0;
        for i in 0..8 {
            for j in 0..8 {
                if board[i][j] == 'R' {
                    x = i;
                    y = j;
                    break;
                }
            }
        }
        let mut res = 0;
        for i in (0..x).rev() {
            if board[i][y] == 'B' {
                break;
            }
            if board[i][y] == 'p' {
                res += 1;
                break;
            }
        }
        for i in (x+1)..8 {
            if board[i][y] == 'B' {
                break;
            }
            if board[i][y] == 'p' {
                res += 1;
                break;
            }
        }
        for j in (0..y).rev() {
            if board[x][j] == 'B' {
                break;
            }
            if board[x][j] == 'p' {
                res += 1;
                break;
            }
        }
        for j in (y+1)..8 {
            if board[x][j] == 'B' {
                break;
            }
            if board[x][j] == 'p' {
                res += 1;
                break;
            }
        }
        res
    }
}

=======

        let mut x = 0;
        let mut y = 0;
        for i in 0..8 {
            for j in 0..8 {
                if board[i][j] == 'R' {
                    x = i;
                    y = j;
                    break;
                }
            }
        }
        let mut count = 0;
        for i in x+1..8 {
            if board[i][y] == 'p' {
                count += 1;
                break;
            } else if board[i][y] == 'B' {
                break;
            }
        }
        for i in (0..x).rev() {
            if board[i][y] == 'p' {
                count += 1;
                break;
            } else if board[i][y] == 'B' {
                break;
            }
        }
        for i in y+1..8 {
            if board[x][i] == 'p' {
                count += 1;
                break;
            } else if board[x][i] == 'B' {
                break;
            }
        }
        for i in (0..y).rev() {
            if board[x][i] == 'p' {
                count += 1;
                break;
            } else if board[x][i] == 'B' {
                break;
            }
        }
        count

=======

        let mut res = 0;
        let (mut x, mut y) = (0, 0);
        for i in 0..8 {
            for j in 0..8 {
                if board[i][j] == 'R' {
                    x = i;
                    y = j;
                    break;
                }
            }
        }
        let mut i = x;
        while i >= 0 {
            if board[i][y] == 'B' {
                break;
            }
            if board[i][y] == 'p' {
                res += 1;
                break;
            }
            i -= 1;
        }
        let mut i = x;
        while i < 8 {
            if board[i][y] == 'B' {
                break;
            }
            if board[i][y] == 'p' {
                res += 1;
                break;
            }
            i += 1;
        }
        let mut j = y;
        while j >= 0 {
            if board[x][j] == 'B' {
                break;
            }
            if board[x][j] == 'p' {
                res += 1;
                break;
            }
            j -= 1;
        }
        let mut j = y;
        while j < 8 {
            if board[x][j] == 'B' {
                break;
            }
            if board[x][j] == 'p' {
                res += 1;
                break;
            }
            j += 1;
        }
        res
    }
}

=======

        let mut x = 0;
        let mut y = 0;
        let mut flag = false;
        for i in 0..8 {
            for j in 0..8 {
                if board[i][j] == 'R' {
                    x = i;
                    y = j;
                    flag = true;
                    break;
                }
            }
            if flag {
                break;
            }
        }
        let mut ans = 0;
        for i in (0..x).rev() {
            if board[i][y] == 'B' {
                break;
            }
            if board[i][y] == 'p' {
                ans += 1;
                break;
            }
        }
        for i in x+1..8 {
            if board[i][y] == 'B' {
                break;
            }
            if board[i][y] == 'p' {
                ans += 1;
                break;
            }
        }
        for j in (0..y).rev() {
            if board[x][j] == 'B' {
                break;
            }
            if board[x][j] == 'p' {
                ans += 1;
                break;
            }
        }
        for j in y+1..8 {
            if board[x][j] == 'B' {
                break;
            }
            if board[x][j] == 'p' {
                ans += 1;
                break;
            }
        }
        ans

=======

        let (mut x, mut y) = (0, 0);
        let mut count = 0;
        for i in 0..8 {
            for j in 0..8 {
                if board[i][j] == 'R' {
                    x = i;
                    y = j;
                    break;
                }
            }
        }
        for i in (0..x).rev() {
            if board[i][y] == 'B' {
                break;
            }
            if board[i][y] == 'p' {
                count += 1;
                break;
            }
        }
        for i in x + 1..8 {
            if board[i][y] == 'B' {
                break;
            }
            if board[i][y] == 'p' {
                count += 1;
                break;
            }
        }
        for i in (0..y).rev() {
            if board[x][i] == 'B' {
                break;
            }
            if board[x][i] == 'p' {
                count += 1;
                break;
            }
        }
        for i in y + 1..8 {
            if board[x][i] == 'B' {
                break;
            }
            if board[x][i] == 'p' {
                count += 1;
                break;
            }
        }
        count

=======

        let mut row = 0;
        let mut col = 0;
        let mut count = 0;
        for i in 0..8 {
            for j in 0..8 {
                if board[i][j] == 'R' {
                    row = i;
                    col = j;
                    break;
                }
            }
        }
        for i in (0..row).rev() {
            if board[i][col] == 'p' {
                count += 1;
                break;
            } else if board[i][col] == 'B' {
                break;
            }
        }
        for i in (row + 1)..8 {
            if board[i][col] == 'p' {
                count += 1;
                break;
            } else if board[i][col] == 'B' {
                break;
            }
        }
        for i in (0..col).rev() {
            if board[row][i] == 'p' {
                count += 1;
                break;
            } else if board[row][i] == 'B' {
                break;
            }
        }
        for i in (col + 1)..8 {
            if board[row][i] == 'p' {
                count += 1;
                break;
            } else if board[row][i] == 'B' {
                break;
            }
        }
        count
    }
}

=======

        let mut i = 0;
        let mut j = 0;
        let mut count = 0;
        for x in 0..8 {
            for y in 0..8 {
                if board[x][y] == 'R' {
                    i = x;
                    j = y;
                }
            }
        }
        let mut k = i;
        while k > 0 {
            k -= 1;
            if board[k][j] == 'p' {
                count += 1;
                break;
            } else if board[k][j] == 'B' {
                break;
            }
        }
        k = i;
        while k < 7 {
            k += 1;
            if board[k][j] == 'p' {
                count += 1;
                break;
            } else if board[k][j] == 'B' {
                break;
            }
        }
        k = j;
        while k > 0 {
            k -= 1;
            if board[i][k] == 'p' {
                count += 1;
                break;
            } else if board[i][k] == 'B' {
                break;
            }
        }
        k = j;
        while k < 7 {
            k += 1;
            if board[i][k] == 'p' {
                count += 1;
                break;
            } else if board[i][k] == 'B' {
                break;
            }
        }
        count

=======

        let mut i = 0;
        let mut j = 0;
        let mut count = 0;
        for (index, row) in board.iter().enumerate() {
            if let Some(index) = row.iter().position(|&x| x == 'R') {
                i = index;
                j = index;
            }
        }
        for x in (0..i).rev() {
            if board[j][x] == 'B' {
                break;
            }
            if board[j][x] == 'p' {
                count += 1;
                break;
            }
        }
        for x in (i + 1)..board.len() {
            if board[j][x] == 'B' {
                break;
            }
            if board[j][x] == 'p' {
                count += 1;
                break;
            }
        }
        for y in (0..j).rev() {
            if board[y][i] == 'B' {
                break;
            }
            if board[y][i] == 'p' {
                count += 1;
                break;
            }
        }
        for y in (j + 1)..board.len() {
            if board[y][i] == 'B' {
                break;
            }
            if board[y][i] == 'p' {
                count += 1;
                break;
            }
        }
        count

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut max = 0;
        let mut cur = 0;
        for i in 0..gain.len() {
            cur += gain[i];
            if cur > max {
                max = cur;
            }
        }
        max

=======

        let mut max = 0;
        let mut sum = 0;
        for i in gain {
            sum += i;
            if sum > max {
                max = sum;
            }
        }
        max

=======

        let mut max = 0;
        let mut cur = 0;
        for i in gain {
            cur += i;
            if cur > max {
                max = cur;
            }
        }
        max

=======

        let mut max = 0;
        let mut sum = 0;
        for g in gain {
            sum += g;
            if sum > max {
                max = sum;
            }
        }
        max

=======

        let mut highest = 0;
        let mut current = 0;
        for i in gain {
            current += i;
            if current > highest {
                highest = current;
            }
        }
        highest

=======

        let mut max = 0;
        let mut sum = 0;
        for i in gain.iter() {
            sum += i;
            if sum > max {
                max = sum;
            }
        }
        max

=======

        let mut cur = 0;
        let mut max = 0;
        for i in gain {
            cur += i;
            if cur > max {
                max = cur;
            }
        }
        max

=======

        let mut max = 0;
        let mut cur = 0;
        for i in gain {
            cur += i;
            max = max.max(cur);
        }
        max

=======

        let mut alt = 0;
        let mut max = 0;
        for i in &gain {
            alt += i;
            if alt > max {
                max = alt;
            }
        }
        max

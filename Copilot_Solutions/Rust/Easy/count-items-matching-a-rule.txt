Synthesizing 10/10 solutions

=======

        let mut count = 0;
        for item in items {
            match rule_key.as_str() {
                "type" => {
                    if item[0] == rule_value {
                        count += 1;
                    }
                },
                "color" => {
                    if item[1] == rule_value {
                        count += 1;
                    }
                },
                "name" => {
                    if item[2] == rule_value {
                        count += 1;
                    }
                },
                _ => (),
            }
        }
        count

=======

        let mut count = 0;
        for item in items.iter() {
            match rule_key.as_str() {
                "type" => {
                    if item[0] == rule_value {
                        count += 1;
                    }
                },
                "color" => {
                    if item[1] == rule_value {
                        count += 1;
                    }
                },
                "name" => {
                    if item[2] == rule_value {
                        count += 1;
                    }
                },
                _ => {}
            }
        }
        count

=======

        let mut count = 0;
        for item in items {
            if rule_key == "type" && item[0] == rule_value {
                count += 1;
            } else if rule_key == "color" && item[1] == rule_value {
                count += 1;
            } else if rule_key == "name" && item[2] == rule_value {
                count += 1;
            }
        }
        count
    }
}

=======

        let mut count = 0;
        let mut index = 0;
        if rule_key == "color" {
            index = 1;
        } else if rule_key == "name" {
            index = 2;
        }
        for item in items {
            if item[index] == rule_value {
                count += 1;
            }
        }
        count

=======

        let mut count = 0;
        let rule_idx = match rule_key.as_str() {
            "type" => 0,
            "color" => 1,
            "name" => 2,
            _ => 0,
        };
        for item in items {
            if item[rule_idx] == rule_value {
                count += 1;
            }
        }
        count

=======

        let mut count = 0;
        let (key, value) = match rule_key.as_str() {
            "type" => (0, rule_value),
            "color" => (1, rule_value),
            "name" => (2, rule_value),
            _ => (0, rule_value),
        };
        for item in items {
            if item[key] == value {
                count += 1;
            }
        }
        return count;
    }
}

=======

        let mut res = 0;
        let rule_idx = match rule_key.as_str() {
            "type" => 0,
            "color" => 1,
            "name" => 2,
            _ => 0,
        };
        for item in items {
            if item[rule_idx] == rule_value {
                res += 1;
            }
        }
        res

=======

        let mut count = 0;
        let rule_index = match rule_key.as_str() {
            "type" => 0,
            "color" => 1,
            _ => 2,
        };
        for item in items {
            if item[rule_index] == rule_value {
                count += 1;
            }
        }
        count

=======

        let mut count = 0;
        for item in items {
            let mut flag = false;
            if rule_key == "type" {
                if item[0] == rule_value {
                    flag = true;
                }
            } else if rule_key == "color" {
                if item[1] == rule_value {
                    flag = true;
                }
            } else if rule_key == "name" {
                if item[2] == rule_value {
                    flag = true;
                }
            }
            if flag {
                count += 1;
            }
        }
        count

=======

        let mut i = 0;
        for item in items {
            let mut j = 0;
            for field in item {
                if j == 0 {
                    if rule_key == "type" && rule_value == field {
                        i += 1;
                    }
                } else if j == 1 {
                    if rule_key == "color" && rule_value == field {
                        i += 1;
                    }
                } else {
                    if rule_key == "name" && rule_value == field {
                        i += 1;
                    }
                }
                j += 1;
            }
        }
        i

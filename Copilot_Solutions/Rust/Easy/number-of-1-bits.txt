Synthesizing 10/10 solutions

=======

        n.count_ones() as i32
    }
}

=======

        n.count_ones() as i32

=======

        let mut count = 0;
        let mut n = n;
        for _ in 0..32 {
            if n & 1 == 1 {
                count += 1;
            }
            n >>= 1;
        }
        count

=======

        let mut n = n;
        let mut count = 0;
        while n != 0 {
            count += 1;
            n &= n - 1;
        }
        count

=======

        let mut n = n;
        let mut count = 0;
        while n > 0 {
            if n % 2 == 1 {
                count += 1;
            }
            n >>= 1;
        }
        count

=======

        let mut n = n;
        let mut res = 0;
        while n != 0 {
            n &= n - 1;
            res += 1;
        }
        res

=======

        let mut count = 0;
        let mut n = n;
        while n != 0 {
            count += 1;
            n &= n - 1;
        }
        count

=======

        let mut count = 0;
        let mut n = n;
        while n > 0 {
            count += 1;
            n = n & (n - 1);
        }
        count

=======

        let mut n = n;
        let mut res = 0;
        while n > 0 {
            n = n & (n - 1);
            res += 1;
        }
        res

=======

        let mut weight = 0;
        let mut n = n;
        while n > 0 {
            if n & 0x01 == 1 {
                weight += 1;
            }
            n = n >> 1;
        }
        weight

Synthesizing 10/10 solutions

=======

        let mut result = 0;
        for i in 0..nums.len() {
            result ^= nums[i];
        }
        result
    }
}

=======

        let mut result = 0;
        for num in nums {
            result ^= num;
        }
        result

=======

        let mut res = 0;
        for num in nums {
            res ^= num;
        }
        res

=======

        let mut ans = 0;
        for i in 0..nums.len() {
            ans ^= nums[i];
        }
        ans

=======

        let mut result = 0;
        for i in 0..nums.len() {
            result ^= nums[i];
        }
        return result;

=======

        let mut res = 0;
        for i in nums {
            res ^= i;
        }
        res

=======

        nums.iter().fold(0, |acc, x| acc ^ x)

=======

        let mut ans = 0;
        for n in nums {
            ans ^= n;
        }
        ans

=======

        let mut sum = 0;
        for num in nums {
            sum ^= num;
        }
        sum

=======

        let mut s = 0;
        for n in nums {
            s ^= n;
        }
        s

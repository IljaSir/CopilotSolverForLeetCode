Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut res = 0;
        for c in column_title.chars() {
            res = res * 26 + (c as i32 - 'A' as i32 + 1);
        }
        res

=======

        let mut result = 0;
        for c in column_title.chars() {
            result = result * 26 + (c as i32 - 'A' as i32 + 1);
        }
        result

=======

        let mut result = 0;
        for c in column_title.chars() {
            result *= 26;
            result += c as i32 - 'A' as i32 + 1;
        }
        result

=======

        let mut n = 0;
        for c in column_title.chars() {
            n = n * 26 + (c as i32 - 'A' as i32 + 1);
        }
        n

=======

        let mut result: i32 = 0;
        for c in column_title.chars() {
            result = result * 26 + (c as i32 - 'A' as i32 + 1);
        }
        result

=======

        let mut num = 0;
        for c in column_title.chars() {
            num = num * 26 + (c as u8 - b'A' + 1) as i32;
        }
        num
    }
}

=======

        let mut result = 0;
        let mut base = 1;
        for c in column_title.chars().rev() {
            result += (c as u8 - b'A' + 1) as i32 * base;
            base *= 26;
        }
        result

=======

        let mut ans = 0;
        let mut factor = 1;
        for c in column_title.chars().rev() {
            ans += (c as i32 - 'A' as i32 + 1) * factor;
            factor *= 26;
        }
        ans

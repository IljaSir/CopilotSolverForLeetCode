Synthesizing 10/10 solutions

=======

        let mut res = 0;
        let mut prev = 'a';
        for c in word.chars() {
            let diff = (c as i32 - prev as i32).abs();
            res += diff.min(26 - diff) + 1;
            prev = c;
        }
        res

=======

        let mut count = 0;
        let mut prev = 'a';
        for c in word.chars() {
            let diff = (c as i32 - prev as i32).abs();
            count += 1 + diff.min(26 - diff);
            prev = c;
        }
        count

=======

        let mut prev = 'a';
        let mut count = 0;
        for c in word.chars() {
            let d = (c as i32 - prev as i32).abs();
            count += d.min(26 - d) + 1;
            prev = c;
        }
        count

=======

        let mut pre = 'a';
        let mut res = 0;
        for c in word.chars() {
            let mut diff = (c as i32 - pre as i32).abs();
            if diff > 13 {
                diff = 26 - diff;
            }
            res += diff;
            pre = c;
        }
        res + word.len() as i32

=======

        let mut ret = 0;
        let mut cur = 'a';
        for c in word.chars() {
            let diff = (c as i32 - cur as i32).abs();
            ret += 1 + diff.min(26 - diff);
            cur = c;
        }
        ret

=======

        let mut res = 0;
        let mut prev = 'a';
        for c in word.chars() {
            let x = (c as i32 - prev as i32).abs();
            res += 1 + x.min(26 - x);
            prev = c;
        }
        res

=======

        let mut ans = 0;
        let mut pos = 0;
        for c in word.chars() {
            let c = c as i32 - 'a' as i32;
            ans += (pos - c).abs().min(26 - (pos - c).abs());
            ans += 1;
            pos = c;
        }
        ans

=======

        let mut seconds = 0;
        let mut pointer = 'a';
        for c in word.chars() {
            let mut diff = (pointer as u8 - c as u8) as i32;
            if diff < 0 {
                diff = -diff;
            }
            if diff > 13 {
                diff = 26 - diff;
            }
            seconds += diff + 1;
            pointer = c;
        }
        seconds

=======

        let mut ans = 0;
        let mut last = 'a';
        for c in word.chars() {
            ans += 1;
            let mut a = (c as i32 - last as i32).abs();
            if a > 13 {
                a = 26 - a;
            }
            ans += a;
            last = c;
        }
        ans

=======

        let mut res = 0;
        let mut pos = 'a' as i32;
        for c in word.chars() {
            let cur = c as i32;
            let mut diff = (pos - cur).abs();
            if diff > 13 {
                diff = 26 - diff;
            }
            res += diff + 1;
            pos = cur;
        }
        res
    }
}

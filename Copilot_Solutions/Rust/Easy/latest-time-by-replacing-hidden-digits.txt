Synthesizing 10/10 solutions

=======

        let mut time = time.into_bytes();
        if time[0] == b'?' {
            if time[1] == b'?' || time[1] < b'4' {
                time[0] = b'2';
            } else {
                time[0] = b'1';
            }
        }
        if time[1] == b'?' {
            if time[0] == b'2' {
                time[1] = b'3';
            } else {
                time[1] = b'9';
            }
        }
        if time[3] == b'?' {
            time[3] = b'5';
        }
        if time[4] == b'?' {
            time[4] = b'9';
        }
        String::from_utf8(time).unwrap()

=======

        let mut time = time.chars().collect::<Vec<char>>();
        if time[0] == '?' {
            if time[1] == '?' || time[1] < '4' {
                time[0] = '2';
            } else {
                time[0] = '1';
            }
        }
        if time[1] == '?' {
            if time[0] == '2' {
                time[1] = '3';
            } else {
                time[1] = '9';
            }
        }
        if time[3] == '?' {
            time[3] = '5';
        }
        if time[4] == '?' {
            time[4] = '9';
        }
        time.into_iter().collect()

=======

        let mut time = time;
        if time.chars().nth(0).unwrap() == '?' {
            if time.chars().nth(1).unwrap() == '?' || time.chars().nth(1).unwrap() <= '3' {
                time.replace_range(0..1, "2");
            } else {
                time.replace_range(0..1, "1");
            }
        }

        if time.chars().nth(1).unwrap() == '?' {
            if time.chars().nth(0).unwrap() == '2' {
                time.replace_range(1..2, "3");
            } else {
                time.replace_range(1..2, "9");
            }
        }

        if time.chars().nth(3).unwrap() == '?' {
            time.replace_range(3..4, "5");
        }

        if time.chars().nth(4).unwrap() == '?' {
            time.replace_range(4..5, "9");
        }

        time
    }
}

=======

        let mut result = String::from(time);
        if result.chars().nth(0).unwrap() == '?' {
            if result.chars().nth(1).unwrap() == '?' || result.chars().nth(1).unwrap() <= '3' {
                result.replace_range(0..1, "2");
            } else {
                result.replace_range(0..1, "1");
            }
        }
        if result.chars().nth(1).unwrap() == '?' {
            if result.chars().nth(0).unwrap() == '2' {
                result.replace_range(1..2, "3");
            } else {
                result.replace_range(1..2, "9");
            }
        }
        if result.chars().nth(3).unwrap() == '?' {
            result.replace_range(3..4, "5");
        }
        if result.chars().nth(4).unwrap() == '?' {
            result.replace_range(4..5, "9");
        }
        result

=======

        let mut time = time;
        if time.as_bytes()[0] == '?' as u8 {
            if time.as_bytes()[1] == '?' as u8 || time.as_bytes()[1] < '4' as u8 {
                time.as_bytes_mut()[0] = '2' as u8;
            } else {
                time.as_bytes_mut()[0] = '1' as u8;
            }
        }
        if time.as_bytes()[1] == '?' as u8 {
            if time.as_bytes()[0] == '2' as u8 {
                time.as_bytes_mut()[1] = '3' as u8;
            } else {
                time.as_bytes_mut()[1] = '9' as u8;
            }
        }
        if time.as_bytes()[3] == '?' as u8 {
            time.as_bytes_mut()[3] = '5' as u8;
        }
        if time.as_bytes()[4] == '?' as u8 {
            time.as_bytes_mut()[4] = '9' as u8;
        }
        time

=======

        let mut res = vec!['?'; 5];
        for (i, c) in time.chars().enumerate() {
            if c == '?' {
                res[i] = match i {
                    0 => {
                        if time[1..].chars().any(|c| c == '0' || c == '1' || c == '2' || c == '3') {
                            '2'
                        } else {
                            '1'
                        }
                    }
                    1 => {
                        if res[0] == '2' {
                            '3'
                        } else {
                            '9'
                        }
                    }
                    2 => ':',
                    3 => '5',
                    4 => '9',
                    _ => unreachable!(),
                }
            } else {
                res[i] = c;
            }
        }
        res.into_iter().collect()
    }
}

=======

        let mut time = time;
        let mut i = 0;
        for c in time.chars() {
            if c == '?' {
                if i == 0 {
                    if time.chars().nth(1) == Some('?') || time.chars().nth(1) == Some('0') || time.chars().nth(1) == Some('1') || time.chars().nth(1) == Some('2') || time.chars().nth(1) == Some('3') {
                        time.replace_range(i..i+1, "2");
                    } else {
                        time.replace_range(i..i+1, "1");
                    }
                } else if i == 1 {
                    if time.chars().nth(0) == Some('2') {
                        time.replace_range(i..i+1, "3");
                    } else {
                        time.replace_range(i..i+1, "9");
                    }
                } else if i == 3 {
                    time.replace_range(i..i+1, "5");
                } else if i == 4 {
                    time.replace_range(i..i+1, "9");
                }
            }
            i += 1;
        }
        time
    }
}

=======

        let mut res = String::from(time);
        let mut ch = res.as_bytes_mut();
        if ch[0] == b'?' {
            if ch[1] == b'?' || ch[1] < b'4' {
                ch[0] = b'2';
            } else {
                ch[0] = b'1';
            }
        }
        if ch[1] == b'?' {
            if ch[0] == b'2' {
                ch[1] = b'3';
            } else {
                ch[1] = b'9';
            }
        }
        if ch[3] == b'?' {
            ch[3] = b'5';
        }
        if ch[4] == b'?' {
            ch[4] = b'9';
        }
        String::from_utf8(ch.to_vec()).unwrap()

=======

        let mut result = String::new();
        let mut time_iter = time.chars();
        match time_iter.next().unwrap() {
            '2' => {
                result.push('2');
                match time_iter.next().unwrap() {
                    '?' => result.push('3'),
                    c => result.push(c),
                }
            }
            '1' | '0' => {
                match time_iter.next().unwrap() {
                    '?' => result.push('9'),
                    c => result.push(c),
                }
            }
            '?' => {
                match time_iter.next().unwrap() {
                    '?' | '0' | '1' | '2' | '3' => {
                        result.push('2');
                        result.push('3');
                    }
                    _ => {
                        result.push('1');
                        result.push('9');
                    }
                }
            }
            _ => unreachable!(),
        }
        result.push(':');
        match time_iter.next().unwrap() {
            '?' => result.push('5'),
            c => result.push(c),
        }
        match time_iter.next().unwrap() {
            '?' => result.push('9'),
            c => result.push(c),
        }
        result
    }
}

=======

        let mut time = time;
        let mut chars = time.chars();
        let mut ch = chars.next().unwrap();
        if ch == '?' {
            let ch2 = chars.next().unwrap();
            if ch2 == '?' || ch2 < '4' {
                time.replace_range(0..1, "2");
            } else {
                time.replace_range(0..1, "1");
            }
        }
        ch = chars.next().unwrap();
        if ch == '?' {
            let ch2 = chars.next().unwrap();
            if time.as_bytes()[0] == b'2' {
                time.replace_range(1..2, "3");
            } else {
                time.replace_range(1..2, "9");
            }
        }
        ch = chars.next().unwrap();
        if ch == '?' {
            time.replace_range(3..4, "5");
        }
        ch = chars.next().unwrap();
        if ch == '?' {
            time.replace_range(4..5, "9");
        }
        time
    }
}

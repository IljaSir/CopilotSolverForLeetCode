Synthesizing 10/10 solutions

=======

        let mut res = vec![];
        for i in 1..=n/2 {
            res.push(i);
            res.push(-i);
        }
        if n % 2 == 1 {
            res.push(0);
        }
        res

=======

        let mut res = Vec::new();
        if n % 2 == 1 {
            res.push(0);
        }
        for i in 1..=n/2 {
            res.push(i);
            res.push(-i);
        }
        res

=======

        let mut result = Vec::new();
        for i in 1..n {
            result.push(i);
            result.push(-i);
        }
        if n % 2 == 1 {
            result.push(0);
        }
        result

=======

        let mut result = Vec::new();
        let mut i = 1;
        while i <= n / 2 {
            result.push(i);
            result.push(-i);
            i += 1;
        }
        if n % 2 != 0 {
            result.push(0);
        }
        result

=======

        let mut result = Vec::new();
        let mut i = 1;
        while i <= n/2 {
            result.push(i);
            result.push(-i);
            i += 1;
        }
        if n % 2 == 1 {
            result.push(0);
        }
        result
    }
}

=======

        let mut result = Vec::new();
        let mut i = 1;
        while i < n {
            result.push(i);
            result.push(-i);
            i += 1;
        }
        if n % 2 != 0 {
            result.push(0);
        }
        result

=======

        let mut ret = Vec::new();
        for i in 0..n/2 {
            ret.push(i+1);
            ret.push(-i-1);
        }
        if n%2 == 1 {
            ret.push(0);
        }
        ret

=======

        let mut res = Vec::new();
        for i in 1..n {
            res.push(i);
        }
        res.push(-(n - 1) * n / 2);
        res

=======

        let mut ans = vec![0; n as usize];
        for i in 1..n {
            ans[i as usize] = i;
            ans[(i - 1) as usize] = -i;
        }
        ans

=======

        let mut ans: Vec<i32> = vec![];
        let mut i = 1;
        while i <= n {
            ans.push(i);
            ans.push(-i);
            i += 1;
        }
        ans

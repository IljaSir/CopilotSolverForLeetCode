Synthesizing 10/10 solutions

=======

        let mut max = 0;
        let mut count = 0;
        let mut prev = ' ';
        for c in s.chars() {
            if c == prev {
                count += 1;
            } else {
                max = max.max(count);
                count = 1;
                prev = c;
            }
        }
        max.max(count)

=======

        let mut max = 1;
        let mut count = 1;
        let mut last = s.chars().nth(0).unwrap();
        for c in s.chars().skip(1) {
            if c == last {
                count += 1;
                if count > max {
                    max = count;
                }
            } else {
                count = 1;
                last = c;
            }
        }
        max

=======

        let mut max = 0;
        let mut curr = 1;
        for i in 1..s.len() {
            if s.as_bytes()[i] == s.as_bytes()[i - 1] {
                curr += 1;
            } else {
                if curr > max {
                    max = curr;
                }
                curr = 1;
            }
        }
        if curr > max {
            max = curr;
        }
        max

=======

        let mut max = 0;
        let mut count = 1;
        let mut prev = s.chars().next().unwrap();
        for c in s.chars().skip(1) {
            if c == prev {
                count += 1;
            } else {
                if count > max {
                    max = count;
                }
                count = 1;
            }
            prev = c;
        }
        if count > max {
            max = count;
        }
        max

=======

        let mut last = '\0';
        let mut max = 0;
        let mut cur = 0;
        for c in s.chars() {
            if c == last {
                cur += 1;
            } else {
                max = max.max(cur);
                cur = 1;
                last = c;
            }
        }
        max.max(cur)

=======

        let mut max = 0;
        let mut count = 1;
        let mut last = ' ';
        for c in s.chars() {
            if c == last {
                count += 1;
            } else {
                if count > max {
                    max = count;
                }
                last = c;
                count = 1;
            }
        }
        if count > max {
            max = count;
        }
        max

=======

        let mut max = 1;
        let mut count = 1;
        let mut chars = s.chars();
        let mut prev = chars.next();
        for c in chars {
            if c == prev.unwrap() {
                count += 1;
                if count > max {
                    max = count;
                }
            } else {
                count = 1;
            }
            prev = Some(c);
        }
        max

=======

        let mut max = 0;
        let mut cur = 1;
        let mut prev = ' ';
        for c in s.chars() {
            if c == prev {
                cur += 1;
            } else {
                cur = 1;
            }
            max = max.max(cur);
            prev = c;
        }
        max

=======

        let mut res = 1;
        let mut cnt = 1;
        let mut chars = s.chars();
        let mut pre = chars.next().unwrap();
        for c in chars {
            if c == pre {
                cnt += 1;
            } else {
                res = res.max(cnt);
                cnt = 1;
                pre = c;
            }
        }
        res.max(cnt)

=======

        let mut max = 1;
        let mut current = 1;
        let mut chars = s.chars();
        let mut prev = chars.next();
        for c in chars {
            if prev == Some(c) {
                current += 1;
                if current > max {
                    max = current;
                }
            } else {
                current = 1;
            }
            prev = Some(c);
        }
        max
    }
}

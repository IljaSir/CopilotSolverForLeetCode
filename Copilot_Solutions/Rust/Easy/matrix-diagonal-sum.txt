Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut sum = 0;
        for i in 0..mat.len() {
            sum += mat[i][i];
            sum += mat[i][mat.len() - 1 - i];
        }
        if mat.len() % 2 == 1 {
            sum -= mat[mat.len() / 2][mat.len() / 2];
        }
        sum

=======

        let n = mat.len();
        let mut sum = 0;
        for i in 0..n {
            sum += mat[i][i];
            sum += mat[i][n - 1 - i];
        }
        if n % 2 == 1 {
            sum -= mat[n / 2][n / 2];
        }
        sum
    }
}

=======

        let mut sum = 0;
        let n = mat.len();
        for i in 0..n {
            sum += mat[i][i];
            sum += mat[i][n - i - 1];
        }
        if n % 2 == 1 {
            sum -= mat[n / 2][n / 2];
        }
        sum
    }
}

=======

        let mut sum = 0;
        let n = mat.len();
        for i in 0..n {
            sum += mat[i][i];
            if i != n - i - 1 {
                sum += mat[i][n - i - 1];
            }
        }
        sum
    }
}

=======

        let mut sum = 0;
        let n = mat.len();
        for i in 0..n {
            sum += mat[i][i];
            sum += mat[i][n - 1 - i];
        }
        if n % 2 == 1 {
            sum -= mat[n / 2][n / 2];
        }
        sum

=======

        let mut sum = 0;
        let n = mat.len();
        for i in 0..n {
            sum += mat[i][i];
            sum += mat[i][n-i-1];
        }
        if n % 2 == 1 {
            sum -= mat[n/2][n/2];
        }
        sum

=======

        let mut sum = 0;
        for i in 0..mat.len() {
            sum += mat[i][i] + mat[i][mat.len()-1-i];
        }
        if mat.len() % 2 == 1 {
            sum -= mat[mat.len()/2][mat.len()/2];
        }
        sum

=======

        
    }
}

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if x < 0 {
            return false;
        }
        let mut x = x;
        let mut rev = 0;
        while x > 0 {
            rev = rev * 10 + x % 10;
            x = x / 10;
        }
        x == rev

=======

        if x < 0 {
            return false;
        }
        let mut x = x;
        let mut rev = 0;
        while x > 0 {
            rev = rev * 10 + x % 10;
            x /= 10;
        }
        rev == x

=======

        if x < 0 {
            return false;
        }
        let mut x = x;
        let mut y = 0;
        while x > 0 {
            y = y * 10 + x % 10;
            x /= 10;
        }
        y == x

=======

        let mut x = x;
        let mut rev = 0;
        while x > rev {
            rev = rev * 10 + x % 10;
            x /= 10;
        }
        x == rev || x == rev / 10

=======

        if x < 0 { return false; }
        let mut x = x;
        let mut y = 0;
        while x != 0 {
            y = y * 10 + x % 10;
            x /= 10;
        }
        y == x

=======

        let mut y = x;
        let mut z = 0;
        while y > 0 {
            z = z * 10 + y % 10;
            y /= 10;
        }
        return x == z;

=======

        if x < 0 {
            return false;
        }
        let mut x = x;
        let mut d = 1;
        while x / d >= 10 {
            d *= 10;
        }
        while x > 0 {
            let q = x / d;
            let r = x % 10;
            if q != r {
                return false;
            }
            x = (x % d) / 10;
            d /= 100;
        }
        true

=======

        let mut num = x;
        let mut rev = 0;
        if x < 0 {return false;}
        while num > 0 {
            rev = rev * 10 + num % 10;
            num = num / 10;
        }
        return rev == x;

=======

        if x < 0 {
            return false;
        }
        let mut str = x.to_string();
        let mut rev_str = str.chars().rev().collect::<String>();
        if rev_str == str {
            return true;
        }
        return false;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut count = 0;
        for i in 0..nums.len() {
            for j in i+1..nums.len() {
                if nums[i] == nums[j] {
                    count += 1;
                }
            }
        }
        count
    }
}

=======

        let mut count = 0;
        for i in 0..nums.len() {
            for j in i+1..nums.len() {
                if nums[i] == nums[j] {
                    count += 1;
                }
            }
        }
        count

=======

        let mut count = 0;
        for i in 0..nums.len() {
            for j in (i+1)..nums.len() {
                if nums[i] == nums[j] {
                    count += 1;
                }
            }
        }
        count
    }
}

=======

        let mut result = 0;
        for i in 0..nums.len() {
            for j in i+1..nums.len() {
                if nums[i] == nums[j] {
                    result += 1;
                }
            }
        }
        result

=======

        let mut cnt = 0;
        for i in 0..nums.len() {
            for j in i+1..nums.len() {
                if nums[i] == nums[j] {
                    cnt += 1;
                }
            }
        }
        cnt

=======

        let mut count = 0;
        for i in 0..nums.len() {
            for j in 0..nums.len() {
                if nums[i] == nums[j] && i < j {
                    count += 1;
                }
            }
        }
        count
    }
}

=======

        let mut c = 0;
        for i in 0..nums.len() {
            for j in i+1..nums.len() {
                if nums[i] == nums[j] {
                    c += 1;
                }
            }
        }
        c
    }
}

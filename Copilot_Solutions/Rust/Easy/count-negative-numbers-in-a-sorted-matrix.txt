Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut count = 0;
        for i in 0..grid.len() {
            for j in 0..grid[i].len() {
                if grid[i][j] < 0 {
                    count += 1;
                }
            }
        }
        count
    }
}

=======

        let m = grid.len();
        let n = grid[0].len();
        let mut count = 0;
        for i in 0..m {
            for j in 0..n {
                if grid[i][j] < 0 {
                    count += 1;
                }
            }
        }
        return count;

=======

        let mut count = 0;
        for i in grid {
            for j in i {
                if j < 0 {
                    count += 1;
                }
            }
        }
        count

=======

        let mut count = 0;
        for row in grid {
            for num in row {
                if num < 0 {
                    count += 1;
                }
            }
        }
        count

=======

        let mut count = 0;
        for row in grid {
            for col in row {
                if col < 0 {
                    count += 1;
                }
            }
        }
        count

=======

        let mut count = 0;
        for row in grid {
            for item in row {
                if item < 0 {
                    count += 1;
                }
            }
        }
        count

=======

        let mut count = 0;
        for row in grid {
            for col in row {
                if col < 0 {
                    count += 1;
                }
            }
        }
        return count;

=======

        let mut count = 0;
        for row in grid {
            for i in row {
                if i < 0 {
                    count += 1;
                }
            }
        }
        count

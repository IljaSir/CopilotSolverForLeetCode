Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut five = 0;
        let mut ten = 0;
        for bill in bills {
            if bill == 5 {
                five += 1;
            } else if bill == 10 {
                if five == 0 {
                    return false;
                }
                five -= 1;
                ten += 1;
            } else {
                if five > 0 && ten > 0 {
                    five -= 1;
                    ten -= 1;
                } else if five >= 3 {
                    five -= 3;
                } else {
                    return false;
                }
            }
        }
        true

=======

        let mut five = 0;
        let mut ten = 0;
        for bill in bills {
            match bill {
                5 => five += 1,
                10 => {
                    if five == 0 {
                        return false;
                    }
                    five -= 1;
                    ten += 1;
                }
                20 => {
                    if ten > 0 && five > 0 {
                        ten -= 1;
                        five -= 1;
                    } else if five > 2 {
                        five -= 3;
                    } else {
                        return false;
                    }
                }
                _ => (),
            }
        }
        true

=======

        let mut five = 0;
        let mut ten = 0;
        for bill in bills {
            match bill {
                5 => five += 1,
                10 => {
                    five -= 1;
                    ten += 1;
                }
                20 => {
                    if ten > 0 {
                        ten -= 1;
                        five -= 1;
                    } else {
                        five -= 3;
                    }
                }
                _ => panic!("Invalid bill!"),
            }
            if five < 0 || ten < 0 {
                return false;
            }
        }
        true

=======

        let mut fives = 0;
        let mut tens = 0;
        for bill in bills {
            match bill {
                5 => fives += 1,
                10 => {
                    fives -= 1;
                    tens += 1;
                },
                20 => {
                    if tens > 0 {
                        tens -= 1;
                        fives -= 1;
                    } else {
                        fives -= 3;
                    }
                },
                _ => (),
            }
            if fives < 0 {
                return false;
            }
        }
        true

=======

        let mut fives = 0;
        let mut tens = 0;
        for bill in bills {
            match bill {
                5 => fives += 1,
                10 => {
                    tens += 1;
                    fives -= 1;
                },
                20 => {
                    if tens > 0 {
                        tens -= 1;
                        fives -= 1;
                    } else {
                        fives -= 3;
                    }
                },
                _ => panic!("Invalid bill: {}", bill),
            };
            if fives < 0 {
                return false;
            }
        }
        true

=======

        let mut fives = 0;
        let mut tens = 0;
        for bill in bills {
            match bill {
                5 => fives += 1,
                10 => {
                    tens += 1;
                    fives -= 1;
                }
                20 => {
                    if tens > 0 {
                        tens -= 1;
                        fives -= 1;
                    } else {
                        fives -= 3;
                    }
                }
                _ => {}
            }
            if fives < 0 {
                return false;
            }
        }
        true

=======

        let mut five = 0;
        let mut ten = 0;
        for bill in bills {
            match bill {
                5 => five += 1,
                10 => {
                    if five > 0 {
                        five -= 1;
                        ten += 1;
                    } else {
                        return false;
                    }
                }
                _ => {
                    if ten > 0 && five > 0 {
                        ten -= 1;
                        five -= 1;
                    } else if five > 2 {
                        five -= 3;
                    } else {
                        return false;
                    }
                }
            }
        }
        true

=======

        let mut five = 0;
        let mut ten = 0;
        for i in bills {
            match i {
                5 => five += 1,
                10 => {
                    if five == 0 {
                        return false;
                    }
                    five -= 1;
                    ten += 1;
                },
                20 => {
                    if five > 0 && ten > 0 {
                        five -= 1;
                        ten -= 1;
                    } else if five > 2 {
                        five -= 3;
                    } else {
                        return false;
                    }
                },
                _ => unreachable!(),
            }
        }
        true

=======

        let mut change = 0;
        for bill in bills {
            if bill == 5 {
                change += 5;
            } else if bill == 10 {
                if change < 5 {
                    return false;
                } else {
                    change -= 5;
                    change += 10;
                }
            } else if bill == 20 {
                if change < 15 {
                    return false;
                } else {
                    if change >= 10 {
                        change -= 10;
                        change += 20;
                    } else {
                        change -= 5;
                        change -= 5;
                        change -= 5;
                        change += 20;
                    }
                }
            }
        }
        true

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut inc = true;
        let mut dec = true;
        for i in 1..nums.len() {
            if nums[i] < nums[i-1] {
                inc = false;
            }
            if nums[i] > nums[i-1] {
                dec = false;
            }
        }
        inc || dec

=======

        let mut inc = true;
        let mut dec = true;
        for i in 0..nums.len()-1 {
            if nums[i] > nums[i+1] {
                inc = false;
            }
            if nums[i] < nums[i+1] {
                dec = false;
            }
        }
        inc || dec

=======

        let mut increasing = true;
        let mut decreasing = true;
        for i in 1..nums.len() {
            if nums[i] > nums[i - 1] {
                decreasing = false;
            }
            if nums[i] < nums[i - 1] {
                increasing = false;
            }
        }
        increasing || decreasing

=======

        let mut increasing = true;
        let mut decreasing = true;
        for i in 1..nums.len() {
            if nums[i] > nums[i-1] {
                decreasing = false;
            } else if nums[i] < nums[i-1] {
                increasing = false;
            }
        }
        increasing || decreasing
    }
}

=======

        let mut increasing = true;
        let mut decreasing = true;
        for i in 0..nums.len() - 1 {
            if nums[i] < nums[i + 1] {
                decreasing = false;
            } else if nums[i] > nums[i + 1] {
                increasing = false;
            }
        }
        increasing || decreasing

=======

        let mut is_increasing = true;
        let mut is_decreasing = true;
        for i in 0..nums.len() - 1 {
            if nums[i] < nums[i + 1] {
                is_decreasing = false;
            }
            if nums[i] > nums[i + 1] {
                is_increasing = false;
            }
        }
        is_increasing || is_decreasing

=======

        if nums.len() < 2 {
            return true;
        }
        let mut inc = false;
        let mut dec = false;
        for i in 1..nums.len() {
            if nums[i] > nums[i-1] {
                inc = true;
            } else if nums[i] < nums[i-1] {
                dec = true;
            }
            if inc && dec {
                return false;
            }
        }
        true

=======

        let mut prev = nums[0];
        let mut is_increasing = None;
        for num in nums.into_iter().skip(1) {
            if is_increasing.is_none() {
                if num > prev {
                    is_increasing = Some(true);
                } else if num < prev {
                    is_increasing = Some(false);
                }
            } else if is_increasing.unwrap() && num < prev {
                return false;
            } else if !is_increasing.unwrap() && num > prev {
                return false;
            }
            prev = num;
        }
        true

Synthesizing 10/10 solutions

=======

        let mut count = 0;
        for i in 0..nums.len() {
            for j in i+1..nums.len() {
                for k in j+1..nums.len() {
                    if nums[i] != nums[j] && nums[i] != nums[k] && nums[j] != nums[k] {
                        count += 1;
                    }
                }
            }
        }
        count
    }
}

=======

        let mut res = 0;
        for i in 0..nums.len() {
            for j in i + 1..nums.len() {
                for k in j + 1..nums.len() {
                    if nums[i] != nums[j] && nums[i] != nums[k] && nums[j] != nums[k] {
                        res += 1;
                    }
                }
            }
        }
        res
    }
}

=======

        let mut res = 0;
        for i in 0..nums.len() {
            for j in i + 1..nums.len() {
                for k in j + 1..nums.len() {
                    if nums[i] != nums[j] && nums[i] != nums[k] && nums[j] != nums[k] {
                        res += 1;
                    }
                }
            }
        }
        res

=======

        let mut ans = 0;
        for i in 0..nums.len() {
            for j in i+1..nums.len() {
                for k in j+1..nums.len() {
                    if nums[i] != nums[j] && nums[i] != nums[k] && nums[j] != nums[k] {
                        ans += 1;
                    }
                }
            }
        }
        ans

=======

        let mut count = 0;
        for i in 0..nums.len() {
            for j in (i+1)..nums.len() {
                for k in (j+1)..nums.len() {
                    if nums[i] != nums[j] && nums[i] != nums[k] && nums[j] != nums[k] {
                        count += 1;
                    }
                }
            }
        }
        count
    }
}

=======

        let mut res = 0;
        for i in 0..nums.len() {
            for j in (i + 1)..nums.len() {
                for k in (j + 1)..nums.len() {
                    if nums[i] != nums[j] && nums[i] != nums[k] && nums[j] != nums[k] {
                        res += 1;
                    }
                }
            }
        }
        res

=======

        let mut res = 0;
        let n = nums.len();
        for i in 0..n {
            for j in i + 1..n {
                for k in j + 1..n {
                    if nums[i] != nums[j] && nums[i] != nums[k] && nums[j] != nums[k] {
                        res += 1;
                    }
                }
            }
        }
        res
    }
}

=======

        let mut ret = 0;
        let n = nums.len();
        for i in 0..n {
            for j in i+1..n {
                for k in j+1..n {
                    if nums[i] != nums[j] && nums[i] != nums[k] && nums[j] != nums[k] {
                        ret += 1;
                    }
                }
            }
        }
        ret

=======

        let mut nums = nums;
        nums.sort();
        let mut count = 0;
        for i in 0..nums.len() - 2 {
            if nums[i] == nums[i + 1] || nums[i] == nums[i + 2] {
                continue;
            }
            for j in i + 1..nums.len() - 1 {
                if nums[j] == nums[j + 1] {
                    continue;
                }
                for k in j + 1..nums.len() {
                    if nums[i] != nums[j] && nums[i] != nums[k] && nums[j] != nums[k] {
                        count += 1;
                    }
                }
            }
        }
        count
    }
}

=======

        let mut c: i32 = 0;
        let mut n = nums.clone();
        n.sort();
        for i in 0..n.len() - 2 {
            for j in i + 1..n.len() - 1 {
                for k in j + 1..n.len() {
                    if n[i] != n[j] && n[j] != n[k] && n[i] != n[k] {
                        c += 1;
                    }
                }
            }
        }
        c
    }
}

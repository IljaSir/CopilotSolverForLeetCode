Synthesizing 5/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let num_s = num.to_string();
        let mut count = 0;
        for i in 0..(num_s.len() - k as usize + 1) {
            let s = &num_s[i..i + k as usize];
            let n = s.parse::<i32>().unwrap();
            if n != 0 && num % n == 0 {
                count += 1;
            }
        }
        count

=======

        let mut ans = 0;
        let mut s = num.to_string();
        for i in 0..(s.len() - k as usize + 1) {
            let n: i32 = s[i..i + k as usize].parse().unwrap();
            if n % num == 0 {
                ans += 1;
            }
        }
        ans

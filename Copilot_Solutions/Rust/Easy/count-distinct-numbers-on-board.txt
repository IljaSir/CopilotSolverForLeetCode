Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let n = n as usize;
        let mut v = vec![0; n + 1];
        for i in 1..=n {
            for j in i..=n {
                if j % i == 1 {
                    v[j] += 1;
                }
            }
        }
        v.into_iter().filter(|x| *x == 1).count() as i32

=======

        let mut count = 0;
        let mut arr = vec![false; n as usize + 1];
        for i in 1..=n {
            if !arr[i as usize] {
                count += 1;
                let mut j = i;
                while j <= n {
                    arr[j as usize] = true;
                    j += i;
                }
            }
        }
        count

=======

        let mut count = 0;
        let mut visited = vec![false; n as usize + 1];
        let mut i = 1;
        while i <= n {
            if !visited[i as usize] {
                count += 1;
                let mut j = i;
                while j <= n {
                    visited[j as usize] = true;
                    j += i;
                }
            }
            i += 1;
        }
        count
    }
}

=======

        n

=======

        
    }
}

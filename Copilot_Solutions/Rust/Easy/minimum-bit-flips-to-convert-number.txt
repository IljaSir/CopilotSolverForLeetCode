Synthesizing 9/10 solutions

=======

        let mut ans = 0;
        let mut flip = 0;
        for i in 0..32 {
            let s = (start >> i) & 1;
            let g = (goal >> i) & 1;
            if s == 1 && g == 1 {
                if flip % 2 == 1 {
                    ans += 1;
                    flip += 1;
                }
            } else if s == 0 && g == 1 {
                if flip % 2 == 0 {
                    ans += 1;
                    flip += 1;
                }
            } else if s == 1 && g == 0 {
                if flip % 2 == 0 {
                    ans += 1;
                    flip += 1;
                }
            } else if s == 0 && g == 0 {
                if flip % 2 == 1 {
                    ans += 1;
                    flip += 1;
                }
            }
        }
        ans

=======

        let mut res = 0;
        let mut cur = 0;
        for i in 0..32 {
            let s = (start >> i) & 1;
            let g = (goal >> i) & 1;
            if s == 1 && g == 1 {
                continue;
            } else if s == 0 && g == 0 {
                continue;
            } else if s == 1 && g == 0 {
                if cur == 0 {
                    res += 1;
                    cur = 1;
                } else {
                    cur = 0;
                }
            } else if s == 0 && g == 1 {
                if cur == 0 {
                    res += 1;
                } else {
                    cur = 0;
                }
            }
        }
        res

=======

        let mut start = start;
        let mut goal = goal;
        let mut count = 0;
        while start != 0 || goal != 0 {
            let s = start & 1;
            let g = goal & 1;
            if s != g {
                count += 1;
            }
            start >>= 1;
            goal >>= 1;
        }
        count

=======

        let mut flips = 0;
        let mut flip = 0;
        for i in 0..32 {
            let a = (start >> i) & 1;
            let b = (goal >> i) & 1;
            if a == b {
                flip = 0;
            } else {
                if flip == 0 {
                    flip = 1;
                    flips += 1;
                } else {
                    flip = 0;
                }
            }
        }
        flips

=======

        let mut start = start;
        let mut goal = goal;
        let mut count = 0;
        let mut flip = 0;
        while start > 0 || goal > 0 {
            let s = start & 1;
            let g = goal & 1;
            if s == g {
                flip = 0;
            } else if flip == 0 {
                flip = 1;
                count += 1;
            } else {
                flip = 0;
            }
            start >>= 1;
            goal >>= 1;
        }
        count
    }
}

=======

        let mut start = start;
        let mut goal = goal;
        let mut count = 0;
        let mut flip = false;
        while start > 0 || goal > 0 {
            let s = start % 2;
            let g = goal % 2;
            if flip {
                if s == 0 && g == 0 {
                    count += 1;
                    flip = !flip;
                }
                if s == 1 && g == 1 {
                    count += 1;
                    flip = !flip;
                }
            } else {
                if s == 0 && g == 1 {
                    count += 1;
                    flip = !flip;
                }
                if s == 1 && g == 0 {
                    count += 1;
                }
            }
            start /= 2;
            goal /= 2;
        }
        count

=======

        let mut s = start;
        let mut g = goal;
        let mut ans = 0;
        let mut last = 0;
        let mut i = 0;
        while s != 0 || g != 0 {
            let a = s % 2;
            let b = g % 2;
            s /= 2;
            g /= 2;
            if a == b {
                last = 0;
            } else {
                if last == 0 {
                    ans += 1;
                    last = 1;
                } else {
                    last = 0;
                }
            }
            i += 1;
        }
        ans

=======

        let mut start = start;
        let mut goal = goal;
        let mut ans = 0;
        let mut rev = 0;
        while start > 0 || goal > 0 {
            let x = start % 2;
            let y = goal % 2;
            if x == y {
                rev = 0;
            } else if x == 0 && y == 1 {
                if rev == 1 {
                    rev = 0;
                } else {
                    ans += 1;
                    rev = 1;
                }
            } else {
                if rev == 1 {
                    ans += 1;
                    rev = 0;
                } else {
                    rev = 1;
                }
            }
            start /= 2;
            goal /= 2;
        }
        ans
    }
}

=======

        let mut res = 0;
        let mut flip = 0;
        for i in 0..32 {
            let bit = (goal >> i) & 1;
            if bit == 0 {
                if (start >> i) & 1 == 0 {
                    if flip % 2 == 0 {
                        res += 1;
                        flip += 1;
                    }
                } else {
                    if flip % 2 == 1 {
                        res += 1;
                        flip += 1;
                    }
                }
            } else {
                if (start >> i) & 1 == 0 {
                    if flip % 2 == 1 {
                        res += 1;
                        flip += 1;
                    }
                } else {
                    if flip % 2 == 0 {
                        res += 1;
                        flip += 1;
                    }
                }
            }
        }
        res

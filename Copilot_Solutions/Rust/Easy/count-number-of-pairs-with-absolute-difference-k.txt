Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut count = 0;
        for i in 0..nums.len() {
            for j in i+1..nums.len() {
                if (nums[i] - nums[j]).abs() == k {
                    count += 1;
                }
            }
        }
        count

=======

        let mut count = 0;
        for i in 0..nums.len() {
            for j in i+1..nums.len() {
                if (nums[i] - nums[j]).abs() == k {
                    count += 1;
                }
            }
        }
        count
    }
}

=======

        let mut count = 0;
        for i in 0..nums.len() {
            for j in i+1..nums.len() {
                if (nums[i] - nums[j]).abs() == k {
                    count += 1;
                }
            }
        }
        return count;
    }
}

=======

        let mut res = 0;
        for i in 0..nums.len() {
            for j in i + 1..nums.len() {
                if (nums[i] - nums[j]).abs() == k {
                    res += 1;
                }
            }
        }
        res

=======

        let mut res = 0;
        for i in 0..nums.len() {
            for j in i+1..nums.len() {
                if (nums[i] - nums[j]).abs() == k {
                    res += 1;
                }
            }
        }
        res
    }
}

=======

        let mut cnt = 0;
        for i in 0..nums.len() {
            for j in i + 1..nums.len() {
                if (nums[i] - nums[j]).abs() == k {
                    cnt += 1;
                }
            }
        }
        cnt

=======

        
    }
}

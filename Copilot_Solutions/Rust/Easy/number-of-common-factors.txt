Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut count = 0;
        for i in 1..=a.min(b) {
            if a % i == 0 && b % i == 0 {
                count += 1;
            }
        }
        count

=======

        let mut count = 0;
        for i in 1..=a {
            if a % i == 0 && b % i == 0 {
                count += 1;
            }
        }
        count

=======

        let mut ans = 0;
        for i in 1..=a.min(b) {
            if a % i == 0 && b % i == 0 {
                ans += 1;
            }
        }
        ans

=======

        (1..=a.min(b)).filter(|&x| a % x == 0 && b % x == 0).count() as i32

=======

        let mut count = 0;
        let mut i = 1;
        while i <= a {
            if a % i == 0 && b % i == 0 {
                count += 1;
            }
            i += 1;
        }
        count

=======

        if a == 0 || b == 0 {
            return 0;
        }
        let mut count = 0;
        for i in 1..=a {
            if a % i == 0 && b % i == 0 {
                count += 1;
            }
        }
        count

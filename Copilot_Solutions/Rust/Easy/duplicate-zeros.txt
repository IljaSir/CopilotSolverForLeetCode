Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut i = 0;
        while i < arr.len() {
            if arr[i] == 0 {
                arr.insert(i, 0);
                arr.pop();
                i += 1;
            }
            i += 1;
        }

=======

        let mut i = 0;
        while i < arr.len() {
            if arr[i] == 0 {
                arr.insert(i, 0);
                arr.pop();
                i += 2;
            } else {
                i += 1;
            }
        }

=======

        let mut i = 0;
        while i < arr.len() {
            if arr[i] == 0 {
                arr.insert(i + 1, 0);
                arr.pop();
                i += 2;
            } else {
                i += 1;
            }
        }

=======

        let mut i = 0;
        while i < arr.len() {
            if arr[i] == 0 {
                arr.insert(i + 1, 0);
                arr.pop();
                i += 1;
            }
            i += 1;
        }

=======

        let mut i = 0;
        while i < arr.len() {
            if arr[i] == 0 {
                arr.insert(i, 0);
                i += 1;
                arr.pop();
            }
            i += 1;
        }
    }
}

=======

        let mut i = 0;
        let mut j = 0;
        while j < arr.len() {
            if arr[i] == 0 {
                j += 2;
            } else {
                j += 1;
            }
            i += 1;
        }
        if j == arr.len() + 1 {
            arr[i-1] = 0;
            i -= 2;
        } else {
            i -= 1;
        }
        while i >= 0 {
            if arr[i] == 0 {
                arr[i+j] = 0;
                arr[i+j-1] = 0;
                j -= 2;
            } else {
                arr[i+j] = arr[i];
                j -= 1;
            }
            i -= 1;
        }
    }
}

=======

        let mut i = 0;
        let mut j = 0;
        let mut v = vec![];
        while i < arr.len() {
            if arr[i] == 0 {
                v.push(0);
                v.push(0);
            } else {
                v.push(arr[i]);
            }
            i += 1;
        }
        while j < arr.len() {
            arr[j] = v[j];
            j += 1;
        }

=======

        let mut i = 0;
        let mut j = arr.len();
        while i < j {
            if arr[i] == 0 {
                j -= 1;
                arr.insert(i,0);
                arr.remove(arr.len() - 1);
                i += 2;
            } else {
                i += 1;
            }
        }
    }
}

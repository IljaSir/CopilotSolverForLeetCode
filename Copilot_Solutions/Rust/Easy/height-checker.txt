Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut sorted = heights.clone();
        sorted.sort();
        let mut count = 0;
        for i in 0..heights.len() {
            if heights[i] != sorted[i] {
                count += 1;
            }
        }
        count

=======

        let mut expected = heights.clone();
        expected.sort();
        let mut count = 0;
        for i in 0..heights.len() {
            if heights[i] != expected[i] {
                count += 1;
            }
        }
        count
    }
}

=======

        let mut sorted_heights = heights.clone();
        sorted_heights.sort();
        let mut count = 0;
        for i in 0..heights.len() {
            if heights[i] != sorted_heights[i] {
                count += 1;
            }
        }
        count

=======

        let mut sorted_heights = heights.clone();
        sorted_heights.sort();
        let mut count = 0;
        for i in 0..heights.len() {
            if heights[i] != sorted_heights[i] {
                count += 1;
            }
        }
        count
    }
}

=======

        let mut sorted = heights.clone();
        sorted.sort();
        let mut ans = 0;
        for i in 0..heights.len() {
            if heights[i] != sorted[i] {
                ans += 1;
            }
        }
        ans

=======

        let mut heights = heights;
        heights.sort();
        let mut count = 0;
        for i in 0..heights.len() {
            if heights[i] != heights[i] {
                count += 1;
            }
        }
        count
    }
}

=======

        let mut heights = heights;
        heights.sort();
        let mut count = 0;
        for i in 0..heights.len() {
            if heights[i] != heights[i] {
                count += 1;
            }
        }
        count

=======

        let mut sorted = heights.clone();
        sorted.sort();
        heights.iter().zip(sorted.iter()).filter(|(a, b)| a != b).count() as i32
    }
}

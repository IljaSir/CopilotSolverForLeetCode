Synthesizing 10/10 solutions

=======

        let mut date = date.split('-');
        let year = date.next().unwrap().parse::<i32>().unwrap();
        let month = date.next().unwrap().parse::<i32>().unwrap();
        let day = date.next().unwrap().parse::<i32>().unwrap();
        let mut days = day;
        for i in 1..month {
            days += match i {
                2 => {
                    if year % 400 == 0 || (year % 100 != 0 && year % 4 == 0) { 29 } else { 28 }
                },
                4 | 6 | 9 | 11 => { 30 },
                _ => { 31 }
            }
        }
        days

=======

        let mut year = date[0..4].parse::<i32>().unwrap();
        let mut month = date[5..7].parse::<i32>().unwrap();
        let mut day = date[8..].parse::<i32>().unwrap();
        let mut result = 0;
        let mut days = vec![31,28,31,30,31,30,31,31,30,31,30,31];
        if (year % 4 == 0 && year % 100 != 0) || year % 400 == 0 { days[1] = 29; }
        for i in 0..month-1 { result += days[i as usize]; }
        result += day;
        result

=======

        let mut v = date.split('-').collect::<Vec<&str>>();
        let y: i32 = v[0].parse().unwrap();
        let m: i32 = v[1].parse().unwrap();
        let d: i32 = v[2].parse().unwrap();
        let mut days = d;
        for i in 1..m {
            match i {
                1 => days += 31,
                2 => if y % 4 == 0 && (y % 100 != 0 || y % 400 == 0) { days += 29 } else { days += 28 },
                3 => days += 31,
                4 => days += 30,
                5 => days += 31,
                6 => days += 30,
                7 => days += 31,
                8 => days += 31,
                9 => days += 30,
                10 => days += 31,
                11 => days += 30,
                12 => days += 31,
                _ => (),
            }
        }
        days

=======

        let mut days = 0;
        let mut year = 0;
        let mut month = 0;
        let mut day = 0;
        for (i, c) in date.chars().enumerate() {
            if i < 4 {
                year = year * 10 + c.to_digit(10).unwrap();
            } else if i < 7 {
                month = month * 10 + c.to_digit(10).unwrap();
            } else {
                day = day * 10 + c.to_digit(10).unwrap();
            }
        }
        for i in 1..month {
            days += match i {
                1 | 3 | 5 | 7 | 8 | 10 | 12 => 31,
                4 | 6 | 9 | 11 => 30,
                2 => if (year % 4 == 0 && year % 100 != 0) || year % 400 == 0 {
                    29
                } else {
                    28
                },
                _ => 0,
            };
        }
        days + day
    }
}

=======

        let mut days = 0;
        let mut is_leap = false;
        let mut year = 0;
        let mut month = 0;
        let mut day = 0;
        for (i, c) in date.chars().enumerate() {
            if i < 4 {
                year = year * 10 + c.to_digit(10).unwrap();
            } else if i < 7 {
                month = month * 10 + c.to_digit(10).unwrap();
            } else {
                day = day * 10 + c.to_digit(10).unwrap();
            }
        }
        if year % 400 == 0 {
            is_leap = true;
        } else if year % 100 == 0 {
            is_leap = false;
        } else if year % 4 == 0 {
            is_leap = true;
        } else {
            is_leap = false;
        }
        for i in 1..month {
            if i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12 {
                days += 31;
            } else if i == 2 {
                if is_leap {
                    days += 29;
                } else {
                    days += 28;
                }
            } else {
                days += 30;
            }
        }
        days + day
    }
}

=======

        let mut days = 0;
        let mut year = 0;
        let mut month = 0;
        let mut day = 0;
        let mut is_leap_year = false;
        let mut i = 0;
        for c in date.chars() {
            match i {
                0 => year = year * 10 + c.to_digit(10).unwrap(),
                1 => year = year * 10 + c.to_digit(10).unwrap(),
                2 => year = year * 10 + c.to_digit(10).unwrap(),
                3 => year = year * 10 + c.to_digit(10).unwrap(),
                5 => month = month * 10 + c.to_digit(10).unwrap(),
                6 => month = month * 10 + c.to_digit(10).unwrap(),
                8 => day = day * 10 + c.to_digit(10).unwrap(),
                9 => day = day * 10 + c.to_digit(10).unwrap(),
                _ => (),
            }
            i += 1;
        }
        if year % 4 == 0 {
            if year % 100 == 0 {
                if year % 400 == 0 {
                    is_leap_year = true;
                }
            } else {
                is_leap_year = true;
            }
        }
        for m in 1..month {
            match m {
                1 => days += 31,
                2 => if is_leap_year { days += 29 } else { days += 28 },
                3 => days += 31,
                4 => days += 30,
                5 => days += 31,
                6 => days += 30,
                7 => days += 31,
                8 => days += 31,
                9 => days += 30,
                10 => days += 31,
                11 => days += 30,
                12 => days += 31,
                _ => (),
            }
        }
        days + day
    }
}

=======

        let mut days = 0;
        let mut is_leap = false;
        let mut year = 0;
        let mut month = 0;
        let mut day = 0;
        for (i, ch) in date.chars().enumerate() {
            if i < 4 {
                year = year * 10 + ch as i32 - '0' as i32;
            } else if i < 7 {
                month = month * 10 + ch as i32 - '0' as i32;
            } else {
                day = day * 10 + ch as i32 - '0' as i32;
            }
        }
        if year % 4 == 0 {
            if year % 100 == 0 {
                if year % 400 == 0 {
                    is_leap = true;
                }
            } else {
                is_leap = true;
            }
        }
        for i in 1..month {
            if i == 2 {
                if is_leap {
                    days += 29;
                } else {
                    days += 28;
                }
            } else if i == 4 || i == 6 || i == 9 || i == 11 {
                days += 30;
            } else {
                days += 31;
            }
        }
        days + day

=======

        let mut days = 0;
        let mut is_leap_year = false;
        let date: Vec<i32> = date.split("-").map(|s| s.parse().unwrap()).collect();
        let (year, month, day) = (date[0], date[1], date[2]);
        if year % 4 == 0 && (year % 100 != 0 || year % 400 == 0) {
            is_leap_year = true;
        }
        for i in 1..month {
            days += match i {
                1 | 3 | 5 | 7 | 8 | 10 | 12 => 31,
                4 | 6 | 9 | 11 => 30,
                2 => if is_leap_year { 29 } else { 28 },
                _ => 0,
            };
        }
        days + day
    }
}

=======

        let mut ans = 0;
        let mut month = 0;
        let mut year = 0;
        let mut day = 0;
        let mut is_leap = false;
        let mut day_of_month = vec![31,28,31,30,31,30,31,31,30,31,30,31];
        for i in date.chars() {
            if i == '-' {
                if month == 0 {
                    month = ans;
                    ans = 0;
                } else {
                    year = ans;
                    ans = 0;
                }
            } else {
                ans = ans * 10 + (i as i32 - '0' as i32);
            }
        }
        day = ans;
        if year % 4 == 0 {
            if year % 100 == 0 {
                if year % 400 == 0 {
                    is_leap = true;
                }
            } else {
                is_leap = true;
            }
        }
        if is_leap {
            day_of_month[1] = 29;
        }
        ans = 0;
        for i in 0..month-1 {
            ans += day_of_month[i];
        }
        ans += day;
        ans

=======

        
    }
}

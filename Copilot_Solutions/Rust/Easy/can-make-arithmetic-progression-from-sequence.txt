Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut arr = arr;
        arr.sort();
        let diff = arr[1] - arr[0];
        for i in 2..arr.len() {
            if arr[i] - arr[i - 1] != diff {
                return false;
            }
        }
        true

=======

        let mut arr = arr;
        arr.sort();
        let diff = arr[1] - arr[0];
        for i in 2..arr.len() {
            if arr[i] - arr[i-1] != diff {
                return false;
            }
        }
        true
    }
}

=======

        let mut arr = arr;
        arr.sort();
        let diff = arr[1] - arr[0];
        for i in 1..arr.len() {
            if arr[i] - arr[i - 1] != diff {
                return false;
            }
        }
        true

=======

        let mut arr = arr;
        arr.sort();
        let mut diff = arr[1] - arr[0];
        for i in 2..arr.len() {
            if arr[i] - arr[i-1] != diff {
                return false;
            }
        }
        true

=======

        let mut arr = arr;
        arr.sort();
        let mut diff = 0;
        for i in 1..arr.len() {
            if i == 1 {
                diff = arr[i] - arr[i - 1];
            } else {
                if arr[i] - arr[i - 1] != diff {
                    return false;
                }
            }
        }
        return true;

=======

        let mut arr = arr;
        arr.sort();
        let mut i = 1;
        let diff = arr[1] - arr[0];
        while i < arr.len() {
            if arr[i] - arr[i - 1] != diff {
                return false;
            }
            i += 1;
        }
        return true;
    }
}

Synthesizing 8/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let mut tax = 0.0;
        let mut income = income as f64;
        for bracket in brackets {
            let upper = bracket[0] as f64;
            let percent = bracket[1] as f64;
            if income > upper {
                tax += upper * percent / 100.0;
                income -= upper;
            } else {
                tax += income * percent / 100.0;
                break;
            }
        }
        tax

=======

        let mut tax = 0.0;
        let mut income = income;
        for i in 0..brackets.len() {
            if income > brackets[i][0] {
                tax += brackets[i][0] as f64 * brackets[i][1] as f64 / 100.0;
                income -= brackets[i][0];
            } else {
                tax += income as f64 * brackets[i][1] as f64 / 100.0;
                break;
            }
        }
        tax
    }
}

=======

        let mut tax = 0.0;
        let mut income = income;
        for bracket in brackets {
            let upper = bracket[0];
            let percent = bracket[1];
            let taxed = income.min(upper);
            tax += taxed as f64 * percent as f64 / 100.0;
            income -= taxed;
        }
        tax

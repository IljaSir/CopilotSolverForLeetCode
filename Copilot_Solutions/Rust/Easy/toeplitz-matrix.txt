Synthesizing 10/10 solutions (Duplicates hidden)

=======

        for i in 0..matrix.len() - 1 {
            for j in 0..matrix[0].len() - 1 {
                if matrix[i][j] != matrix[i + 1][j + 1] {
                    return false;
                }
            }
        }
        true
    }
}

=======

        for i in 0..matrix.len()-1 {
            for j in 0..matrix[i].len()-1 {
                if matrix[i][j] != matrix[i+1][j+1] {
                    return false;
                }
            }
        }
        true

=======

        let m = matrix.len();
        let n = matrix[0].len();
        for i in 0..m {
            for j in 0..n {
                if i > 0 && j > 0 && matrix[i-1][j-1] != matrix[i][j] {
                    return false;
                }
            }
        }
        true

=======

        let m = matrix.len();
        let n = matrix[0].len();
        for i in 0..m {
            for j in 0..n {
                if i > 0 && j > 0 && matrix[i][j] != matrix[i - 1][j - 1] {
                    return false;
                }
            }
        }
        true

=======

        let m = matrix.len();
        let n = matrix[0].len();
        for i in 0..m {
            for j in 0..n {
                if i > 0 && j > 0 && matrix[i-1][j-1] != matrix[i][j] {
                    return false;
                }
            }
        }
        true
    }
}

=======

        let (m, n) = (matrix.len(), matrix[0].len());
        for i in 0..m {
            for j in 0..n {
                if i > 0 && j > 0 && matrix[i][j] != matrix[i-1][j-1] {
                    return false;
                }
            }
        }
        true

=======

        for i in 0..matrix.len() {
            for j in 0..matrix[i].len() {
                if i > 0 && j > 0 && matrix[i][j] != matrix[i-1][j-1] {
                    return false;
                }
            }
        }
        true

=======

        let mut matrix = matrix;
        for i in 0..matrix.len() {
            for j in 0..matrix[i].len() {
                if i > 0 && j > 0 && matrix[i-1][j-1] != matrix[i][j] {
                    return false;
                }
            }
        }
        true
    }
}

=======

        
    }
}

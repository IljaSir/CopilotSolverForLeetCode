Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut i = 0;
        while i < bits.len() - 1 {
            if bits[i] == 0 {
                i += 1;
            } else {
                i += 2;
            }
        }
        i == bits.len() - 1
    }
}

=======

        let mut i = 0;
        while i < bits.len() - 1 {
            if bits[i] == 0 {
                i += 1;
            } else {
                i += 2;
            }
        }
        i == bits.len() - 1

=======

        let mut i = 0;
        while i < bits.len() - 1 {
            if bits[i] == 1 {
                i += 2;
            } else {
                i += 1;
            }
        }
        i == bits.len() - 1
    }
}

=======

        let mut i = 0;
        while i < bits.len() - 1 {
            i += if bits[i] == 0 { 1 } else { 2 };
        }
        i == bits.len() - 1

=======

        let mut i = 0;
        while i < bits.len() - 1 {
            i += if bits[i] == 0 { 1 } else { 2 };
        }
        i == bits.len() - 1
    }
}

=======

        let mut i = 0;
        while i < bits.len() {
            if i == bits.len() - 1 {
                return true;
            }
            if bits[i] == 0 {
                i += 1;
            } else {
                i += 2;
            }
        }
        false

=======

        let mut i = 0;
        while i < bits.len() - 1 {
            i += if bits[i] == 1 { 2 } else { 1 };
        }
        i == bits.len() - 1
    }
}

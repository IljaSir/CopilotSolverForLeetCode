Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut s = s.into_bytes();
        let mut t = t.into_bytes();
        s.sort();
        t.sort();
        for i in 0..s.len() {
            if s[i] != t[i] {
                return t[i] as char;
            }
        }
        return t[t.len()-1] as char;

=======

        let mut s = s.into_bytes();
        let mut t = t.into_bytes();
        s.sort();
        t.sort();
        for i in 0..s.len() {
            if s[i] != t[i] {
                return t[i] as char;
            }
        }
        t[t.len()-1] as char

=======

        let mut s = s.into_bytes();
        let mut t = t.into_bytes();
        s.sort();
        t.sort();
        for i in 0..s.len() {
            if s[i] != t[i] {
                return t[i] as char;
            }
        }
        t[s.len()] as char

=======

        let mut s = s.chars().collect::<Vec<_>>();
        let mut t = t.chars().collect::<Vec<_>>();
        s.sort();
        t.sort();
        for i in 0..s.len() {
            if s[i] != t[i] {
                return t[i];
            }
        }
        t[t.len() - 1]

=======

        let mut s = s.as_bytes().to_vec();
        let mut t = t.as_bytes().to_vec();
        s.sort();
        t.sort();
        for i in 0..s.len() {
            if s[i] != t[i] {
                return t[i] as char;
            }
        }
        return t[t.len() - 1] as char;

=======

        let mut sum = 0;
        for c in s.chars() {
            sum ^= c as i32;
        }
        for c in t.chars() {
            sum ^= c as i32;
        }
        sum as u8 as char

=======

        let mut s: Vec<char> = s.chars().collect();
        let mut t: Vec<char> = t.chars().collect();
        s.sort();
        t.sort();
        let mut i = 0;
        while i < s.len() {
            if s[i] != t[i] {
                return t[i];
            }
            i += 1;
        }
        return t[i];

=======

        let mut s = s.into_bytes();
        let mut t = t.into_bytes();
        s.sort();
        t.sort();
        for i in 0..t.len() {
            if s.get(i) != t.get(i) {
                return t[i] as char;
            }
        }
        return ' ';

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        s.split_whitespace().count() as i32

=======

        let mut count = 0;
        let mut is_word = false;
        for c in s.chars() {
            if c == ' ' {
                if is_word {
                    count += 1;
                    is_word = false;
                }
            } else {
                is_word = true;
            }
        }
        if is_word {
            count += 1;
        }
        count
    }
}

=======

        let mut result = 0;
        let mut is_space = true;
        for c in s.chars() {
            if c == ' ' {
                is_space = true;
            } else {
                if is_space {
                    result += 1;
                }
                is_space = false;
            }
        }
        result

=======

        let mut count = 0;
        let mut is_word = false;
        for c in s.chars() {
            if c == ' ' {
                is_word = false;
            } else {
                if !is_word {
                    count += 1;
                    is_word = true;
                }
            }
        }
        count

=======

        let mut count = 0;
        let mut is_space = true;
        for c in s.chars() {
            if c.is_whitespace() {
                is_space = true;
            } else if is_space {
                is_space = false;
                count += 1;
            }
        }
        count
    }
}

=======

        s.split(' ').filter(|&s| !s.is_empty()).count() as i32
    }
}

=======

        let s = s.trim();
        if s.is_empty() {
            return 0;
        }
        let mut count = 0;
        let mut last = ' ';
        for c in s.chars() {
            if c == ' ' && last != ' ' {
                count += 1;
            }
            last = c;
        }
        count + 1

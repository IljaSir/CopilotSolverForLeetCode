Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut i = 0;
        for j in 1..nums.len() {
            if nums[i] != nums[j] {
                i += 1;
                nums[i] = nums[j];
            }
        }
        (i + 1) as i32
    }
}

=======

        let mut i = 0;
        for j in 1..nums.len() {
            if nums[i] != nums[j] {
                i += 1;
                nums[i] = nums[j];
            }
        }
        (i + 1) as i32

=======

        if nums.len() == 0 {
            return 0;
        }
        let mut i = 0;
        for j in 1..nums.len() {
            if nums[i] != nums[j] {
                i += 1;
                nums[i] = nums[j];
            }
        }
        return (i + 1) as i32;
    }
}

=======

        let mut i = 0;
        for j in 1..nums.len() {
            if nums[j] != nums[i] {
                i += 1;
                nums[i] = nums[j];
            }
        }
        (i + 1) as i32
    }
}

=======

        let mut i = 0;
        for j in 1..nums.len() {
            if nums[i] != nums[j] {
                i += 1;
                nums[i] = nums[j];
            }
        }
        i as i32 + 1
    }
}

=======

        let mut i = 0;
        let mut j = 0;
        while j < nums.len() {
            if nums[i] != nums[j] {
                i += 1;
                nums[i] = nums[j];
            }
            j += 1;
        }
        (i + 1) as i32

=======

        let mut i = 0;
        let mut j = 0;
        while j < nums.len() {
            if nums[j] != nums[i] {
                i += 1;
                nums[i] = nums[j];
            }
            j += 1;
        }
        (i + 1) as i32

=======

        let mut i = 0;
        let mut j = 1;
        let n = nums.len();
        while j < n {
            if nums[i] != nums[j] {
                nums[i+1] = nums[j];
                i += 1;
            }
            j += 1;
        }
        (i+1) as i32
    }
}

=======

        let mut i = 0;
        let mut j = 1;
        let mut k = 1;
        while j < nums.len() {
            if nums[i] == nums[j] {
                j += 1;
            } else {
                nums[k] = nums[j];
                k += 1;
                i = j;
                j += 1;
            }
        }
        k as i32

Synthesizing 10/10 solutions

=======

        let mut res = 0;
        for i in 1..time_series.len() {
            res += time_series[i].min(time_series[i - 1] + duration) - time_series[i - 1];
        }
        if !time_series.is_empty() {
            res += duration;
        }
        res

=======

        let mut ans = 0;
        for i in 1..time_series.len() {
            ans += std::cmp::min(time_series[i] - time_series[i - 1], duration);
        }
        ans + duration

=======

        let mut ans = 0;
        for i in 1..time_series.len() {
            ans += time_series[i].min(time_series[i-1] + duration) - time_series[i-1];
        }
        ans + duration

=======

        let mut res = 0;
        let mut last = 0;
        for t in time_series {
            if t > last {
                res += duration;
            } else {
                res += t + duration - last;
            }
            last = t + duration;
        }
        res

=======

        let mut total = 0;
        let mut last = -1;
        for t in time_series {
            if t > last {
                total += duration;
            } else {
                total += t + duration - last - 1;
            }
            last = t + duration - 1;
        }
        total

=======

        let mut time = 0;
        let mut last = 0;
        for t in time_series {
            if t >= last {
                time += duration;
            } else {
                time += t + duration - last;
            }
            last = t + duration;
        }
        time

=======

        let mut time = 0;
        for i in 0..time_series.len() {
            if i == 0 {
                time += duration;
            } else {
                let t = time_series[i] - time_series[i - 1];
                if t >= duration {
                    time += duration;
                } else {
                    time += t;
                }
            }
        }
        time

=======

        let mut total = 0;
        let mut start = 0;
        let mut end = 0;
        for time in time_series {
            if time >= end {
                total += end - start;
                start = time;
            }
            end = time + duration;
        }
        total + end - start

=======

        let mut total = 0;
        let mut last = 0;
        for &t in &time_series {
            if t >= last {
                total += duration;
            } else {
                total += t + duration - last;
            }
            last = t + duration;
        }
        total
    }
}

=======

        let mut sum = 0;
        let mut last = 0;
        for &t in time_series.iter() {
            sum += duration;
            if t < last {
                sum -= last - t;
            }
            last = t + duration;
        }
        sum

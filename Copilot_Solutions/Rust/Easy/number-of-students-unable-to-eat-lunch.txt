Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut students = students;
        let mut sandwiches = sandwiches;
        let mut i = 0;
        while i < students.len() {
            if students[i] == sandwiches[0] {
                students.remove(i);
                sandwiches.remove(0);
                i = 0;
            } else {
                i += 1;
            }
        }
        students.len() as i32
    }
}

=======

        let mut students = students;
        let mut sandwiches = sandwiches;
        let mut count = 0;
        while count < students.len() {
            if students[0] == sandwiches[0] {
                students.remove(0);
                sandwiches.remove(0);
                count = 0;
            } else {
                let student = students.remove(0);
                students.push(student);
                count += 1;
            }
        }
        students.len() as i32

=======

        let mut students = students;
        let mut sandwiches = sandwiches;
        let mut count = 0;
        while count < students.len() {
            if students[0] == sandwiches[0] {
                students.remove(0);
                sandwiches.remove(0);
                count = 0;
            } else {
                students.push(students.remove(0));
                count += 1;
            }
        }
        students.len() as i32

=======

        let mut students = students;
        let mut sandwiches = sandwiches;
        let mut count = 0;
        while !students.is_empty() && count < students.len() {
            if students[0] == sandwiches[0] {
                students.remove(0);
                sandwiches.remove(0);
                count = 0;
            } else {
                let a = students.remove(0);
                students.push(a);
                count += 1;
            }
        }
        students.len() as i32

=======

        let mut students = students;
        let mut sandwiches = sandwiches;
        let mut count = 0;
        while !sandwiches.is_empty() {
            if students[0] == sandwiches[0] {
                students.remove(0);
                sandwiches.remove(0);
                count = 0;
            } else {
                let first = students.remove(0);
                students.push(first);
                count += 1;
                if count == students.len() {
                    break;
                }
            }
        }
        students.len() as i32

=======

        let mut students = students;
        let mut sandwiches = sandwiches;
        let mut count = 0;
        let len = students.len();
        while count < len {
            if students[0] == sandwiches[0] {
                students.remove(0);
                sandwiches.remove(0);
                count = 0;
            } else {
                let s = students.remove(0);
                students.push(s);
                count += 1;
            }
        }
        students.len() as i32

=======

        let mut students = students;
        let mut sandwiches = sandwiches;
        let mut count = 0;
        'outer: loop {
            for i in 0..students.len() {
                if students[i] == sandwiches[0] {
                    students.remove(i);
                    sandwiches.remove(0);
                    count = 0;
                    continue 'outer;
                }
            }
            count += 1;
            if count == students.len() {
                break;
            }
        }
        students.len() as i32

=======

        let (mut o, mut z) = (0,0);
        for s in students {
            if s == 0 { z += 1; } else { o += 1; }
        }
        let mut i = 0;
        while i < sandwiches.len() {
            if sandwiches[i] == 0 {
                if z == 0 { break; }
                z -= 1;
            } else {
                if o == 0 { break; }
                o -= 1;
            }
            i += 1;
        }
        (students.len() - i) as i32

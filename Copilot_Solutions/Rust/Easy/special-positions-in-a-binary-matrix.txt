Synthesizing 10/10 solutions

=======

        let m = mat.len();
        let n = mat[0].len();
        let mut row = vec![0; m];
        let mut col = vec![0; n];
        for i in 0..m {
            for j in 0..n {
                if mat[i][j] == 1 {
                    row[i] += 1;
                    col[j] += 1;
                }
            }
        }
        let mut res = 0;
        for i in 0..m {
            for j in 0..n {
                if mat[i][j] == 1 && row[i] == 1 && col[j] == 1 {
                    res += 1;
                }
            }
        }
        res
    }
}

=======

        let mut row = vec![0; mat.len()];
        let mut col = vec![0; mat[0].len()];
        for i in 0..mat.len() {
            for j in 0..mat[0].len() {
                if mat[i][j] == 1 {
                    row[i] += 1;
                    col[j] += 1;
                }
            }
        }
        let mut res = 0;
        for i in 0..mat.len() {
            for j in 0..mat[0].len() {
                if mat[i][j] == 1 && row[i] == 1 && col[j] == 1 {
                    res += 1;
                }
            }
        }
        res

=======

        let mut rows = vec![0; mat.len()];
        let mut cols = vec![0; mat[0].len()];
        for i in 0..mat.len() {
            for j in 0..mat[i].len() {
                if mat[i][j] == 1 {
                    rows[i] += 1;
                    cols[j] += 1;
                }
            }
        }
        let mut ret = 0;
        for i in 0..mat.len() {
            for j in 0..mat[i].len() {
                if mat[i][j] == 1 && rows[i] == 1 && cols[j] == 1 {
                    ret += 1;
                }
            }
        }
        ret

=======

        let mut count = 0;
        for i in 0..mat.len() {
            for j in 0..mat[i].len() {
                if mat[i][j] == 1 {
                    let mut flag = true;
                    for k in 0..mat.len() {
                        if k == i {
                            continue;
                        }
                        if mat[k][j] == 1 {
                            flag = false;
                            break;
                        }
                    }
                    if flag {
                        for k in 0..mat[i].len() {
                            if k == j {
                                continue;
                            }
                            if mat[i][k] == 1 {
                                flag = false;
                                break;
                            }
                        }
                    }
                    if flag {
                        count += 1;
                    }
                }
            }
        }
        count
    }
}

=======

        let mut count = 0;
        let mut row = vec![0; mat.len()];
        let mut col = vec![0; mat[0].len()];
        for i in 0..mat.len() {
            for j in 0..mat[0].len() {
                if mat[i][j] == 1 {
                    row[i] += 1;
                    col[j] += 1;
                }
            }
        }
        for i in 0..mat.len() {
            for j in 0..mat[0].len() {
                if mat[i][j] == 1 && row[i] == 1 && col[j] == 1 {
                    count += 1;
                }
            }
        }
        count

=======

        let mut count = 0;
        for i in 0..mat.len() {
            for j in 0..mat[i].len() {
                if mat[i][j] == 1 && Solution::is_special(&mat, i, j) {
                    count += 1;
                }
            }
        }
        count
    }
    fn is_special(mat: &Vec<Vec<i32>>, row: usize, col: usize) -> bool {
        let mut count = 0;
        for i in 0..mat.len() {
            if mat[i][col] == 1 {
                count += 1;
            }
        }
        if count > 1 {
            return false;
        }
        count = 0;
        for j in 0..mat[row].len() {
            if mat[row][j] == 1 {
                count += 1;
            }
        }
        count == 1

=======

        let mut ans = 0;
        for i in 0..mat.len() {
            for j in 0..mat[i].len() {
                if mat[i][j] == 1 {
                    let mut flag = true;
                    for ii in 0..mat.len() {
                        if ii != i && mat[ii][j] != 0 {
                            flag = false;
                            break;
                        }
                    }
                    if flag {
                        for jj in 0..mat[i].len() {
                            if jj != j && mat[i][jj] != 0 {
                                flag = false;
                                break;
                            }
                        }
                    }
                    if flag {
                        ans += 1;
                    }
                }
            }
        }
        ans
    }
}

=======

        let mut r = vec![0; mat.len()];
        let mut c = vec![0; mat[0].len()];
        for (i, row) in mat.iter().enumerate() {
            for (j, &v) in row.iter().enumerate() {
                if v == 1 {
                    r[i] += 1;
                    c[j] += 1;
                }
            }
        }
        let mut res = 0;
        for (i, row) in mat.iter().enumerate() {
            for (j, &v) in row.iter().enumerate() {
                if v == 1 && r[i] == 1 && c[j] == 1 {
                    res += 1;
                }
            }
        }
        res

=======

        let mut row = vec![0; mat.len()];
        let mut col = vec![0; mat[0].len()];
        for (i, v) in mat.iter().enumerate() {
            for (j, w) in v.iter().enumerate() {
                row[i] += w;
                col[j] += w;
            }
        }
        let mut ans = 0;
        for (i, v) in mat.iter().enumerate() {
            for (j, w) in v.iter().enumerate() {
                if *w == 1 && row[i] == 1 && col[j] == 1 {
                    ans += 1;
                }
            }
        }
        ans
    }
}

=======

        let n = mat.len();
        let m = mat[0].len();
        let mut ans = 0;
        let mut row = vec![0; n];
        let mut col = vec![0; m];
        for i in 0..n {
            for j in 0..m {
                if mat[i][j] == 1 {
                    row[i] += 1;
                    col[j] += 1;
                }
            }
        }
        for i in 0..n {
            for j in 0..m {
                if mat[i][j] == 1 && row[i] == 1 && col[j] == 1 {
                    ans += 1;
                }
            }
        }
        ans

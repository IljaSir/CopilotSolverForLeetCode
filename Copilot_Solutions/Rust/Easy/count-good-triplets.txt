Synthesizing 9/10 solutions (Duplicates hidden)

=======

        let mut count = 0;
        for i in 0..arr.len() {
            for j in (i + 1)..arr.len() {
                for k in (j + 1)..arr.len() {
                    if (arr[i] - arr[j]).abs() <= a
                        && (arr[j] - arr[k]).abs() <= b
                        && (arr[i] - arr[k]).abs() <= c
                    {
                        count += 1;
                    }
                }
            }
        }
        count

=======

        let mut count = 0;
        for i in 0..arr.len() {
            for j in i+1..arr.len() {
                for k in j+1..arr.len() {
                    if (arr[i] - arr[j]).abs() <= a && (arr[j] - arr[k]).abs() <= b && (arr[i] - arr[k]).abs() <= c {
                        count += 1;
                    }
                }
            }
        }
        count

=======

        let mut ans = 0;
        for i in 0..arr.len() - 2 {
            for j in i + 1..arr.len() - 1 {
                for k in j + 1..arr.len() {
                    if (arr[i] - arr[j]).abs() <= a
                        && (arr[j] - arr[k]).abs() <= b
                        && (arr[i] - arr[k]).abs() <= c
                    {
                        ans += 1;
                    }
                }
            }
        }
        ans

=======

        let mut cnt = 0;
        for i in 0..arr.len() {
            for j in i+1..arr.len() {
                for k in j+1..arr.len() {
                    if (arr[i] - arr[j]).abs() <= a && (arr[j] - arr[k]).abs() <= b && (arr[i] - arr[k]).abs() <= c {
                        cnt += 1;
                    }
                }
            }
        }
        cnt

=======

        let mut ans = 0;
        for i in 0..arr.len() {
            for j in i+1..arr.len() {
                for k in j+1..arr.len() {
                    if (arr[i]-arr[j]).abs() <= a && (arr[j]-arr[k]).abs() <= b && (arr[i]-arr[k]).abs() <= c {
                        ans += 1;
                    }
                }
            }
        }
        ans
    }
}

=======

        let mut ret = 0;
        for i in 0..arr.len() {
            for j in i+1..arr.len() {
                for k in j+1..arr.len() {
                    if (arr[i] - arr[j]).abs() <= a && (arr[j] - arr[k]).abs() <= b && (arr[i] - arr[k]).abs() <= c {
                        ret += 1;
                    }
                }
            }
        }
        ret

=======

        let mut count = 0;
        let n = arr.len();
        for i in 0..n {
            for j in (i + 1)..n {
                for k in (j + 1)..n {
                    if (arr[i] - arr[j]).abs() <= a && (arr[j] - arr[k]).abs() <= b && (arr[i] - arr[k]).abs() <= c {
                        count += 1;
                    }
                }
            }
        }
        count

=======

        let mut count = 0;
        for i in 0..arr.len()-2 {
            for j in i+1..arr.len()-1 {
                for k in j+1..arr.len() {
                    let (x, y, z) = (arr[i], arr[j], arr[k]);
                    if (x - y).abs() <= a && (y - z).abs() <= b && (x - z).abs() <= c {
                        count += 1;
                    }
                }
            }
        }
        count

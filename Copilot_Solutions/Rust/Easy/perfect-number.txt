Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if num == 1 {
            return false;
        }
        let mut sum = 1;
        let mut i = 2;
        while i * i <= num {
            if num % i == 0 {
                sum += i;
                if i * i != num {
                    sum += num / i;
                }
            }
            i += 1;
        }
        sum == num

=======

        if num == 1 {
            return false;
        }
        let mut sum = 1;
        let mut i = 2;
        while i * i < num {
            if num % i == 0 {
                sum += i + num / i;
            }
            i += 1;
        }
        if i * i == num {
            sum += i;
        }
        sum == num

=======

        if num <= 1 {
            return false;
        }
        let mut sum = 1;
        let mut i = 2;
        while i * i <= num {
            if num % i == 0 {
                sum += i;
                if i * i != num {
                    sum += num / i;
                }
            }
            i += 1;
        }
        sum == num

=======

        let mut sum = 1;
        let mut i = 2;
        while i * i <= num {
            if num % i == 0 {
                sum += i;
                sum += num / i;
            }
            i += 1;
        }
        sum == num

=======

        let mut sum = 0;
        for i in 1..=num/2 {
            if num % i == 0 {
                sum += i;
            }
        }
        sum == num

=======

        if num == 1 { return false; }
        let mut sum = 1;
        let mut i = 2;
        let mut n = num;
        while i * i <= n {
            if n % i == 0 {
                sum += i;
                if i * i != n {
                    sum += n / i;
                }
            }
            i += 1;
        }
        sum == num

=======

        let mut sum = 1;
        let mut i = 2;
        while i * i <= num {
            if num % i == 0 {
                sum += i + num / i;
            }
            if i * i == num {
                sum -= i;
            }
            i += 1;
        }
        sum == num && num > 1

=======

        let mut sum = 0;
        for i in 1..(num as f64).sqrt() as i32 {
            if num % i == 0 {
                sum += i;
                if i != 1 && i != num / i {
                    sum += num / i;
                }
            }
        }
        sum == num

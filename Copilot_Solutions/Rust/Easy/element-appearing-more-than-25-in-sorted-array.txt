Synthesizing 10/10 solutions

=======

        let len = arr.len();
        for i in 0..len {
            if i + len / 4 < len && arr[i] == arr[i + len / 4] {
                return arr[i];
            }
        }
        -1

=======

        let n = arr.len();
        let mut i = 0;
        while i < n {
            let j = i + 1;
            while j < n && arr[j] == arr[i] {
                j += 1;
            }
            if j - i > n / 4 {
                return arr[i];
            }
            i = j;
        }
        0

=======

        let n = arr.len();
        for i in 0..n {
            if arr[i] == arr[i + (n / 4)] {
                return arr[i];
            }
        }
        0

=======

        let l = arr.len();
        let mut i = 0;
        while i < l {
            let mut j = i;
            while j < l && arr[j] == arr[i] {
                j += 1;
            }
            if (j - i) * 4 > l {
                return arr[i];
            }
            i = j;
        }
        -1

=======

        let n = arr.len();
        let mut i = 0;
        let mut j = 0;
        while i < n {
            while j < n && arr[j] == arr[i] {
                j += 1;
            }
            if j - i > n / 4 {
                return arr[i];
            }
            i = j;
        }
        0

=======

        let n = arr.len();
        let mut count = 0;
        let mut last = arr[0];
        for i in 0..n {
            if arr[i] == last {
                count += 1;
            } else {
                last = arr[i];
                count = 1;
            }
            if count > n / 4 {
                return arr[i];
            }
        }
        0

=======

        let mut cnt = 1;
        let mut ans = arr[0];
        for i in 1..arr.len() {
            if arr[i] == ans {
                cnt += 1;
            } else {
                ans = arr[i];
                cnt = 1;
            }
            if cnt * 4 > arr.len() {
                return ans;
            }
        }
        ans

=======

        let mut i = 0;
        let mut j = 0;
        while j < arr.len() {
            if arr[i] != arr[j] {
                if j - i > arr.len() / 4 {
                    return arr[i];
                }
                i = j;
            }
            j += 1;
        }
        arr[i]

=======

        let mut max = 0;
        let mut max_value = 0;
        let mut current = 0;
        let mut current_value = 0;
        for i in 0..arr.len() {
            if arr[i] == current_value {
                current += 1;
            } else {
                current_value = arr[i];
                current = 1;
            }
            if current > max {
                max = current;
                max_value = current_value;
            }
        }
        max_value

=======

        let mut count = 0;
        let mut cur = arr[0];
        let mut max = 0;
        let mut ret = 0;
        for i in 0..arr.len() {
            if arr[i] == cur {
                count += 1;
            } else {
                if count > max {
                    max = count;
                    ret = cur;
                }
                count = 1;
                cur = arr[i];
            }
        }
        if count > max {
            max = count;
            ret = cur;
        }
        ret

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let max = nums.iter().max().unwrap();
        let min = nums.iter().min().unwrap();
        if max - min > 2 * k {
            max - min - 2 * k
        } else {
            0
        }
    }
}

=======

        let (mut min, mut max) = (nums[0], nums[0]);
        for i in 1..nums.len() {
            min = min.min(nums[i]);
            max = max.max(nums[i]);
        }
        let diff = max - min;
        if diff <= 2 * k {
            0
        } else {
            diff - 2 * k
        }

=======

        let (mut min, mut max) = (nums[0], nums[0]);
        for n in nums {
            min = min.min(n);
            max = max.max(n);
        }
        (max - min - 2 * k).max(0)

=======

        let (mut min, mut max) = (nums[0], nums[0]);
        for i in 0..nums.len() {
            min = min.min(nums[i]);
            max = max.max(nums[i]);
        }
        (max - min - 2 * k).max(0)

=======

        let (mut min, mut max) = (nums[0], nums[0]);
        for &n in &nums {
            min = min.min(n);
            max = max.max(n);
        }
        (max - min - 2 * k).max(0)

=======

        let (mut min, mut max) = (nums[0], nums[0]);
        for &n in nums.iter() {
            min = min.min(n);
            max = max.max(n);
        }
        (max - min - 2 * k).max(0)

=======

        let (mut min, mut max) = (i32::MAX, i32::MIN);
        for n in nums {
            if n < min {
                min = n;
            }
            if n > max {
                max = n;
            }
        }
        if max - min > 2 * k {
            max - min - 2 * k
        } else {
            0
        }

=======

        let mut min = nums[0];
        let mut max = nums[0];
        for i in 1..nums.len() {
            if min > nums[i] {
                min = nums[i];
            }
            if max < nums[i] {
                max = nums[i];
            }
        }
        if min + k >= max - k {
            0
        } else {
            max - min - 2 * k
        }

=======

        let max = nums.iter().max().unwrap();
        let min = nums.iter().min().unwrap();
        let diff = max - min;
        if diff <= 2 * k {
            return 0;
        }
        return diff - 2 * k;

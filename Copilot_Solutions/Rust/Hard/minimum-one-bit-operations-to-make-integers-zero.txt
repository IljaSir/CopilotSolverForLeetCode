Synthesizing 6/10 solutions (Duplicates hidden)

=======

        let mut n = n;
        let mut res = 0;
        while n > 0 {
            res ^= n;
            n >>= 1;
        }
        res

=======

        
    }
}

=======

        let mut n = n;
        let mut ans = 0;
        let mut k = 30;
        while k >= 0 {
            if n & (1 << k) != 0 {
                ans += (1 << (k + 1)) - 1;
                n ^= (1 << (k + 1)) - 1;
            }
            k -= 1;
        }
        ans

=======

        let mut x = n;
        let mut y = 0;
        while x != 0 {
            y ^= x;
            x >>= 1;
        }
        y

Synthesizing 8/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let mut tasks = tasks;
        tasks.sort_by(|a, b| b[1].cmp(&a[1]));
        let mut energy = 0;
        for task in tasks {
            energy = std::cmp::max(energy + task[0], task[1]);
        }
        energy

=======

        let mut tasks = tasks;
        tasks.sort_by(|a, b| a[1].cmp(&b[1]));
        let mut ans = 0;
        let mut energy = 0;
        for task in tasks {
            if energy < task[1] {
                ans += task[1] - energy;
                energy = task[1];
            }
            energy -= task[0];
        }
        ans
    }
}

=======

        let mut tasks = tasks;
        tasks.sort_unstable_by_key(|t| t[1] - t[0]);
        let mut ans = tasks.iter().map(|t| t[1]).sum::<i32>();
        let mut cur = ans;
        for t in tasks {
            cur -= t[0];
            ans = ans.min(cur);
        }
        ans
    }
}

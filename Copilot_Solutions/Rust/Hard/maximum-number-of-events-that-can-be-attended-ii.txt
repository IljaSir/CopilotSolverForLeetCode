Synthesizing 1/10 solutions

=======

        let n = events.len();
        let mut dp = vec![vec![0; k as usize + 1]; n + 1];
        let mut events = events;
        events.sort();
        for i in 1..=n {
            for j in 1..=k as usize {
                let mut l = 0;
                let mut r = i - 1;
                while l < r {
                    let m = l + (r - l + 1) / 2;
                    if events[m - 1][1] < events[i - 1][0] {
                        l = m;
                    } else {
                        r = m - 1;
                    }
                }
                if events[l][1] < events[i - 1][0] {
                    dp[i][j] = dp[l][j - 1] + events[i - 1][2];
                }
                dp[i][j] = dp[i][j].max(dp[i - 1][j]);
            }
        }
        *dp[n].iter().max().unwrap()

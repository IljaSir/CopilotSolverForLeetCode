Synthesizing 7/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let n = n as usize;
        let max_value = max_value as usize;
        let mut dp = vec![vec![0; n + 1]; max_value + 1];
        for i in 1..=max_value {
            dp[i][1] = 1;
        }
        for j in 2..=n {
            for i in 1..=max_value {
                for k in 1..=i {
                    if i % k == 0 {
                        dp[i][j] = (dp[i][j] + dp[k][j - 1]) % 1000000007;
                    }
                }
            }
        }
        let mut ans = 0;
        for i in 1..=max_value {
            ans = (ans + dp[i][n]) % 1000000007;
        }
        ans

=======

        let n = n as usize;
        let max_value = max_value as usize;
        let mut dp = vec![vec![0; n + 1]; max_value + 1];
        let mut sum = vec![vec![0; n + 1]; max_value + 1];
        for i in 1..=max_value {
            dp[i][1] = 1;
            sum[i][1] = 1;
        }
        for i in 1..=max_value {
            for j in 2..=n {
                for k in 1..=i {
                    if i % k == 0 {
                        dp[i][j] = (dp[i][j] + sum[k][j - 1]) % 1000000007;
                    }
                }
                sum[i][j] = (sum[i][j - 1] + dp[i][j]) % 1000000007;
            }
        }
        let mut ans = 0;
        for i in 1..=max_value {
            ans = (ans + dp[i][n]) % 1000000007;
        }
        ans
    }
}

=======

        let mut dp = vec![vec![0; max_value as usize + 1]; n as usize + 1];
        let mut sum = vec![0; max_value as usize + 1];
        let mut res = 0;
        for i in 1..=max_value {
            dp[1][i as usize] = 1;
            sum[i as usize] = (sum[i as usize - 1] + dp[1][i as usize]) % 1000000007;
        }
        for i in 2..=n {
            for j in 1..=max_value {
                let mut k = j;
                while k <= max_value {
                    dp[i as usize][k as usize] = (dp[i as usize][k as usize] + sum[j as usize - 1]) % 1000000007;
                    k += j;
                }
                sum[j as usize] = (sum[j as usize - 1] + dp[i as usize][j as usize]) % 1000000007;
            }
        }
        for i in 1..=max_value {
            res = (res + dp[n as usize][i as usize]) % 1000000007;
        }
        res

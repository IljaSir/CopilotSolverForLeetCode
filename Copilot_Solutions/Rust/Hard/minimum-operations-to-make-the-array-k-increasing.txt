Synthesizing 5/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let n = arr.len();
        let mut dp = vec![0; n];
        for i in 1..n {
            dp[i] = dp[i - 1] + (arr[i] - arr[i - 1]).max(0);
            if i >= k as usize {
                dp[i] = dp[i].min(dp[i - k as usize] + (arr[i - k as usize] - arr[i]).max(0));
            }
        }
        dp[n - 1]

=======

        let mut dp = vec![0; arr.len()];
        let mut last = 0;
        for i in 1..arr.len() {
            let mut mi = arr[i] - arr[i-1];
            if i as i32 >= k {
                mi = mi.max(arr[i] - arr[last]);
            }
            dp[i] = dp[i-1] + mi;
            if mi > 0 {
                last = i;
            }
        }
        dp[arr.len()-1]
    }
}

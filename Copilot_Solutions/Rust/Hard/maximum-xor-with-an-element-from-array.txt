Synthesizing 4/10 solutions

=======

        let mut res = vec![];
        for q in queries {
            let mut max = -1;
            for n in nums.iter() {
                if n <= &q[1] {
                    max = max.max(q[0] ^ n);
                }
            }
            res.push(max);
        }
        res

=======

        let mut nums = nums;
        let mut queries = queries;
        nums.sort();
        for i in 0..queries.len() {
            let mut res = -1;
            for j in 0..nums.len() {
                if nums[j] > queries[i][1] {
                    break;
                }
                res = res.max(nums[j] ^ queries[i][0]);
            }
            queries[i][0] = res;
        }
        queries.iter().map(|i| i[0]).collect()
    }
}

=======

        let mut nums = nums;
        let mut queries = queries;
        let mut answer = Vec::new();
        nums.sort();
        for i in 0..queries.len() {
            let mut max = -1;
            for j in 0..nums.len() {
                if nums[j] > queries[i][1] {
                    break;
                }
                max = max.max(nums[j] ^ queries[i][0]);
            }
            answer.push(max);
        }
        answer
    }
}

=======

        let mut nums = nums;
        let mut queries = queries;
        let mut result = Vec::new();
        nums.sort();
        for i in queries {
            let (x, m) = (i[0], i[1]);
            let mut max = -1;
            for j in nums.iter() {
                if j > &m {
                    break;
                }
                max = max.max(j ^ x);
            }
            result.push(max);
        }
        result
    }
}

Synthesizing 9/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let mut stack = vec![];
        let mut sign = 1;
        let mut res = 0;
        let mut num = 0;
        for c in s.chars() {
            if c.is_digit(10) {
                num = num * 10 + c.to_digit(10).unwrap() as i32;
            } else if c == '+' {
                res += sign * num;
                sign = 1;
                num = 0;
            } else if c == '-' {
                res += sign * num;
                sign = -1;
                num = 0;
            } else if c == '(' {
                stack.push(res);
                stack.push(sign);
                res = 0;
                sign = 1;
            } else if c == ')' {
                res += sign * num;
                res *= stack.pop().unwrap();
                res += stack.pop().unwrap();
                num = 0;
            }
        }
        res + sign * num

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let mut dp = vec![0; 3];
        for &n in nums.iter() {
            dp[n as usize] = (dp[n as usize] * 2 + if n == 0 { 1 } else { dp[(n - 1) as usize] }) % 1_000_000_007;
        }
        dp[2]

=======

        let mut dp = [0; 3];
        for num in nums {
            dp[num as usize] = (dp[num as usize] + dp[(num - 1).max(0) as usize] + 1) % 1_000_000_007;
        }
        dp[2]
    }
}

=======

        let mut dp = vec![0; 3];
        let modu = 1_000_000_007;
        for n in nums {
            if n == 0 {
                dp[0] = (dp[0] * 2 + 1) % modu;
            } else if n == 1 {
                dp[1] = (dp[1] * 2 + dp[0]) % modu;
            } else {
                dp[2] = (dp[2] * 2 + dp[1]) % modu;
            }
        }
        dp[2]

=======

        let mut dp = vec![0; 3];
        let mut modd = 1_000_000_007;
        for i in 0..nums.len() {
            let idx = nums[i] as usize;
            if idx == 0 {
                dp[0] = (dp[0] * 2 + 1) % modd;
            } else if idx == 1 {
                dp[1] = (dp[1] * 2 + dp[0]) % modd;
            } else {
                dp[2] = (dp[2] * 2 + dp[1]) % modd;
            }
        }
        return dp[2];

Synthesizing 4/10 solutions

=======

        
    }
}

=======

        let mut nums = nums;
        let mut ans = 0;
        while nums.iter().any(|&x| x > 0) {
            ans += 1;
            for i in 0..nums.len() {
                if nums[i] % 2 == 1 {
                    nums[i] -= 1;
                } else {
                    nums[i] /= 2;
                }
            }
        }
        ans

=======

        let mut nums = nums;
        let mut ans = 0;
        while nums.iter().any(|&x| x > 0) {
            let mut carry = 0;
            for i in 0..nums.len() {
                if nums[i] & 1 == 1 {
                    nums[i] -= 1;
                    ans += 1;
                }
                nums[i] >>= 1;
                carry += nums[i];
            }
            if carry > 0 {
                ans += 1;
            }
        }
        ans

=======

        let mut nums = nums;
        let mut count = 0;
        loop {
            let mut has_odd = false;
            for i in 0..nums.len() {
                if nums[i] % 2 == 1 {
                    has_odd = true;
                    nums[i] -= 1;
                    count += 1;
                }
            }
            if !has_odd {
                break;
            }
            for i in 0..nums.len() {
                nums[i] /= 2;
            }
            count += 1;
        }
        count

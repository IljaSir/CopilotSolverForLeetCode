Synthesizing 9/10 solutions

=======

        let mut price = price;
        price.sort();
        let mut ans = std::i32::MAX;
        for i in 0..price.len() - k as usize + 1 {
            ans = ans.min(price[i + k as usize - 1] - price[i]);
        }
        ans

=======

        let mut price = price;
        price.sort();
        let mut min = std::i32::MAX;
        for i in 0..price.len() - k as usize + 1 {
            min = min.min(price[i + k as usize - 1] - price[i]);
        }
        min

=======

        let mut price = price;
        price.sort();
        let mut ans = price[k as usize - 1] - price[0];
        for i in 1..=price.len() - k as usize {
            ans = ans.max(price[i + k as usize - 1] - price[i]);
        }
        ans

=======

        let mut price = price;
        price.sort();
        let mut min_diff = std::i32::MAX;
        for i in 0..price.len() - k as usize + 1 {
            let diff = price[i + k as usize - 1] - price[i];
            if diff < min_diff {
                min_diff = diff;
            }
        }
        min_diff

=======

        let mut price = price;
        price.sort();
        let mut max = 0;
        for i in 0..(price.len() - k as usize + 1) {
            max = max.max(price[i + k as usize - 1] - price[i]);
        }
        max

=======

        let mut price = price;
        price.sort();
        let mut min = i32::MAX;
        for i in 0..price.len() - k as usize + 1 {
            let diff = price[i + k as usize - 1] - price[i];
            if diff < min {
                min = diff;
            }
        }
        min

=======

        let mut price = price;
        price.sort();
        let mut left = 0;
        let mut right = k as usize - 1;
        let mut max_diff = price[right] - price[left];
        while right < price.len() {
            max_diff = max_diff.max(price[right] - price[left]);
            left += 1;
            right += 1;
        }
        max_diff

=======

        
    }
}

=======

        let mut price = price;
        price.sort();
        let mut ans = price[price.len() - 1];
        for i in 0..price.len() - k as usize {
            ans = ans.min(price[i + k as usize - 1] - price[i]);
        }
        ans

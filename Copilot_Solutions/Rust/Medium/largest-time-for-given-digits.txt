Synthesizing 10/10 solutions

=======

        let mut max = -1;
        for i in 0..4 {
            for j in 0..4 {
                for k in 0..4 {
                    if i == j || i == k || j == k {
                        continue;
                    }
                    let l = 6 - i - j - k;
                    let hour = arr[i] * 10 + arr[j];
                    let min = arr[k] * 10 + arr[l];
                    if hour < 24 && min < 60 {
                        max = max.max(hour * 60 + min);
                    }
                }
            }
        }
        if max == -1 {
            return "".to_string();
        }
        format!("{:02}:{:02}", max / 60, max % 60)

=======

        let mut arr = arr;
        arr.sort();
        for i in (0..4).rev() {
            for j in (0..4).rev() {
                if i == j { continue; }
                for k in (0..4).rev() {
                    if i == k || j == k { continue; }
                    let l = 6 - i - j - k;
                    if arr[i] * 10 + arr[j] < 24 && arr[k] * 10 + arr[l] < 60 {
                        return format!("{:02}:{:02}", arr[i] * 10 + arr[j], arr[k] * 10 + arr[l]);
                    }
                }
            }
        }
        String::new()

=======

        let mut arr = arr;
        arr.sort();
        arr.reverse();
        for i in 0..4 {
            for j in 0..4 {
                if i != j {
                    for k in 0..4 {
                        if i != k && j != k {
                            let l = 6 - i - j - k;
                            let hour = arr[i] * 10 + arr[j];
                            let minute = arr[k] * 10 + arr[l];
                            if hour < 24 && minute < 60 {
                                return format!("{}{}:{}{}", arr[i], arr[j], arr[k], arr[l]);
                            }
                        }
                    }
                }
            }
        }
        String::new()

=======

        let mut arr = arr;
        arr.sort();
        let mut res = String::from("");
        for i in (0..4).rev() {
            for j in (0..4).rev() {
                for k in (0..4).rev() {
                    if i == j || i == k || j == k {
                        continue;
                    }
                    let hour = arr[i] * 10 + arr[j];
                    let min = arr[k] * 10 + arr[6 - i - j - k];
                    if hour < 24 && min < 60 {
                        res = format!("{}{}:{}{}", arr[i], arr[j], arr[k], arr[6 - i - j - k]);
                        return res;
                    }
                }
            }
        }
        res

=======

        let mut arr = arr;
        arr.sort();
        let mut res = String::new();
        for i in (0..arr.len()).rev() {
            for j in (0..i).rev() {
                for k in (0..j).rev() {
                    let h = arr[i] * 10 + arr[j];
                    let m = arr[k] * 10 + arr[k ^ 1];
                    if h < 24 && m < 60 {
                        res.push_str(&format!("{:02}:{:02}", h, m));
                        return res;
                    }
                }
            }
        }
        res

=======

        let mut a = arr;
        a.sort();
        let mut res = String::new();
        for i in (0..4).rev() {
            for j in (0..4).rev() {
                if i == j { continue; }
                for k in (0..4).rev() {
                    if k == i || k == j { continue; }
                    let l = 6 - i - j - k;
                    if a[i] * 10 + a[j] < 24 && a[k] * 10 + a[l] < 60 {
                        res = format!("{}{}:{}{}", a[i], a[j], a[k], a[l]);
                        break;
                    }
                }
            }
        }
        res

=======

        let mut a = arr;
        a.sort();
        let mut res = String::new();
        for i in (0..4).rev() {
            for j in (0..4).rev() {
                if i == j { continue; }
                for k in (0..4).rev() {
                    if k == j || k == i { continue; }
                    let l = 6 - i - j - k;
                    let hour = a[i] * 10 + a[j];
                    let min = a[k] * 10 + a[l];
                    if hour < 24 && min < 60 {
                        res = format!("{}{}:{}{}", a[i], a[j], a[k], a[l]);
                        return res;
                    }
                }
            }
        }
        res

=======

        let mut arr = arr;
        arr.sort_unstable();
        let mut res = String::new();
        for i in (0..4).rev() {
            for j in (0..4).rev() {
                if j == i {
                    continue;
                }
                for k in (0..4).rev() {
                    if k == i || k == j {
                        continue;
                    }
                    let l = 6 - i - j - k;
                    let h = arr[i] * 10 + arr[j];
                    let m = arr[k] * 10 + arr[l];
                    if h < 24 && m < 60 {
                        res = format!("{:02}:{:02}", h, m);
                        return res;
                    }
                }
            }
        }
        res

=======

        let mut max = -1;
        let mut max_i = 0;
        let mut max_j = 1;
        let mut max_k = 2;
        let mut max_l = 3;
        for i in 0..4 {
            for j in 0..4 {
                for k in 0..4 {
                    for l in 0..4 {
                        if i == j || i == k || i == l || j == k || j == l || k == l {
                            continue;
                        }
                        let hh = arr[i] * 10 + arr[j];
                        let mm = arr[k] * 10 + arr[l];
                        if hh < 24 && mm < 60 {
                            let time = hh * 60 + mm;
                            if time > max {
                                max = time;
                                max_i = i;
                                max_j = j;
                                max_k = k;
                                max_l = l;
                            }
                        }
                    }
                }
            }
        }
        if max == -1 {
            String::from("")
        } else {
            format!("{:02}:{:02}", arr[max_i] * 10 + arr[max_j], arr[max_k] * 10 + arr[max_l])
        }

=======

        let mut arr = arr;
        arr.sort();
        let mut time = String::new();
        let mut i = 3;
        while i >= 0 {
            if arr[i] <= 2 {
                time.push((arr[i] + 48) as u8 as char);
                let mut j = 3;
                while j >= 0 {
                    if j == i {
                        j -= 1;
                        continue;
                    }
                    if arr[i] == 2 && arr[j] >= 4 {
                        j -= 1;
                        continue;
                    }
                    time.push((arr[j] + 48) as u8 as char);
                    time.push(':');
                    let mut k = 3;
                    while k >= 0 {
                        if k == i || k == j {
                            k -= 1;
                            continue;
                        }
                        time.push((arr[k] + 48) as u8 as char);
                        let mut l = 3;
                        while l >= 0 {
                            if l == i || l == j || l == k {
                                l -= 1;
                                continue;
                            }
                            time.push((arr[l] + 48) as u8 as char);
                            return time;
                        }
                    }
                }
            }
            i -= 1;
        }
        time
    }
}

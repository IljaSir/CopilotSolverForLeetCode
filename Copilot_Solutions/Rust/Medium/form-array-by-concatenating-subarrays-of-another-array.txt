Synthesizing 7/10 solutions (Duplicates hidden)

=======

        let mut i = 0;
        for group in groups {
            let mut found = false;
            while i + group.len() <= nums.len() {
                if nums[i..i + group.len()] == group {
                    found = true;
                    i += group.len();
                    break;
                } else {
                    i += 1;
                }
            }
            if !found {
                return false;
            }
        }
        true

=======

        
    }
}

=======

        let mut i = 0;
        for group in &groups {
            let mut j = i;
            while j <= nums.len() - group.len() {
                if nums[j..j + group.len()] == group[..] {
                    i = j + group.len();
                    break;
                }
                j += 1;
            }
            if j > nums.len() - group.len() {
                return false;
            }
        }
        true

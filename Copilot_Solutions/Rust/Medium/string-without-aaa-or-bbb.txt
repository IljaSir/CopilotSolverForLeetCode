Synthesizing 3/10 solutions

=======

        
    }
}

=======

        let mut a = a;
        let mut b = b;
        let mut res = String::new();
        while a > 0 || b > 0 {
            let mut write_a = false;
            let l = res.len();
            if l >= 2 && res[l - 1..] == res[l - 2..l] {
                if res[l - 1..] == "b" {
                    write_a = true;
                }
            } else {
                if a >= b {
                    write_a = true;
                }
            }
            if write_a {
                res.push('a');
                a -= 1;
            } else {
                res.push('b');
                b -= 1;
            }
        }
        res
    }
}

=======

        let mut a = a;
        let mut b = b;
        let mut s = String::new();
        let mut last = ' ';
        while a > 0 || b > 0 {
            let mut use_a = false;
            if a > b {
                use_a = true;
            } else if a < b {
                use_a = false;
            } else {
                use_a = last != 'a';
            }
            if use_a {
                if last == 'a' {
                    s.push('b');
                    b -= 1;
                } else {
                    s.push('a');
                    a -= 1;
                }
            } else {
                if last == 'b' {
                    s.push('a');
                    a -= 1;
                } else {
                    s.push('b');
                    b -= 1;
                }
            }
            last = s.chars().last().unwrap();
        }
        s
    }
}

Synthesizing 8/10 solutions (Duplicates hidden)

=======

        let mut a = 0;
        let mut b = 0;
        let mut i = 0;
        while i < colors.len() {
            if colors[i..].starts_with("AAA") {
                a += 1;
                i += 3;
            } else if colors[i..].starts_with("BBB") {
                b += 1;
                i += 3;
            } else {
                i += 1;
            }
        }
        a > b

=======

        let mut a = 0;
        let mut b = 0;
        let mut i = 0;
        while i < colors.len() {
            if colors[i..].starts_with("AA") {
                let mut j = i + 2;
                while j < colors.len() && colors[j..].starts_with("A") {
                    j += 1;
                }
                a += j - i - 1;
                i = j;
            } else if colors[i..].starts_with("BB") {
                let mut j = i + 2;
                while j < colors.len() && colors[j..].starts_with("B") {
                    j += 1;
                }
                b += j - i - 1;
                i = j;
            } else {
                i += 1;
            }
        }
        a > b

=======

        let mut a = 0;
        let mut b = 0;
        let mut a_count = 0;
        let mut b_count = 0;
        for i in 0..colors.len() {
            if colors.chars().nth(i).unwrap() == 'A' {
                a_count += 1;
                if i > 0 && colors.chars().nth(i - 1).unwrap() == 'A' {
                    a += a_count;
                }
            } else {
                a_count = 0;
            }
            if colors.chars().nth(i).unwrap() == 'B' {
                b_count += 1;
                if i > 0 && colors.chars().nth(i - 1).unwrap() == 'B' {
                    b += b_count;
                }
            } else {
                b_count = 0;
            }
        }
        a > b

=======

        let mut a = 0;
        let mut b = 0;
        let mut i = 0;
        let mut j = 0;
        let mut k = 0;
        let mut l = 0;
        while i < colors.len() {
            if colors[i..i+1] == "A" {
                j += 1;
                if j == 3 {
                    a += 1;
                }
                if j >= 3 {
                    a += 1;
                }
            } else {
                j = 0;
            }
            if colors[i..i+1] == "B" {
                k += 1;
                if k == 3 {
                    b += 1;
                }
                if k >= 3 {
                    b += 1;
                }
            } else {
                k = 0;
            }
            i += 1;
        }
        a > b

=======

        let mut count = 0;
        let mut ans = 0;
        let mut prev = ' ';
        for c in colors.chars() {
            if c == prev {
                count += 1;
            } else {
                count = 1;
                prev = c;
            }
            if c == 'A' && count >= 3 {
                ans += 1;
            }
        }
        count = 0;
        prev = ' ';
        for c in colors.chars() {
            if c == prev {
                count += 1;
            } else {
                count = 1;
                prev = c;
            }
            if c == 'B' && count >= 3 {
                ans -= 1;
            }
        }
        ans > 0
    }
}

=======

        
    }
}

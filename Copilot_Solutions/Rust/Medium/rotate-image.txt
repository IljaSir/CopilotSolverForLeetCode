Synthesizing 10/10 solutions (Duplicates hidden)

=======
Suggestion 1

        let n = matrix.len();
        for i in 0..n {
            for j in 0..i {
                matrix[i][j] ^= matrix[j][i];
                matrix[j][i] ^= matrix[i][j];
                matrix[i][j] ^= matrix[j][i];
            }
        }
        for i in 0..n {
            for j in 0..n / 2 {
                matrix[i][j] ^= matrix[i][n - j - 1];
                matrix[i][n - j - 1] ^= matrix[i][j];
                matrix[i][j] ^= matrix[i][n - j - 1];
            }
        }

=======
Suggestion 2

        let n = matrix.len();
        for i in 0..n {
            for j in 0..i {
                matrix[i][j] ^= matrix[j][i];
                matrix[j][i] ^= matrix[i][j];
                matrix[i][j] ^= matrix[j][i];
            }
        }
        for i in 0..n {
            for j in 0..n/2 {
                matrix[i][j] ^= matrix[i][n-1-j];
                matrix[i][n-1-j] ^= matrix[i][j];
                matrix[i][j] ^= matrix[i][n-1-j];
            }
        }

=======
Suggestion 3

        let n = matrix.len();
        for i in 0..n {
            for j in i..n {
                matrix[i][j] ^= matrix[j][i];
                matrix[j][i] ^= matrix[i][j];
                matrix[i][j] ^= matrix[j][i];
            }
        }
        for i in 0..n {
            for j in 0..n/2 {
                matrix[i][j] ^= matrix[i][n-j-1];
                matrix[i][n-j-1] ^= matrix[i][j];
                matrix[i][j] ^= matrix[i][n-j-1];
            }
        }

=======
Suggestion 4

        let n = matrix.len();
        for i in 0..n {
            for j in i..n {
                matrix[i][j] = matrix[i][j] ^ matrix[j][i];
                matrix[j][i] = matrix[i][j] ^ matrix[j][i];
                matrix[i][j] = matrix[i][j] ^ matrix[j][i];
            }
        }
        for i in 0..n {
            for j in 0..n/2 {
                matrix[i][j] = matrix[i][j] ^ matrix[i][n-1-j];
                matrix[i][n-1-j] = matrix[i][j] ^ matrix[i][n-1-j];
                matrix[i][j] = matrix[i][j] ^ matrix[i][n-1-j];
            }
        }

=======
Suggestion 5

        let n = matrix.len();
        for i in 0..n {
            for j in 0..i {
                matrix[i][j] = matrix[i][j] ^ matrix[j][i];
                matrix[j][i] = matrix[i][j] ^ matrix[j][i];
                matrix[i][j] = matrix[i][j] ^ matrix[j][i];
            }
        }
        for i in 0..n {
            for j in 0..n/2 {
                matrix[i][j] = matrix[i][j] ^ matrix[i][n-j-1];
                matrix[i][n-j-1] = matrix[i][j] ^ matrix[i][n-j-1];
                matrix[i][j] = matrix[i][j] ^ matrix[i][n-j-1];
            }
        }

=======
Suggestion 6

        let n = matrix.len();
        for i in 0..n {
            for j in i+1..n {
                matrix[i][j] = matrix[i][j] ^ matrix[j][i];
                matrix[j][i] = matrix[i][j] ^ matrix[j][i];
                matrix[i][j] = matrix[i][j] ^ matrix[j][i];
            }
        }
        for i in 0..n {
            for j in 0..n/2 {
                matrix[i][j] = matrix[i][j] ^ matrix[i][n-1-j];
                matrix[i][n-1-j] = matrix[i][j] ^ matrix[i][n-1-j];
                matrix[i][j] = matrix[i][j] ^ matrix[i][n-1-j];
            }
        }

=======
Suggestion 7

        let n = matrix.len();
        for i in 0..n {
            for j in 0..i {
                matrix[i][j] = matrix[i][j] + matrix[j][i];
                matrix[j][i] = matrix[i][j] - matrix[j][i];
                matrix[i][j] = matrix[i][j] - matrix[j][i];
            }
        }
        for i in 0..n {
            for j in 0..n/2 {
                matrix[i][j] = matrix[i][j] + matrix[i][n-j-1];
                matrix[i][n-j-1] = matrix[i][j] - matrix[i][n-j-1];
                matrix[i][j] = matrix[i][j] - matrix[i][n-j-1];
            }
        }

=======
Suggestion 8

        matrix.reverse();
        for i in 0..matrix.len() {
            for j in i+1..matrix.len() {
                matrix[i].swap(j, j);
            }
        }

=======
Suggestion 9

        let n = matrix.len();
        for i in 0..n {
            for j in 0..n {
                if i < j {
                    matrix[i][j] ^= matrix[j][i];
                    matrix[j][i] ^= matrix[i][j];
                    matrix[i][j] ^= matrix[j][i];
                }
            }
        }
        for i in 0..n {
            for j in 0..n/2 {
                matrix[i][j] ^= matrix[i][n - j - 1];
                matrix[i][n - j - 1] ^= matrix[i][j];
                matrix[i][j] ^= matrix[i][n - j - 1];
            }
        }

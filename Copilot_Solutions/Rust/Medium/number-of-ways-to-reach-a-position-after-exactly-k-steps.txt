Synthesizing 5/10 solutions

=======

        
    }
}

=======

        let modu = 1000000007;
        let mut dp = vec![vec![0; 1001]; 1001];
        dp[0][start_pos as usize] = 1;
        for i in 0..k {
            for j in 0..1001 {
                if dp[i as usize][j] != 0 {
                    if j > 0 {
                        dp[(i + 1) as usize][(j - 1) as usize] = (dp[(i + 1) as usize][(j - 1) as usize] + dp[i as usize][j]) % modu;
                    }
                    if j < 1000 {
                        dp[(i + 1) as usize][(j + 1) as usize] = (dp[(i + 1) as usize][(j + 1) as usize] + dp[i as usize][j]) % modu;
                    }
                }
            }
        }
        dp[k as usize][end_pos as usize]

=======

        let mut dp = vec![vec![0; 1001]; 1001];
        let modu = 1_000_000_007;
        dp[0][start_pos as usize] = 1;
        for i in 1..=k {
            for j in 1..=1000 {
                dp[i as usize][j as usize] = (dp[i as usize - 1][j as usize - 1] + dp[i as usize - 1][j as usize + 1]) % modu;
            }
        }
        dp[k as usize][end_pos as usize]

=======

        let mut dp = vec![vec![0; 2001]; 1001];
        dp[0][start_pos as usize] = 1;
        let modu = 1000000007;
        for i in 0..k {
            for j in 1..2000 {
                dp[i as usize + 1][j] = (dp[i as usize + 1][j] + dp[i as usize][j - 1]) % modu;
                dp[i as usize + 1][j] = (dp[i as usize + 1][j] + dp[i as usize][j + 1]) % modu;
            }
        }
        dp[k as usize][end_pos as usize]

=======

        let k = k as usize;
        let mut dp = vec![vec![0; 1001]; 1001];
        let mut dp_new = vec![vec![0; 1001]; 1001];
        dp[start_pos as usize][0] = 1;
        for i in 0..k {
            for j in 0..1001 {
                if dp[j][i] > 0 {
                    if j > 0 {
                        dp_new[j - 1][i + 1] = (dp_new[j - 1][i + 1] + dp[j][i]) % 1000000007;
                    }
                    if j < 1000 {
                        dp_new[j + 1][i + 1] = (dp_new[j + 1][i + 1] + dp[j][i]) % 1000000007;
                    }
                }
            }
            dp = dp_new;
            dp_new = vec![vec![0; 1001]; 1001];
        }
        dp[end_pos as usize][k]

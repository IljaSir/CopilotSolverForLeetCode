Synthesizing 9/10 solutions

=======

        text
            .replace("&quot;", "\"")
            .replace("&apos;", "'")
            .replace("&gt;", ">")
            .replace("&lt;", "<")
            .replace("&frasl;", "/")
            .replace("&amp;", "&")

=======

        let mut res = String::new();
        let mut i = 0;
        while i < text.len() {
            if text[i..].starts_with("&quot;") {
                res.push('"');
                i += 6;
            } else if text[i..].starts_with("&apos;") {
                res.push('\'');
                i += 6;
            } else if text[i..].starts_with("&amp;") {
                res.push('&');
                i += 5;
            } else if text[i..].starts_with("&gt;") {
                res.push('>');
                i += 4;
            } else if text[i..].starts_with("&lt;") {
                res.push('<');
                i += 4;
            } else if text[i..].starts_with("&frasl;") {
                res.push('/');
                i += 7;
            } else {
                res.push(text.chars().nth(i).unwrap());
                i += 1;
            }
        }
        res

=======

        let mut result = String::new();
        let mut i = 0;
        while i < text.len() {
            if text[i..].starts_with("&quot;") {
                result.push('"');
                i += 6;
            } else if text[i..].starts_with("&apos;") {
                result.push('\'');
                i += 6;
            } else if text[i..].starts_with("&amp;") {
                result.push('&');
                i += 5;
            } else if text[i..].starts_with("&gt;") {
                result.push('>');
                i += 4;
            } else if text[i..].starts_with("&lt;") {
                result.push('<');
                i += 4;
            } else if text[i..].starts_with("&frasl;") {
                result.push('/');
                i += 7;
            } else {
                result.push(text[i..].chars().next().unwrap());
                i += 1;
            }
        }
        result

=======

        let mut ret = String::new();
        let mut i = 0;
        while i < text.len() {
            if text[i..].starts_with("&quot;") {
                ret.push('"');
                i += 6;
            } else if text[i..].starts_with("&apos;") {
                ret.push('\'');
                i += 6;
            } else if text[i..].starts_with("&amp;") {
                ret.push('&');
                i += 5;
            } else if text[i..].starts_with("&gt;") {
                ret.push('>');
                i += 4;
            } else if text[i..].starts_with("&lt;") {
                ret.push('<');
                i += 4;
            } else if text[i..].starts_with("&frasl;") {
                ret.push('/');
                i += 7;
            } else {
                ret.push(text.chars().nth(i).unwrap());
                i += 1;
            }
        }
        ret

=======

        let mut result = String::new();
        let mut chars = text.chars();
        while let Some(c) = chars.next() {
            if c == '&' {
                if let Some(c) = chars.next() {
                    if c == 'a' {
                        if let Some(c) = chars.next() {
                            if c == 'm' {
                                if let Some(c) = chars.next() {
                                    if c == 'p' {
                                        if let Some(c) = chars.next() {
                                            if c == ';' {
                                                result.push('&');
                                                continue;
                                            }
                                        }
                                    }
                                }
                            } else if c == 'p' {
                                if let Some(c) = chars.next() {
                                    if c == 'o' {
                                        if let Some(c) = chars.next() {
                                            if c == 's' {
                                                if let Some(c) = chars.next() {
                                                    if c == ';' {
                                                        result.push('\'');
                                                        continue;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else if c == 'g' {
                        if let Some(c) = chars.next() {
                            if c == 't' {
                                if let Some(c) = chars.next() {
                                    if c == ';' {
                                        result.push('>');
                                        continue;
                                    }
                                }
                            }
                        }
                    } else if c == 'l' {
                        if let Some(c) = chars.next() {
                            if c == 't' {
                                if let Some(c) = chars.next() {
                                    if c == ';' {
                                        result.push('<');
                                        continue;
                                    }
                                }
                            }
                        }
                    } else if c == 'q' {
                        if let Some(c) = chars.next() {
                            if c == 'u' {
                                if let Some(c) = chars.next() {
                                    if c == 'o' {
                                        if let Some(c) = chars.next() {
                                            if c == 't' {
                                                if let Some(c) = chars.next() {
                                                    if c == ';' {
                                                        result.push('\"');
                                                        continue;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else if c == 'f' {
                        if let Some(c) = chars.next() {
                            if c == 'r' {
                                if let Some(c) = chars.next() {
                                    if c == 'a' {
                                        if let Some

=======

        let mut result = String::new();
        let mut i = 0;
        while i < text.len() {
            if text.as_bytes()[i] == b'&' {
                if i + 6 < text.len() && &text[i..i+6] == "&quot;" {
                    result.push('"');
                    i += 6;
                } else if i + 6 < text.len() && &text[i..i+6] == "&apos;" {
                    result.push('\'');
                    i += 6;
                } else if i + 5 < text.len() && &text[i..i+5] == "&amp;" {
                    result.push('&');
                    i += 5;
                } else if i + 4 < text.len() && &text[i..i+4] == "&gt;" {
                    result.push('>');
                    i += 4;
                } else if i + 4 < text.len() && &text[i..i+4] == "&lt;" {
                    result.push('<');
                    i += 4;
                } else if i + 7 < text.len() && &text[i..i+7] == "&frasl;" {
                    result.push('/');
                    i += 7;
                } else {
                    result.push('&');
                    i += 1;
                }
            } else {
                result.push(text.as_bytes()[i] as char);
                i += 1;
            }
        }
        result
    }
}

=======

        let mut result = String::new();
        let mut chars = text.chars();
        while let Some(c) = chars.next() {
            match c {
                '&' => {
                    if let Some(next) = chars.next() {
                        match next {
                            'a' => {
                                if let Some(next) = chars.next() {
                                    match next {
                                        'm' => {
                                            if let Some(next) = chars.next() {
                                                match next {
                                                    'p' => {
                                                        if let Some(next) = chars.next() {
                                                            match next {
                                                                ';' => {
                                                                    result.push('&');
                                                                }
                                                                _ => {
                                                                    result.push('&');
                                                                    result.push('a');
                                                                    result.push('m');
                                                                    result.push('p');
                                                                    result.push(next);
                                                                }
                                                            }
                                                        }
                                                    }
                                                    _ => {
                                                        result.push('&');
                                                        result.push('a');
                                                        result.push('m');
                                                        result.push(next);
                                                    }
                                                }
                                            }
                                        }
                                        'p' => {
                                            if let Some(next) = chars.next() {
                                                match next {
                                                    'o' => {
                                                        if let Some(next) = chars.next() {
                                                            match next {
                                                                's' => {
                                                                    if let Some(next) = chars.next() {
                                                                        match next {
                                                                            ';' => {
                                                                                result.push('\'');
                                                                            }
                                                                            _ => {
                                                                                result.push('&');
                                                                                result.push('a');
                                                                                result.push('p');
                                                                                result.push('o');
                                                                                result.push('s');
                                                                                result.push(next);
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                _ => {
                                                                    result.push('&');
                                                                    result.push('a');
                                                                    result.push('p');
                                                                    result.push(next);
                                                                }
                                                            }
                                                        }
                                                    }
                                                    _ => {
                                                        result.push('&');
                                                        result.push('a');
                                                        result.push(next);
                                                    }
                                                }
                                            }
                                        }
                                        _ => {
                                            result.push('&');
                                            result.push('a');
                                            result.push(next);
                                        }
                                    }
                                }
                            }
                            'g' => {
                                if let Some(next) = chars.next() {
                                    match next {
                                        't' => {
                                            if let Some(next) = chars.next() {
                                                match next {
                                                    ';' => {
                                                        result.push('>');
                                                    }
                                                    _ => {
                                                        result.push('&');
                                                        result.push('g');
                                                        result.push('t');
                                                        result.push(next);
                                                    }
                                                }
                                            }
                                        }
                                        _

=======

        let mut result = String::new();
        let mut text = text.chars();
        while let Some(c) = text.next() {
            if c == '&' {
                if let Some(c) = text.next() {
                    if c == 'a' {
                        if let Some(c) = text.next() {
                            if c == 'm' {
                                if let Some(c) = text.next() {
                                    if c == 'p' {
                                        if let Some(c) = text.next() {
                                            if c == ';' {
                                                result.push('&');
                                            } else {
                                                result.push_str("&amp");
                                                result.push(c);
                                            }
                                        }
                                    } else {
                                        result.push_str("&am");
                                        result.push(c);
                                    }
                                }
                            } else if c == 'p' {
                                if let Some(c) = text.next() {
                                    if c == 'o' {
                                        if let Some(c) = text.next() {
                                            if c == 's' {
                                                if let Some(c) = text.next() {
                                                    if c == ';' {
                                                        result.push('\'');
                                                    } else {
                                                        result.push_str("&apos");
                                                        result.push(c);
                                                    }
                                                }
                                            } else {
                                                result.push_str("&ap");
                                                result.push(c);
                                            }
                                        }
                                    } else {
                                        result.push_str("&a");
                                        result.push(c);
                                    }
                                }
                            } else {
                                result.push_str("&a");
                                result.push(c);
                            }
                        }
                    } else if c == 'g' {
                        if let Some(c) = text.next() {
                            if c == 't' {
                                if let Some(c) = text.next() {
                                    if c == ';' {
                                        result.push('>');
                                    } else {
                                        result.push_str("&gt");
                                        result.push(c);
                                    }
                                }
                            } else {
                                result.push_str("&g");
                                result.push(c);
                            }
                        }
                    } else if c == 'l' {
                        if let Some(c) = text.next() {
                            if c == 't' {
                                if let Some(c) = text.next() {
                                    if c == ';' {
                                        result.push('<');
                                    } else {
                                        result.push_str("&lt");
                                        result.push(c);
                                    }
                                }
                            } else {
                                result.push_str("&l");
                                result.push(c);
                            }
                        }
                    } else if c == 'q' {
                        if let

=======

        let mut res: String = String::new();
        let mut i = 0;
        while i < text.len() {
            if text.as_bytes()[i] == b'&' {
                if i + 6 < text.len() && &text[i..i+6] == "&quot;" {
                    res.push('"');
                    i += 6;
                } else if i + 6 < text.len() && &text[i..i+6] == "&apos;" {
                    res.push('\'');
                    i += 6;
                } else if i + 5 < text.len() && &text[i..i+5] == "&amp;" {
                    res.push('&');
                    i += 5;
                } else if i + 4 < text.len() && &text[i..i+4] == "&gt;" {
                    res.push('>');
                    i += 4;
                } else if i + 4 < text.len() && &text[i..i+4] == "&lt;" {
                    res.push('<');
                    i += 4;
                } else if i + 7 < text.len() && &text[i..i+7] == "&frasl;" {
                    res.push('/');
                    i += 7;
                } else {
                    res.push(text.as_bytes()[i] as char);
                    i += 1;
                }
            } else {
                res.push(text.as_bytes()[i] as char);
                i += 1;
            }
        }
        res

=======

        let mut result = String::new();
        let mut chars = text.chars();
        while let Some(c) = chars.next() {
            match c {
                '&' => {
                    if let Some(next) = chars.next() {
                        match next {
                            'a' => {
                                if let Some(next) = chars.next() {
                                    match next {
                                        'm' => {
                                            if let Some(next) = chars.next() {
                                                match next {
                                                    'p' => {
                                                        if let Some(next) = chars.next() {
                                                            match next {
                                                                ';' => {
                                                                    result.push('&');
                                                                }
                                                                _ => {
                                                                    result.push('&');
                                                                    result.push('a');
                                                                    result.push('m');
                                                                    result.push('p');
                                                                    result.push(next);
                                                                }
                                                            }
                                                        }
                                                    }
                                                    _ => {
                                                        result.push('&');
                                                        result.push('a');
                                                        result.push('m');
                                                        result.push(next);
                                                    }
                                                }
                                            }
                                        }
                                        'p' => {
                                            if let Some(next) = chars.next() {
                                                match next {
                                                    'o' => {
                                                        if let Some(next) = chars.next() {
                                                            match next {
                                                                's' => {
                                                                    if let Some(next) = chars.next() {
                                                                        match next {
                                                                            ';' => {
                                                                                result.push('\'');
                                                                            }
                                                                            _ => {
                                                                                result.push('&');
                                                                                result.push('a');
                                                                                result.push('p');
                                                                                result.push('o');
                                                                                result.push('s');
                                                                                result.push(next);
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                _ => {
                                                                    result.push('&');
                                                                    result.push('a');
                                                                    result.push('p');
                                                                    result.push(next);
                                                                }
                                                            }
                                                        }
                                                    }
                                                    _ => {
                                                        result.push('&');
                                                        result.push('a');
                                                        result.push(next);
                                                    }
                                                }
                                            }
                                        }
                                        _ => {
                                            result.push('&');
                                            result.push('a');
                                            result.push(next);
                                        }
                                    }
                                }
                            }
                            'g' => {
                                if let Some(next) = chars.next() {
                                    match next {
                                        't' => {
                                            if let Some(next) = chars.next() {
                                                match next {
                                                    ';' => {
                                                        result.push('>');
                                                    }
                                                    _ => {
                                                        result.push('&');
                                                        result.push('g');
                                                        result.push('t');
                                                        result.push(next);
                                                    }
                                                }
                                            }
                                        }
                                        _

=======

        let mut result = String::new();
        let mut text = text.chars();
        while let Some(c) = text.next() {
            if c == '&' {
                if let Some(c) = text.next() {
                    if c == 'a' {
                        if let Some(c) = text.next() {
                            if c == 'm' {
                                if let Some(c) = text.next() {
                                    if c == 'p' {
                                        if let Some(c) = text.next() {
                                            if c == ';' {
                                                result.push('&');
                                            } else {
                                                result.push_str("&amp");
                                                result.push(c);
                                            }
                                        }
                                    } else {
                                        result.push_str("&am");
                                        result.push(c);
                                    }
                                }
                            } else if c == 'p' {
                                if let Some(c) = text.next() {
                                    if c == 'o' {
                                        if let Some(c) = text.next() {
                                            if c == 's' {
                                                if let Some(c) = text.next() {
                                                    if c == ';' {
                                                        result.push('\'');
                                                    } else {
                                                        result.push_str("&apos");
                                                        result.push(c);
                                                    }
                                                }
                                            } else {
                                                result.push_str("&ap");
                                                result.push(c);
                                            }
                                        }
                                    } else {
                                        result.push_str("&a");
                                        result.push(c);
                                    }
                                }
                            } else {
                                result.push_str("&a");
                                result.push(c);
                            }
                        }
                    } else if c == 'g' {
                        if let Some(c) = text.next() {
                            if c == 't' {
                                if let Some(c) = text.next() {
                                    if c == ';' {
                                        result.push('>');
                                    } else {
                                        result.push_str("&gt");
                                        result.push(c);
                                    }
                                }
                            } else {
                                result.push_str("&g");
                                result.push(c);
                            }
                        }
                    } else if c == 'l' {
                        if let Some(c) = text.next() {
                            if c == 't' {
                                if let Some(c) = text.next() {
                                    if c == ';' {
                                        result.push('<');
                                    } else {
                                        result.push_str("&lt");
                                        result.push(c);
                                    }
                                }
                            } else {
                                result.push_str("&l");
                                result.push(c);
                            }
                        }
                    } else if c == 'q' {
                        if let

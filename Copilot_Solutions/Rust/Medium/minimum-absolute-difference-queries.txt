Synthesizing 6/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let mut ans = Vec::new();
        let n = nums.len();
        let mut prefix = vec![vec![0; 101]; n + 1];
        for i in 0..n {
            prefix[i + 1] = prefix[i].clone();
            prefix[i + 1][nums[i] as usize] += 1;
        }
        for q in queries {
            let mut pre = 0;
            let mut min = i32::MAX;
            for i in 1..=100 {
                if prefix[q[1] as usize + 1][i] - prefix[q[0] as usize][i] > 0 {
                    if pre > 0 {
                        min = min.min(i as i32 - pre);
                    }
                    pre = i as i32;
                }
            }
            if min == i32::MAX {
                ans.push(-1);
            } else {
                ans.push(min);
            }
        }
        ans

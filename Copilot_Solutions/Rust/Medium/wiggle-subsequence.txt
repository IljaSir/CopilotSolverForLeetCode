Synthesizing 3/10 solutions

=======
Suggestion 1

        if nums.len() < 2 {
            return nums.len() as i32;
        }
        let mut up = 1;
        let mut down = 1;
        for i in 1..nums.len() {
            if nums[i] > nums[i - 1] {
                up = down + 1;
            } else if nums[i] < nums[i - 1] {
                down = up + 1;
            }
        }
        up.max(down)
    }
}

=======
Suggestion 2

        let mut up = vec![0; nums.len()];
        let mut down = vec![0; nums.len()];
        for i in 1..nums.len() {
            for j in 0..i {
                if nums[i] > nums[j] {
                    up[i] = up[i].max(down[j] + 1);
                } else if nums[i] < nums[j] {
                    down[i] = down[i].max(up[j] + 1);
                }
            }
        }
        up.into_iter().chain(down.into_iter()).max().unwrap_or(0) + 1
    }
}

=======
Suggestion 3

        let mut pos = 1;
        let mut neg = 1;
        for i in 0..nums.len() {
            if nums[i] > nums[i - 1] {
                pos = neg + 1;
            } else if nums[i] < nums[i - 1] {
                neg = pos + 1;
            }
        }
        return pos.max(neg);
    }
}

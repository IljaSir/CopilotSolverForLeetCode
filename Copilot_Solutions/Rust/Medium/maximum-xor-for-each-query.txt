Synthesizing 7/10 solutions (Duplicates hidden)

=======

        let mut ans = Vec::new();
        let mut x = 0;
        for i in 0..nums.len() {
            x ^= nums[i];
            ans.push(x ^ (1 << maximum_bit) - 1);
        }
        ans.reverse();
        ans

=======

        let mut ans = Vec::new();
        let mut x = 0;
        for num in nums {
            x ^= num;
            ans.push((1 << maximum_bit) - 1 - x);
        }
        ans.reverse();
        ans

=======

        
    }
}

=======

        let mut res = Vec::new();
        let mut xor = 0;
        for i in 0..nums.len() {
            xor ^= nums[i];
        }
        for i in 0..nums.len() {
            res.push(xor ^ (1 << maximum_bit) - 1);
            xor ^= nums[nums.len() - 1 - i];
        }
        res

=======

        let mut ans = vec![];
        let mut xor = 0;
        for i in 0..nums.len() {
            xor ^= nums[i];
        }
        for i in 0..nums.len() {
            ans.push(xor ^ (1 << maximum_bit) - 1);
            xor ^= nums[nums.len() - 1 - i];
        }
        ans

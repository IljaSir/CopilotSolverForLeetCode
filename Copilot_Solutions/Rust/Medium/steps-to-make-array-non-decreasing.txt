Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut steps = 0;
        for i in 1..nums.len() {
            if nums[i] < nums[i - 1] {
                steps += nums[i - 1] - nums[i];
                nums[i] = nums[i - 1];
            }
        }
        steps
    }
}

=======

        let mut result = 0;
        for i in 1..nums.len() {
            if nums[i - 1] > nums[i] {
                result += 1;
            }
        }
        result

=======

        let mut steps = 0;
        let mut prev = nums[0];
        for i in 1..nums.len() {
            if nums[i] < prev {
                steps += 1;
            } else {
                prev = nums[i];
            }
        }
        steps
    }
}

=======

        let mut nums = nums;
        let mut steps = 0;
        for i in 1..nums.len() {
            if nums[i] < nums[i - 1] {
                steps += 1;
                nums[i] = nums[i - 1];
            }
        }
        steps

=======

        let mut nums = nums;
        let mut steps = 0;
        for i in 1..nums.len() {
            if nums[i-1] > nums[i] {
                steps += 1;
                nums[i] = nums[i-1];
            }
        }
        steps

=======

        let mut steps = 0;
        let mut i = 1;
        while i < nums.len() {
            if nums[i] < nums[i - 1] {
                steps += 1;
                if i > 1 && nums[i] < nums[i - 2] {
                    nums[i] = nums[i - 1];
                }
            }
            i += 1;
        }
        steps

=======

        let mut nums = nums;
        let mut steps = 0;
        let mut i = 1;
        while i < nums.len() {
            if nums[i-1] > nums[i] {
                steps += 1;
                if i > 1 && nums[i-2] > nums[i] {
                    nums[i] = nums[i-1];
                } else {
                    nums[i-1] = nums[i];
                }
            } else {
                i += 1;
            }
        }
        steps
    }
}

=======

        let mut result = 0;
        let mut last_num = nums[0];
        for num in nums {
            if num < last_num {
                result += 1;
            } else {
                last_num = num;
            }
        }
        result

=======

        
    }
}

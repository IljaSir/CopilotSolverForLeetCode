Synthesizing 10/10 solutions

=======

        let mut max = arr[0];
        let mut count = 0;
        for i in 1..arr.len() {
            if arr[i] > max {
                max = arr[i];
                count = 1;
            } else {
                count += 1;
            }
            if count == k {
                break;
            }
        }
        max

=======

        let mut max = arr[0];
        let mut count = 0;
        for i in 1..arr.len() {
            if arr[i] > max {
                max = arr[i];
                count = 1;
            } else {
                count += 1;
            }
            if count == k {
                break;
            }
        }
        max
    }
}

=======

        let mut max = arr[0];
        let mut win_count = 0;
        for i in 1..arr.len() {
            if arr[i] > max {
                max = arr[i];
                win_count = 1;
            } else {
                win_count += 1;
            }
            if win_count >= k {
                break;
            }
        }
        max

=======

        let mut max = arr[0];
        let mut win_count = 0;
        for i in 1..arr.len() {
            if arr[i] > max {
                win_count = 1;
                max = arr[i];
            } else {
                win_count += 1;
            }
            if win_count == k {
                break;
            }
        }
        max

=======

        let mut arr = arr;
        let mut winner = arr[0];
        let mut win_count = 0;
        let mut i = 1;
        while win_count < k {
            if arr[i] > winner {
                winner = arr[i];
                win_count = 1;
            } else {
                win_count += 1;
            }
            arr.push(arr[i]);
            i += 1;
        }
        winner

=======

        let mut arr = arr;
        let mut win_count = 0;
        while win_count < k {
            let a = arr.remove(0);
            let b = arr.remove(0);
            if a > b {
                arr.insert(0, a);
                arr.push(b);
                win_count += 1;
            } else {
                arr.insert(0, b);
                arr.push(a);
                win_count = 1;
            }
        }
        arr[0]

=======

        let mut k = k;
        let mut winner = arr[0];
        for i in 1..arr.len() {
            if k > 0 && winner > arr[i] {
                k -= 1;
            } else {
                winner = arr[i];
                k = 1;
            }
        }
        winner

=======

        let mut arr = arr;
        let mut k = k;
        let mut win_count = 0;
        let mut winner = arr[0];
        while k > 0 {
            if winner > arr[1] {
                arr.push(arr[1]);
                arr.remove(1);
                win_count += 1;
            } else {
                arr.push(winner);
                arr.remove(0);
                winner = arr[0];
                win_count = 1;
            }
            if win_count == k {
                return winner;
            }
            k -= 1;
        }
        winner

=======

        let mut k = k;
        let mut max = arr[0];
        let mut win_count = 0;
        for i in 1..arr.len() {
            let n = arr[i];
            if n > max {
                max = n;
                win_count = 0;
            }
            win_count += 1;
            if win_count == k {
                break;
            }
        }
        max

=======

        let mut k = k;
        let mut i = 0;
        let mut j = 1;
        let mut win_count = 0;
        let mut winner = arr[0];
        let mut n = arr.len();
        while win_count < k {
            if arr[i] > arr[j] {
                win_count += 1;
                winner = arr[i];
                j += 1;
                if j == n {
                    j = 0;
                }
            } else {
                let tmp = i;
                i = j;
                j = tmp;
                win_count = 1;
                winner = arr[i];
                j += 1;
                if j == n {
                    j = 0;
                }
            }
        }
        winner

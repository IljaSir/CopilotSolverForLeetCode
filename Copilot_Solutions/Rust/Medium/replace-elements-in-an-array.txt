Synthesizing 9/10 solutions (Duplicates hidden)

=======

        let mut nums = nums;
        for operation in operations {
            nums[operation[0] as usize - 1] = operation[1];
        }
        nums

=======

        let mut nums = nums;
        for op in operations {
            let idx = op[0] as usize;
            let num = op[1];
            nums[idx] = num;
        }
        nums
    }
}

=======

        let mut result = nums;
        for op in operations {
            let (i, v) = (op[0] as usize, op[1]);
            result[i] = v;
        }
        result
    }
}

=======

        
    }
}

=======

        let mut nums = nums;
        let mut m = HashMap::new();
        for op in operations {
            m.insert(op[0], op[1]);
        }
        for i in 0..nums.len() {
            if m.contains_key(&nums[i]) {
                nums[i] = *m.get(&nums[i]).unwrap();
            }
        }
        nums
    }
}

=======

        let mut ans = nums;
        for (x, y) in operations {
            ans[(x - 1) as usize] = y;
        }
        ans

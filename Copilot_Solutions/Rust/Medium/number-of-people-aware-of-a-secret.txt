Synthesizing 3/10 solutions

=======

        
    }
}

=======

        let n = n as usize;
        let delay = delay as usize;
        let forget = forget as usize;
        let mut dp = vec![0; n + 1];
        dp[0] = 1;
        let m = 1_000_000_007;
        for i in 1..=n {
            dp[i] = dp[i - 1] * 2 % m;
            if i >= delay {
                dp[i] = (dp[i] + m - dp[i - delay]) % m;
            }
            if i >= forget + 1 {
                dp[i] = (dp[i] + m - dp[i - forget - 1]) % m;
            }
        }
        dp[n]

=======

        let mut people = 1;
        let mut known = 1;
        let mut day = 1;
        let mut forget = forget;
        let mut delay = delay;
        let mut modu = 1000000007;
        while day < n {
            people += known;
            people %= modu;
            day += 1;
            if day == delay {
                known = people;
            }
            if day == forget {
                known -= 1;
                delay += delay;
                forget += forget;
            }
        }
        people

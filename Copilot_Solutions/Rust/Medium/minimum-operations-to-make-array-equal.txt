Synthesizing 10/10 solutions

=======

        if n % 2 == 0 {
            n * n / 4
        } else {
            n * (n - 1) / 4
        }

=======

        n * n / 4
    }
}

=======

        let mut count = 0;
        let mut i = 1;
        while i < n {
            count += n - i;
            i += 2;
        }
        count

=======

        (n / 2) * (n / 2 + n % 2)

=======

        let n = n as i64;
        let m = n / 2;
        if n % 2 == 0 {
            m * (n - m)
        } else {
            m * (m + 1)
        }
    }
}

=======

        let n = n as i64;
        (n * n / 4) as i32

=======

        let n = n as i64;
        let mut sum = 0;
        for i in 0..n/2 {
            sum += n - 2*i - 1;
        }
        sum

=======

        (n * n / 4) as i32
    }
}

=======

        (n * n) / 4

=======

        ((n*n)/4) as i32
    }
}

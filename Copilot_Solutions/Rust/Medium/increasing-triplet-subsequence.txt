Synthesizing 10/10 solutions

=======
Suggestion 1

        let mut a = i32::MAX;
        let mut b = i32::MAX;
        for n in nums {
            if n <= a {
                a = n;
            } else if n <= b {
                b = n;
            } else {
                return true;
            }
        }
        false

=======
Suggestion 2

        let mut first = i32::MAX;
        let mut second = i32::MAX;
        for num in nums {
            if num <= first {
                first = num;
            } else if num <= second {
                second = num;
            } else {
                return true;
            }
        }
        false

=======
Suggestion 3

        let mut min = std::i32::MAX;
        let mut mid = std::i32::MAX;
        for num in nums {
            if num <= min {
                min = num;
            } else if num <= mid {
                mid = num;
            } else {
                return true;
            }
        }
        false

=======
Suggestion 4

        let mut first = std::i32::MAX;
        let mut second = std::i32::MAX;
        for i in 0..nums.len() {
            if nums[i] <= first {
                first = nums[i];
            } else if nums[i] <= second {
                second = nums[i];
            } else {
                return true;
            }
        }
        false

=======
Suggestion 5

        let mut min1 = i32::MAX;
        let mut min2 = i32::MAX;
        for n in nums {
            if n <= min1 {
                min1 = n;
            } else if n <= min2 {
                min2 = n;
            } else {
                return true;
            }
        }
        false

=======
Suggestion 6

        let mut min = i32::MAX;
        let mut mid = i32::MAX;
        for num in nums {
            if num <= min {
                min = num;
            } else if num <= mid {
                mid = num;
            } else {
                return true;
            }
        }
        false
    }
}

=======
Suggestion 7

        let mut min = i32::MAX;
        let mut mid = i32::MAX;
        for num in nums {
            if num <= min {
                min = num;
            } else if num <= mid {
                mid = num;
            } else {
                return true;
            }
        }
        false

=======
Suggestion 8

        let mut a = std::i32::MAX;
        let mut b = std::i32::MAX;
        for i in 0..nums.len() {
            if nums[i] <= a {
                a = nums[i];
            } else if nums[i] <= b {
                b = nums[i];
            } else {
                return true;
            }
        }
        false

=======
Suggestion 9

        let (mut min, mut mid) = (i32::MAX, i32::MAX);
        for &num in nums.iter() {
            if num <= min {
                min = num;
            } else if num <= mid {
                mid = num;
            } else {
                return true;
            }
        }
        false

=======
Suggestion 10

        let mut min = i32::MAX;
        let mut mid = i32::MAX;
        for &num in &nums {
            if num <= min {
                min = num;
            } else if num <= mid {
                mid = num;
            } else {
                return true;
            }
        }
        false

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut people = people;
        people.sort();
        let mut i = 0;
        let mut j = people.len() - 1;
        let mut ans = 0;
        while i <= j {
            ans += 1;
            if people[i] + people[j] <= limit {
                i += 1;
            }
            j -= 1;
        }
        ans

=======

        let mut people = people;
        people.sort();
        let mut i = 0;
        let mut j = people.len() - 1;
        let mut boats = 0;
        while i <= j {
            boats += 1;
            if people[i] + people[j] <= limit {
                i += 1;
            }
            j -= 1;
        }
        boats

=======

        let mut people = people;
        people.sort();
        let mut i = 0;
        let mut j = people.len() - 1;
        let mut boats = 0;
        while i <= j {
            if people[i] + people[j] <= limit {
                i += 1;
            }
            j -= 1;
            boats += 1;
        }
        boats

=======

        let mut people = people;
        people.sort();
        let mut i = 0;
        let mut j = people.len() - 1;
        let mut count = 0;
        while i <= j {
            if people[i] + people[j] <= limit {
                i += 1;
            }
            j -= 1;
            count += 1;
        }
        count

=======

        let mut people = people;
        people.sort();
        let mut count = 0;
        let mut i = 0;
        let mut j = people.len() - 1;
        while i <= j {
            count += 1;
            if people[i] + people[j] <= limit {
                i += 1;
            }
            j -= 1;
        }
        count
    }
}

=======

        let mut people = people;
        people.sort_unstable();
        let mut i = 0;
        let mut j = people.len() - 1;
        let mut boats = 0;
        while i <= j {
            if people[i] + people[j] <= limit {
                i += 1;
            }
            j -= 1;
            boats += 1;
        }
        boats

=======

        let mut people = people;
        people.sort();
        let mut res = 0;
        let mut i = 0;
        let mut j = people.len() - 1;
        while i <= j {
            if people[i] + people[j] <= limit {
                i += 1;
            }
            j -= 1;
            res += 1;
        }
        res

=======

        let mut people = people;
        people.sort();
        let mut left = 0;
        let mut right = people.len() - 1;
        let mut result = 0;
        while left <= right {
            if people[left] + people[right] <= limit {
                left += 1;
                right -= 1;
            } else {
                right -= 1;
            }
            result += 1;
        }
        result
    }
}

=======

        let mut people = people;
        let mut boats = 0;
        people.sort();
        let mut i = 0;
        let mut j = people.len() - 1;
        while i <= j {
            boats += 1;
            if people[i] + people[j] <= limit {
                i += 1;
            }
            j -= 1;
        }
        boats

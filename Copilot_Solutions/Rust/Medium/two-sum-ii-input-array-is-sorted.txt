Synthesizing 2/10 solutions

=======
Suggestion 1

        let mut l = 0;
        let mut r = numbers.len() - 1;
        while l < r {
            let sum = numbers[l] + numbers[r];
            if sum == target {
                return vec![l as i32 + 1, r as i32 + 1];
            } else if sum > target {
                r -= 1;
            } else {
                l += 1;
            }
        }
        vec![]
    }
}

=======
Suggestion 2

        let mut l = 0;
        let mut r = numbers.len() - 1;
        while l < r {
            let sum = numbers[l] + numbers[r];
            if sum == target {
                return vec![l as i32 + 1, r as i32 + 1];
            } else if sum < target {
                l += 1;
            } else {
                r -= 1;
            }
        }
        vec![]
    }
}

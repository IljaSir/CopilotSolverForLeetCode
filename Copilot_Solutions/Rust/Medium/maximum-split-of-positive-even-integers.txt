Synthesizing 10/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let mut res = vec![];
        let mut sum = 0;
        for i in 1..=final_sum/2 {
            sum += i*2;
            res.push(i*2);
            if sum == final_sum {
                return res;
            } else if sum > final_sum {
                res.pop();
                sum -= i*2;
            }
        }
        res

=======

        let mut ans = Vec::new();
        let mut sum = 0;
        let mut i = 1;
        while sum < final_sum {
            ans.push(i);
            sum += i;
            i += 2;
        }
        while sum > final_sum {
            ans.pop();
            sum -= i - 2;
            i -= 2;
        }
        ans

=======

        let mut result = Vec::new();
        let mut sum = 0;
        let mut num = 2;
        while sum < final_sum {
            result.push(num);
            sum += num;
            num += 2;
        }
        result

=======

        let mut res = vec![];
        let mut sum = 0;
        for i in 1..=final_sum/2 {
            sum += i;
            res.push(i);
            if sum == final_sum - sum {
                break;
            }
        }
        res

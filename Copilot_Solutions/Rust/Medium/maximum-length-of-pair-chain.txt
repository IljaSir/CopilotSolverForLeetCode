Synthesizing 7/10 solutions (Duplicates hidden)

=======
Suggestion 1

        
    }
}

=======
Suggestion 2

        let mut pairs = pairs;
        pairs.sort_unstable_by(|a, b| a[0].cmp(&b[0]));
        let mut dp = vec![1; pairs.len()];
        let mut ans = 1;
        for i in 1..pairs.len() {
            for j in 0..i {
                if pairs[j][1] < pairs[i][0] {
                    dp[i] = dp[i].max(dp[j] + 1);
                }
            }
            ans = ans.max(dp[i]);
        }
        ans

=======
Suggestion 3

        let mut pairs = pairs;
        pairs.sort_by(|a, b| a[1].cmp(&b[1]));
        let mut cur = i32::MIN;
        let mut ans = 0;
        for p in pairs {
            if p[0] > cur {
                cur = p[1];
                ans += 1;
            }
        }
        ans

=======
Suggestion 4

        let mut pairs = pairs;
        pairs.sort_unstable_by(|a, b| a[1].cmp(&b[1]));
        let mut ans = 0;
        let mut last = i32::MIN;
        for pair in pairs {
            if pair[0] > last {
                ans += 1;
                last = pair[1];
            }
        }
        ans

Synthesizing 7/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let mut in_degree = vec![0; n as usize];
        for edge in edges {
            in_degree[edge[1] as usize] += 1;
        }
        let mut res = vec![];
        for i in 0..n {
            if in_degree[i as usize] == 0 {
                res.push(i);
            }
        }
        res

=======

        let mut in_degree: Vec<i32> = vec![0; n as usize];
        for edge in edges {
            in_degree[edge[1] as usize] += 1;
        }
        let mut res: Vec<i32> = Vec::new();
        for i in 0..n {
            if in_degree[i as usize] == 0 {
                res.push(i);
            }
        }
        res

=======

        let mut res = vec![false; n as usize];
        for e in edges {
            res[e[1] as usize] = true;
        }
        res.into_iter().enumerate().filter(|(_, v)| !v).map(|(i, _)| i as i32).collect()

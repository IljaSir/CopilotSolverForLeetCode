Synthesizing 5/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let mut a = grid.into_iter().flatten().collect::<Vec<i32>>();
        a.sort();
        let n = a.len();
        let m = a[n/2];
        a.iter().map(|&i| (i - m).abs()/x).sum()

=======

        let mut a = grid.into_iter().flatten().collect::<Vec<_>>();
        a.sort();
        let mut ans = 0;
        let n = a.len() as i32;
        let m = a[n as usize/2];
        for i in &a {
            let diff = i-m;
            if diff % x != 0 {
                return -1;
            }
            ans += diff.abs()/x;
        }
        ans

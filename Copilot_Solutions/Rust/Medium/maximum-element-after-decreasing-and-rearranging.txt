Synthesizing 10/10 solutions (Duplicates hidden)

=======

        let mut arr = arr;
        arr.sort();
        arr[0] = 1;
        for i in 1..arr.len() {
            if arr[i] - arr[i - 1] > 1 {
                arr[i] = arr[i - 1] + 1;
            }
        }
        *arr.last().unwrap()

=======

        let mut arr = arr;
        arr.sort();
        arr[0] = 1;
        for i in 1..arr.len() {
            if arr[i] - arr[i-1] > 1 {
                arr[i] = arr[i-1] + 1;
            }
        }
        arr[arr.len()-1]

=======

        let mut arr = arr;
        arr.sort();
        arr[0] = 1;
        for i in 1..arr.len() {
            arr[i] = arr[i].min(arr[i - 1] + 1);
        }
        *arr.last().unwrap()
    }
}

=======

        let mut arr = arr;
        arr.sort();
        arr[0] = 1;
        for i in 1..arr.len() {
            arr[i] = arr[i].min(arr[i - 1] + 1);
        }
        arr[arr.len() - 1]

=======

        let mut arr = arr;
        arr.sort();
        arr[0] = 1;
        for i in 1..arr.len() {
            arr[i] = std::cmp::min(arr[i], arr[i-1] + 1);
        }
        arr[arr.len()-1]
    }
}

=======

        let mut arr = arr;
        arr.sort_unstable();
        arr[0] = 1;
        for i in 1..arr.len() {
            arr[i] = arr[i-1] + 1;
            if arr[i] > arr[i-1] + 1 {
                arr[i] = arr[i-1] + 1;
            }
        }
        arr[arr.len()-1]
    }
}

=======

        let mut arr = arr;
        arr.sort();
        let mut prev = 1;
        for i in 1..arr.len() {
            if arr[i] - arr[i - 1] > 1 {
                arr[i] = arr[i - 1] + 1;
            }
            prev = arr[i];
        }
        prev

=======

        let mut arr = arr;
        arr.sort_unstable();
        let mut prev = 1;
        for i in 1..arr.len() {
            if arr[i] - prev > 1 {
                arr[i] = prev + 1;
            }
            prev = arr[i];
        }
        arr[arr.len() - 1]
    }
}

=======

        let mut arr = arr;
        arr.sort_unstable();
        let mut res = 1;
        for i in 1..arr.len() {
            res = std::cmp::min(res + 1, arr[i]);
        }
        res

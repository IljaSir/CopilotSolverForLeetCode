Synthesizing 10/10 solutions

=======

        let mut target = target;
        let mut count = 0;
        while target > start_value {
            if target % 2 == 0 {
                target /= 2;
            } else {
                target += 1;
            }
            count += 1;
        }
        count + start_value - target

=======

        let mut target = target;
        let mut ans = 0;
        while target > start_value {
            ans += 1;
            if target % 2 == 1 {
                target += 1;
            } else {
                target /= 2;
            }
        }
        ans + start_value - target

=======

        let mut x = target;
        let mut ans = 0;
        while x > start_value {
            ans += 1;
            if x % 2 == 1 {
                x += 1;
            } else {
                x /= 2;
            }
        }
        ans + start_value - x

=======

        let mut target = target;
        let mut ans = 0;
        while target > start_value {
            ans += 1;
            if target % 2 == 0 {
                target /= 2;
            } else {
                target += 1;
            }
        }
        ans + start_value - target

=======

        let mut x = target;
        let mut ans = 0;
        while x > start_value {
            ans += 1;
            if x % 2 == 0 {
                x /= 2;
            } else {
                x += 1;
            }
        }
        ans + start_value - x

=======

        let mut t = target;
        let mut r = 0;
        while t > start_value {
            if t % 2 == 0 {
                t /= 2;
            } else {
                t += 1;
            }
            r += 1;
        }
        r + start_value - t

=======

        let mut count = 0;
        let mut cur = target;
        while cur > start_value {
            if cur % 2 == 0 {
                cur /= 2;
            } else {
                cur += 1;
            }
            count += 1;
        }
        count + start_value - cur

=======

        let mut cnt = 0;
        let mut val = target;
        while val > start_value {
            if val % 2 == 0 {
                val /= 2;
            } else {
                val += 1;
            }
            cnt += 1;
        }
        cnt + start_value - val

=======

        let mut target = target;
        let mut start_value = start_value;
        let mut res = 0;
        while target > start_value {
            if target % 2 == 0 {
                target /= 2;
            } else {
                target += 1;
            }
            res += 1;
        }
        res + start_value - target

=======

        let (mut start_value, mut target) = (start_value, target);
        let mut ans = 0;
        while target > start_value {
            ans += 1;
            if target & 1 == 0 {
                target >>= 1;
            } else {
                target += 1;
            }
        }
        ans + start_value - target
    }
}

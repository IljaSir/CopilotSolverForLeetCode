Synthesizing 10/10 solutions

=======

        let mut ans = 0;
        let mut pos = 0;
        let mut neg = 0;
        for n in nums {
            if n == 0 {
                pos = 0;
                neg = 0;
            } else if n > 0 {
                pos += 1;
                if neg > 0 {
                    neg += 1;
                }
            } else {
                let tmp = pos;
                if neg > 0 {
                    pos = neg + 1;
                } else {
                    pos = 0;
                }
                neg = tmp + 1;
            }
            ans = ans.max(pos);
        }
        ans

=======

        let mut p = 0;
        let mut n = 0;
        let mut r = 0;
        for x in nums {
            if x == 0 {
                p = 0;
                n = 0;
            } else if x > 0 {
                p += 1;
                if n > 0 {
                    n += 1;
                }
            } else {
                if n > 0 {
                    let t = n;
                    n = p + 1;
                    p = t + 1;
                } else {
                    n = p + 1;
                    p = 0;
                }
            }
            r = r.max(p);
        }
        r
    }
}

=======

        let mut res = 0;
        let mut p = 0;
        let mut n = 0;
        for i in 0..nums.len() {
            if nums[i] == 0 {
                p = 0;
                n = 0;
            } else if nums[i] > 0 {
                p += 1;
                if n > 0 {
                    n += 1;
                }
            } else {
                let t = p;
                if n > 0 {
                    p = n + 1;
                } else {
                    p = 0;
                }
                n = t + 1;
            }
            res = res.max(p);
        }
        res as i32

=======

        let (mut pos, mut neg) = (0, 0);
        let mut ans = 0;
        for &x in &nums {
            if x > 0 {
                pos += 1;
                if neg > 0 {
                    neg += 1;
                }
            } else if x < 0 {
                let tmp = pos;
                pos = if neg > 0 { neg + 1 } else { 0 };
                neg = tmp + 1;
            } else {
                pos = 0;
                neg = 0;
            }
            ans = ans.max(pos);
        }
        ans

=======

        let mut pos = vec![0; nums.len()];
        let mut neg = vec![0; nums.len()];
        let mut res = 0;
        for (i, &n) in nums.iter().enumerate() {
            if n > 0 {
                pos[i] = 1;
                neg[i] = neg.get(i-1).unwrap_or(&0) + 1;
            } else if n < 0 {
                pos[i] = neg.get(i-1).unwrap_or(&0) + 1;
                neg[i] = 1;
            }
            res = res.max(pos[i]);
        }
        res

=======

        let mut max = 0;
        let mut positive = 0;
        let mut negative = 0;
        for i in nums {
            if i == 0 {
                positive = 0;
                negative = 0;
            } else if i > 0 {
                positive += 1;
                if negative > 0 {
                    negative += 1;
                }
            } else {
                let t = positive;
                positive = if negative > 0 { negative + 1 } else { 0 };
                negative = t + 1;
            }
            max = max.max(positive);
        }
        max
    }
}

=======

        let mut res = 0;
        let mut l = 0;
        let mut r = 0;
        let mut neg = 0;
        for i in 0..nums.len() {
            if nums[i] < 0 {
                neg += 1;
            }
            if nums[i] == 0 {
                l = 0;
                r = 0;
                neg = 0;
            } else {
                r += 1;
                if neg % 2 == 0 {
                    res = res.max(r);
                } else {
                    res = res.max(r - l);
                }
                if neg % 2 == 1 {
                    l = r;
                }
            }
        }
        res

=======

        let mut max = 0;
        let mut neg = 0;
        let mut pos = 0;
        for i in 0..nums.len() {
            if nums[i] == 0 {
                neg = 0;
                pos = 0;
            } else if nums[i] < 0 {
                let tmp = pos;
                pos = neg + 1;
                neg = tmp + 1;
            } else {
                pos += 1;
                if neg > 0 {
                    neg += 1;
                }
            }
            if pos > max {
                max = pos;
            }
        }
        max

=======

        let mut n = nums.len();
        let mut dp = vec![(0, 0); n];
        if nums[0] < 0 {
            dp[0] = (1, 0);
        } else if nums[0] > 0 {
            dp[0] = (0, 1);
        }
        let mut ans = dp[0].1;
        for i in 1..n {
            if nums[i] < 0 {
                dp[i] = (dp[i - 1].1 + 1, dp[i - 1].0);
            } else if nums[i] > 0 {
                dp[i] = (dp[i - 1].0, dp[i - 1].1 + 1);
            }
            ans = ans.max(dp[i].1);
        }
        ans as i32

=======

        let mut max_len = 0;
        let mut first_neg = -1;
        let mut last_zero = -1;
        let mut last_neg = -1;
        for (i, &num) in nums.iter().enumerate() {
            if num == 0 {
                max_len = max_len.max(i as i32 - last_zero - 1);
                first_neg = -1;
                last_neg = -1;
                last_zero = i as i32;
            } else if num < 0 {
                if first_neg == -1 {
                    first_neg = i as i32;
                }
                last_neg = i as i32;
            }
            if first_neg != -1 {
                max_len = max_len.max(i as i32 - first_neg);
            }
            if last_neg != -1 {
                max_len = max_len.max(i as i32 - last_neg);
            }
        }
        max_len = max_len.max(nums.len() as i32 - last_zero - 1);
        max_len

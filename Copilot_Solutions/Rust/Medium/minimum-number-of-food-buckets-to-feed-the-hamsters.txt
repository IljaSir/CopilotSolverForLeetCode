Synthesizing 9/10 solutions

=======

        let mut ans = 0;
        let mut count = 0;
        for c in hamsters.chars() {
            if c == 'H' {
                ans += (count + 1) / 2;
                count = 0;
            } else {
                count += 1;
            }
        }
        if count > 0 {
            ans += (count + 1) / 2;
        }
        ans

=======

        let mut cnt = 0;
        let mut res = 0;
        for c in hamsters.chars() {
            if c == 'H' {
                if cnt == 0 {
                    res += 1;
                } else {
                    cnt -= 1;
                }
            } else {
                cnt += 1;
            }
        }
        if cnt > 0 {
            -1
        } else {
            res
        }

=======

        let mut count = 0;
        let mut has_hamster = false;
        for c in hamsters.chars() {
            if c == 'H' {
                if !has_hamster {
                    has_hamster = true;
                } else {
                    count += 1;
                }
            } else {
                has_hamster = false;
            }
        }
        if count > 0 {
            count + 1
        } else {
            -1
        }

=======

        let mut buckets = 0;
        let mut h = 0;
        for c in hamsters.chars() {
            if c == 'H' {
                if h == 0 {
                    buckets += 1;
                }
                h += 1;
            } else {
                if h > 0 {
                    h -= 1;
                }
            }
        }
        if h > 0 {
            -1
        } else {
            buckets
        }

=======

        let mut ans = 0;
        let mut l = 0;
        let mut r = 0;
        for c in hamsters.chars() {
            if c == 'H' {
                if l == 0 {
                    ans += 1;
                    l = 1;
                }
                r = 0;
            } else {
                if l == 0 && r == 0 {
                    ans += 1;
                    l = 1;
                } else if l == 1 && r == 1 {
                    ans += 1;
                    l = 0;
                }
                r = 1;
            }
        }
        ans
    }
}

=======

        let mut count = 0;
        let mut previous = false;
        for c in hamsters.chars() {
            if c == 'H' {
                if previous {
                    count += 1;
                    previous = false;
                } else {
                    previous = true;
                }
            } else {
                previous = false;
            }
        }
        if previous {
            count += 1;
        }
        count

=======

        let mut h = 0;
        let mut r = 0;
        for c in hamsters.chars() {
            if c == 'H' {
                h += 1;
            }
            r = r.max(h);
            if c == '.' {
                h = h.saturating_sub(1);
            }
        }
        r

=======

        let mut res = 0;
        let mut i = 0;
        let mut j = hamsters.len() - 1;
        let mut left = false;
        let mut right = false;
        while i < j {
            if hamsters.as_bytes()[i] == 'H' as u8 {
                if left {
                    res += 1;
                    left = false;
                }
                if right {
                    right = false;
                }
            } else {
                if !left {
                    left = true;
                }
            }
            if hamsters.as_bytes()[j] == 'H' as u8 {
                if right {
                    res += 1;
                    right = false;
                }
                if left {
                    left = false;
                }
            } else {
                if !right {
                    right = true;
                }
            }
            i += 1;
            j -= 1;
        }
        if i == j && hamsters.as_bytes()[i] == '.' as u8 {
            if left || right {
                res += 1;
            }
        }
        res

=======

        let mut count: i32 = 0;
        let mut pre: i32 = 0;
        for (idx, c) in hamsters.chars().enumerate() {
            if c == 'H' {
                count += 1;
                if idx as i32 - pre > 1 {
                    count += 1;
                }
                pre = idx as i32;
            }
        }
        count

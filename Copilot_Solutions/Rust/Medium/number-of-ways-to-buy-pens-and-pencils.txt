Synthesizing 5/10 solutions

=======

        let mut ans = 0;
        for i in 0..=total {
            if i * cost1 > total {
                break;
            }
            if (total - i * cost1) % cost2 == 0 {
                ans += 1;
            }
        }
        ans
    }
}

=======

        let (cost1, cost2) = (cost1 as i64, cost2 as i64);
        let total = total as i64;
        let mut res = 0;
        for i in 0..=total / cost1 {
            let j = (total - i * cost1) / cost2;
            res += j + 1;
        }
        res

=======

        let mut ways = 0;
        for i in 0..=total {
            if i * cost1 > total {
                break;
            }
            if (total - i * cost1) % cost2 == 0 {
                ways += 1;
            }
        }
        ways

=======

        let mut ans = 0;
        for i in 0..=total {
            let j = total - i;
            if i % cost1 == 0 && j % cost2 == 0 {
                ans += 1;
            }
        }
        ans

=======

        
    }
}

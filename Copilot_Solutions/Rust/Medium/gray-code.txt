Synthesizing 10/10 solutions (Duplicates hidden)

=======
Suggestion 1

        let mut res = vec![0];
        let mut head = 1;
        for i in 0..n {
            for j in (0..res.len()).rev() {
                res.push(head + res[j]);
            }
            head <<= 1;
        }
        res

=======
Suggestion 2

        let mut res = vec![0];
        for i in 0..n {
            let inc = 1 << i;
            for j in (0..res.len()).rev() {
                res.push(res[j] + inc);
            }
        }
        res
    }
}

=======
Suggestion 3

        let mut res = vec![0];
        for i in 0..n {
            let size = res.len();
            for j in (0..size).rev() {
                res.push(res[j] | 1 << i);
            }
        }
        res

=======
Suggestion 4

        let mut result = vec![0];
        for i in 0..n {
            let size = result.len();
            for j in (0..size).rev() {
                result.push(result[j] | 1 << i);
            }
        }
        result

=======
Suggestion 5

        let mut res = vec![0];
        for i in 0..n {
            let add = 1 << i;
            let l = res.len();
            for j in (0..l).rev() {
                res.push(add + res[j]);
            }
        }
        res

=======
Suggestion 6

        let mut res: Vec<i32> = vec![];
        let mut i = 0;
        while i < 1 << n {
            res.push(i ^ (i >> 1));
            i += 1;
        }
        res
    }
}

=======
Suggestion 7

        let mut result = vec![0];
        for i in 0..n {
            let mut tmp = result.clone();
            tmp.reverse();
            for j in 0..tmp.len() {
                tmp[j] += 1 << i;
            }
            result.append(&mut tmp);
        }
        result
    }
}

=======
Suggestion 8

        let mut res = vec![0];
        for i in 0..n {
            let mut inc = 1 << i;
            let mut j = res.len() - 1;
            while j >= 0 {
                res.push(res[j] + inc);
                j -= 1;
            }
        }
        res

=======
Suggestion 9

        
    }
}

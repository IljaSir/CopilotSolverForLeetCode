Synthesizing 10/10 solutions

=======

        let mut max = 0;
        let mut ans = 0;
        for i in 0..arr.len() {
            max = std::cmp::max(max, arr[i]);
            if max == i as i32 {
                ans += 1;
            }
        }
        return ans;

=======

        let mut count = 0;
        let mut max = 0;
        for i in 0..arr.len() {
            max = max.max(arr[i]);
            if max == i as i32 {
                count += 1;
            }
        }
        count

=======

        let mut max = 0;
        let mut ans = 0;
        for (i, &x) in arr.iter().enumerate() {
            max = max.max(x);
            if max == i as i32 {
                ans += 1;
            }
        }
        ans

=======

        let mut max = 0;
        let mut count = 0;
        for (i, v) in arr.iter().enumerate() {
            max = max.max(*v);
            if max == i as i32 {
                count += 1;
            }
        }
        count
    }
}

=======

        let mut max = 0;
        let mut res = 0;
        for (i, &x) in arr.iter().enumerate() {
            max = max.max(x);
            if max == i as i32 {
                res += 1;
            }
        }
        res

=======

        let mut max = 0;
        let mut ans = 0;
        for (i, &v) in arr.iter().enumerate() {
            max = max.max(v);
            if max == i as i32 {
                ans += 1;
            }
        }
        ans

=======

        let mut max = 0;
        let mut count = 0;
        for (i, &num) in arr.iter().enumerate() {
            max = max.max(num);
            if max == i as i32 {
                count += 1;
            }
        }
        count
    }
}

=======

        let mut max = 0;
        let mut count = 0;
        for (i, &x) in arr.iter().enumerate() {
            max = std::cmp::max(max, x);
            if max == i as i32 {
                count += 1;
            }
        }
        count

=======

        let mut max = 0;
        let mut res = 0;
        for (i, v) in arr.iter().enumerate() {
            if *v > max {
                max = *v;
            }
            if max == i as i32 {
                res += 1;
            }
        }
        res

=======

        let mut max = -1;
        let mut count = 0;
        for (i, &a) in arr.iter().enumerate() {
            max = max.max(a);
            if max == i as i32 {
                count += 1;
            }
        }
        count
    }
}

Synthesizing 8/10 solutions

=======

        let mut c = 0;
        let mut r = 0;
        let mut o = 0;
        let mut a = 0;
        let mut k = 0;
        let mut frogs = 0;
        let mut max_frogs = 0;
        for ch in croak_of_frogs.chars() {
            match ch {
                'c' => {
                    c += 1;
                    frogs += 1;
                    max_frogs = max_frogs.max(frogs);
                },
                'r' => {
                    r += 1;
                    if r > c {
                        return -1;
                    }
                },
                'o' => {
                    o += 1;
                    if o > r {
                        return -1;
                    }
                },
                'a' => {
                    a += 1;
                    if a > o {
                        return -1;
                    }
                },
                'k' => {
                    k += 1;
                    if k > a {
                        return -1;
                    }
                    frogs -= 1;
                },
                _ => return -1,
            }
        }
        if c == r && r == o && o == a && a == k {
            max_frogs
        } else {
            -1
        }
    }
}

=======

        let mut c = 0;
        let mut r = 0;
        let mut o = 0;
        let mut a = 0;
        let mut k = 0;
        let mut frogs = 0;
        let mut max_frogs = 0;
        for ch in croak_of_frogs.chars() {
            match ch {
                'c' => {
                    c += 1;
                    frogs += 1;
                    if frogs > max_frogs {
                        max_frogs = frogs;
                    }
                }
                'r' => {
                    if c <= r {
                        return -1;
                    }
                    r += 1;
                }
                'o' => {
                    if r <= o {
                        return -1;
                    }
                    o += 1;
                }
                'a' => {
                    if o <= a {
                        return -1;
                    }
                    a += 1;
                }
                'k' => {
                    if a <= k {
                        return -1;
                    }
                    k += 1;
                    frogs -= 1;
                }
                _ => unreachable!(),
            }
        }
        if c == r && r == o && o == a && a == k {
            max_frogs
        } else {
            -1
        }
    }
}

=======

        let mut c = 0;
        let mut r = 0;
        let mut o = 0;
        let mut a = 0;
        let mut k = 0;
        let mut res = 0;
        for ch in croak_of_frogs.chars() {
            match ch {
                'c' => c += 1,
                'r' => r += 1,
                'o' => o += 1,
                'a' => a += 1,
                'k' => k += 1,
                _ => return -1,
            }
            if c < r || c < o || c < a || c < k {
                return -1;
            }
            res = res.max(c - k);
        }
        if c != r || c != o || c != a || c != k {
            return -1;
        }
        res

=======

        let mut frogs = 0;
        let mut c = 0;
        let mut r = 0;
        let mut o = 0;
        let mut a = 0;
        let mut k = 0;
        for ch in croak_of_frogs.chars() {
            match ch {
                'c' => {
                    c += 1;
                    frogs = frogs.max(c);
                },
                'r' => {
                    r += 1;
                    if r > c {
                        return -1;
                    }
                },
                'o' => {
                    o += 1;
                    if o > r {
                        return -1;
                    }
                },
                'a' => {
                    a += 1;
                    if a > o {
                        return -1;
                    }
                },
                'k' => {
                    k += 1;
                    if k > a {
                        return -1;
                    }
                },
                _ => unreachable!()
            }
        }
        if c == r && r == o && o == a && a == k {
            frogs
        } else {
            -1
        }

=======

        let mut croak_of_frogs = croak_of_frogs.into_bytes();
        let mut c = 0;
        let mut r = 0;
        let mut o = 0;
        let mut a = 0;
        let mut k = 0;
        let mut max = 0;
        let mut frogs = 0;
        for i in 0..croak_of_frogs.len() {
            match croak_of_frogs[i] {
                b'c' => {
                    c += 1;
                    frogs += 1;
                    max = max.max(frogs);
                },
                b'r' => {
                    r += 1;
                    if r > c {
                        return -1;
                    }
                },
                b'o' => {
                    o += 1;
                    if o > r {
                        return -1;
                    }
                },
                b'a' => {
                    a += 1;
                    if a > o {
                        return -1;
                    }
                },
                b'k' => {
                    k += 1;
                    if k > a {
                        return -1;
                    }
                    frogs -= 1;
                },
                _ => return -1,
            }
        }
        if c == r && r == o && o == a && a == k {
            max
        } else {
            -1
        }

=======

        let mut cnt = [0; 5];
        let mut res = 0;
        for c in croak_of_frogs.chars() {
            let idx = match c {
                'c' => 0,
                'r' => 1,
                'o' => 2,
                'a' => 3,
                'k' => 4,
                _ => unreachable!(),
            };
            if idx == 0 {
                res = res.max(++cnt[0]);
            } else {
                if cnt[idx - 1] <= 0 {
                    return -1;
                }
                cnt[idx - 1] -= 1;
            }
            cnt[idx] += 1;
        }
        if cnt.iter().all(|&x| x == 0) {
            res
        } else {
            -1
        }
    }
}

=======

        let mut count = [0; 5];
        let mut frogs = 0;
        let mut max = 0;
        for c in croak_of_frogs.chars() {
            let i = match c {
                'c' => 0,
                'r' => 1,
                'o' => 2,
                'a' => 3,
                'k' => 4,
                _ => return -1,
            };
            if i == 0 {
                frogs += 1;
            }
            if frogs == 0 {
                return -1;
            }
            count[i] += 1;
            if i > 0 && count[i] > count[i - 1] {
                return -1;
            }
            if i == 4 {
                frogs -= 1;
            }
            max = max.max(frogs);
        }
        if frogs > 0 {
            return -1;
        }
        max

=======

        let mut count = vec![0; 5];
        let mut ans = 0;
        let mut frogs = 0;
        for c in croak_of_frogs.chars() {
            let i = match c {
                'c' => 0,
                'r' => 1,
                'o' => 2,
                'a' => 3,
                'k' => 4,
                _ => unreachable!(),
            };
            count[i] += 1;
            if i == 0 {
                frogs += 1;
            } else if count[i] > count[i - 1] {
                return -1;
            }
            if i == 4 {
                frogs -= 1;
            }
            ans = ans.max(frogs);
        }
        if count[0] == count[1] && count[1] == count[2] && count[2] == count[3] && count[3] == count[4] {
            ans
        } else {
            -1
        }

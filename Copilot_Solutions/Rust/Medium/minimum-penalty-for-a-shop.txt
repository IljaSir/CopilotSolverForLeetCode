Synthesizing 10/10 solutions

=======

        let mut penalty = 0;
        for c in customers.chars() {
            if c == 'N' {
                penalty += 1;
            }
        }
        let mut min_penalty = penalty;
        let mut min_time = customers.len() as i32;
        for (i, c) in customers.chars().enumerate() {
            if c == 'N' {
                penalty += 1;
            } else {
                penalty -= 1;
            }
            if penalty < min_penalty {
                min_penalty = penalty;
                min_time = i as i32;
            }
        }
        min_time
    }
}

=======

        let mut penalty = 0;
        let mut min_penalty = customers.len() as i32;
        let mut closing_time = 0;
        for (i, c) in customers.chars().enumerate() {
            if c == 'Y' {
                penalty += 1;
            } else {
                penalty -= 1;
            }
            if penalty < min_penalty {
                min_penalty = penalty;
                closing_time = i as i32;
            }
        }
        closing_time
    }
}

=======

        let mut penalty = 0;
        let mut max_penalty = 0;
        let mut best_closing_time = 0;
        for (i, c) in customers.chars().enumerate() {
            if c == 'N' {
                penalty += 1;
            } else {
                penalty -= 1;
            }
            if penalty > max_penalty {
                max_penalty = penalty;
                best_closing_time = i as i32 + 1;
            }
        }
        best_closing_time

=======

        let mut penalty = 0;
        let mut min_penalty = 0;
        let mut min_penalty_hour = 0;
        for (hour, customer) in customers.chars().enumerate() {
            if customer == 'N' {
                penalty += 1;
            } else {
                penalty -= 1;
            }
            if penalty < min_penalty {
                min_penalty = penalty;
                min_penalty_hour = hour as i32 + 1;
            }
        }
        min_penalty_hour
    }
}

=======

        let mut cnt = 0;
        let mut res = 0;
        for i in 0..customers.len() {
            if customers.as_bytes()[i] == b'N' {
                cnt += 1;
                if cnt > res {
                    res = cnt;
                }
            } else {
                cnt = 0;
            }
        }
        res
    }
}

=======

        let mut penalty = 0;
        let mut min_penalty = 0;
        let mut min_penalty_hour = 0;
        let mut open = 0;
        for (i, c) in customers.chars().enumerate() {
            if c == 'Y' {
                penalty += 1;
                open += 1;
            } else {
                open -= 1;
                if open < 0 {
                    penalty += 1;
                    open = 0;
                }
            }
            if penalty < min_penalty {
                min_penalty = penalty;
                min_penalty_hour = i + 1;
            }
        }
        min_penalty_hour as i32
    }
}

=======

        let mut penalty = 0;
        let mut min_penalty = 0;
        let mut min_penalty_hour = 0;
        let mut open = 0;
        for (i, c) in customers.chars().enumerate() {
            penalty += if c == 'Y' { 1 } else { 0 };
            penalty += if open == 0 { 1 } else { 0 };
            if penalty < min_penalty {
                min_penalty = penalty;
                min_penalty_hour = i;
            }
            open += if c == 'Y' { 1 } else { -1 };
        }
        min_penalty_hour as i32
    }
}

=======

        let n = customers.len();
        let mut penalty = 0;
        let mut min_penalty = n as i32;
        let mut min_time = 0;
        for i in 0..n {
            if customers.chars().nth(i).unwrap() == 'Y' {
                penalty += 1;
            } else {
                penalty -= 1;
            }
            if penalty < min_penalty {
                min_penalty = penalty;
                min_time = i as i32 + 1;
            }
        }
        min_time
    }
}

=======

        let mut penalty = 0;
        let mut min_penalty = customers.len();
        let mut min_penalty_i = 0;
        let mut penalty_i = 0;
        for (i,c) in customers.chars().enumerate() {
            if c == 'Y' {
                penalty += 1;
            } else {
                penalty -= 1;
                if penalty < min_penalty {
                    min_penalty = penalty;
                    min_penalty_i = i;
                }
            }
        }
        min_penalty_i as i32 + 1

=======

        
    }
}

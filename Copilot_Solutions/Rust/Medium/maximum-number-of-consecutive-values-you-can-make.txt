Synthesizing 10/10 solutions

=======

        let mut coins = coins;
        coins.sort();
        let mut max = 0;
        for coin in coins {
            if coin > max + 1 {
                break;
            }
            max += coin;
        }
        max + 1

=======

        let mut coins = coins;
        coins.sort();
        let mut max = 0;
        for c in coins {
            if c > max + 1 {
                break;
            }
            max += c;
        }
        max + 1

=======

        let mut coins = coins;
        coins.sort();
        let mut res = 0;
        for coin in coins {
            if coin > res + 1 {
                break;
            }
            res += coin;
        }
        res + 1

=======

        let mut coins = coins;
        coins.sort();
        let mut res = 0;
        for c in coins {
            if c > res + 1 {
                break;
            }
            res += c;
        }
        res + 1
    }
}

=======

        let mut coins = coins;
        coins.sort();
        let mut max = 0;
        for i in coins {
            if i > max + 1 {
                break;
            }
            max += i;
        }
        max + 1

=======

        let mut coins = coins;
        coins.sort();
        let mut max = 0;
        for coin in coins {
            if coin > max + 1 {
                break;
            } else {
                max += coin;
            }
        }
        max + 1

=======

        let mut coins = coins;
        coins.sort();
        let mut res = 0;
        for i in coins {
            if i > res + 1 {
                break;
            }
            res += i;
        }
        res + 1

=======

        let mut coins = coins;
        coins.sort();
        let mut max = 0;
        for &c in coins.iter() {
            if c > max + 1 {
                break;
            }
            max += c;
        }
        max + 1
    }
}

=======

        let mut coins = coins;
        coins.sort();
        let mut res = 0;
        for i in 0..coins.len() {
            if coins[i] > res + 1 {
                break;
            } else {
                res += coins[i];
            }
        }
        res + 1
    }
}

=======

        let mut coins = coins;
        coins.sort();
        let mut max = 0;
        for &c in coins.iter() {
            if c <= max + 1 {
                max += c;
            } else {
                break;
            }
        }
        max + 1

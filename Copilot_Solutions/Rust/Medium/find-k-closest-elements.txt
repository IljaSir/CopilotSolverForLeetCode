Synthesizing 5/10 solutions (Duplicates hidden)

=======
Suggestion 1

        
    }
}

=======
Suggestion 2

        let mut left = 0;
        let mut right = arr.len() - 1;
        while right - left + 1 > k as usize {
            let left_diff = (arr[left] - x).abs();
            let right_diff = (arr[right] - x).abs();
            if left_diff > right_diff {
                left += 1;
            } else {
                right -= 1;
            }
        }
        arr[left..=right].to_vec()

=======
Suggestion 3

        let mut arr = arr;
        let mut k = k;
        let mut x = x;
        let mut i = 0;
        let mut j = arr.len() - 1;
        while j - i + 1 > k as usize {
            if (x - arr[i]).abs() <= (x - arr[j]).abs() {
                j -= 1;
            } else {
                i += 1;
            }
        }
        arr[i..=j].to_vec()

Synthesizing 7/10 solutions (Duplicates hidden)

=======

        
    }
}

=======

        let mut nums = nums;
        nums.sort();
        let mut ans = 0;
        let mut i = 0;
        while i < nums.len() {
            let mut j = i + 1;
            while j < nums.len() && nums[j] <= 2 * nums[i] {
                j += 1;
            }
            ans = ans.max(j - i);
            i += 1;
        }
        ans as i32

=======

        let mut nums = nums;
        nums.sort();
        let mut i = 0;
        let mut j = nums.len() - 1;
        let mut count = 0;
        while i < j {
            if nums[i] * 2 <= nums[j] {
                count += 1;
                i += 1;
                j -= 1;
            } else {
                j -= 1;
            }
        }
        count
    }
}

=======

        let mut nums = nums;
        nums.sort();
        let mut ans = 0;
        let mut i = 0;
        let mut j = nums.len() - 1;
        while i < j {
            if 2 * nums[i] <= nums[j] {
                ans += 2;
                i += 1;
                j -= 1;
            } else {
                j -= 1;
            }
        }
        if i == j {
            ans += 1;
        }
        ans

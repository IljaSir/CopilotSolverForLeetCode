Synthesizing 10/10 solutions

=======
Suggestion 1

        let mut max = nums[0];
        let mut sum = 0;
        for i in 0..nums.len() {
            sum += nums[i];
            if sum > max {
                max = sum;
            }
            if sum < 0 {
                sum = 0;
            }
        }
        max

=======
Suggestion 2

        let mut max = nums[0];
        let mut sum = nums[0];
        for i in 1..nums.len() {
            if sum < 0 {
                sum = nums[i];
            } else {
                sum += nums[i];
            }
            if sum > max {
                max = sum;
            }
        }
        max

=======
Suggestion 3

        let mut max = i32::MIN;
        let mut sum = 0;
        for n in nums {
            sum += n;
            if sum > max {
                max = sum;
            }
            if sum < 0 {
                sum = 0;
            }
        }
        max

=======
Suggestion 4

        let mut max = nums[0];
        let mut sum = 0;
        for i in 0..nums.len() {
            if sum < 0 {
                sum = nums[i];
            } else {
                sum += nums[i];
            }
            if sum > max {
                max = sum;
            }
        }
        max

=======
Suggestion 5

        let mut sum = 0;
        let mut max = i32::MIN;
        for i in 0..nums.len() {
            sum += nums[i];
            if sum > max {
                max = sum;
            }
            if sum < 0 {
                sum = 0;
            }
        }
        return max;

=======
Suggestion 6

        let mut max_sum = nums[0];
        let mut cur_sum = 0;
        for i in 0..nums.len() {
            cur_sum += nums[i];
            if cur_sum > max_sum {
                max_sum = cur_sum;
            }
            if cur_sum < 0 {
                cur_sum = 0;
            }
        }
        max_sum
    }
}

=======
Suggestion 7

        let mut max = nums[0];
        let mut sum = 0;
        for i in 0..nums.len() {
            sum = sum + nums[i];
            if sum > max {
                max = sum;
            }
            if sum < 0 {
                sum = 0;
            }
        }
        max

=======
Suggestion 8

        let mut max_sum = nums[0];
        let mut cur_sum = nums[0];
        for i in 1..nums.len() {
            cur_sum = cur_sum.max(nums[i]);
            max_sum = max_sum.max(cur_sum);
            cur_sum += nums[i];
        }
        max_sum

=======
Suggestion 9

        let mut max = -10000;
        let mut sum = 0;
        for i in 0..nums.len() {
            sum += nums[i];
            if sum > max {
                max = sum;
            }
            if sum < 0 {
                sum = 0;
            }
        }
        max

=======
Suggestion 10

        let mut max = nums[0];
        let mut cur = nums[0];
        for i in 1..nums.len() {
            cur = cur.max(nums[i]);
            cur = (cur + nums[i]).max(nums[i]);
            max = max.max(cur);
        }
        max

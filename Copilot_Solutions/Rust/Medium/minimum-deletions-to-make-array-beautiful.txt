Synthesizing 10/10 solutions

=======

        let mut count = 0;
        let mut i = 0;
        while i < nums.len() - 1 {
            if nums[i] == nums[i + 1] {
                count += 1;
                i += 2;
            } else {
                i += 1;
            }
        }
        count

=======

        let mut count = 0;
        let mut i = 0;
        while i < nums.len() - 1 {
            if nums[i] == nums[i + 1] {
                count += 1;
                i += 1;
            }
            i += 1;
        }
        count
    }
}

=======

        let mut count = 0;
        let mut prev = nums[0];
        for i in 1..nums.len() {
            if nums[i] == prev {
                count += 1;
            } else {
                prev = nums[i];
            }
        }
        count

=======

        let mut res = 0;
        for i in (0..nums.len()-1).step_by(2) {
            if nums[i] == nums[i+1] {
                res += 1;
            }
        }
        res

=======

        let mut ans = 0;
        let mut last = nums[0];
        for i in 1..nums.len() {
            if nums[i] == last {
                ans += 1;
            } else {
                last = nums[i];
            }
        }
        ans

=======

        let mut res = 0;
        let mut last = nums[0];
        for i in 1..nums.len() {
            if nums[i] == last {
                res += 1;
            } else {
                last = nums[i];
            }
        }
        res

=======

        let mut res = 0;
        let mut prev = nums[0];
        for i in 1..nums.len() {
            if prev == nums[i] {
                res += 1;
            } else {
                prev = nums[i];
            }
        }
        res

=======

        let mut count = 0;
        let mut last = -1;
        for i in 0..nums.len() {
            if i % 2 == 0 {
                if nums[i] == last {
                    count += 1;
                }
                last = nums[i];
            } else {
                if nums[i] == last {
                    count += 1;
                } else {
                    last = nums[i];
                }
            }
        }
        count

=======

        let mut ans = 0;
        let mut pre = nums[0];
        for i in 1..nums.len() {
            if i % 2 == 0 {
                if pre == nums[i] {
                    ans += 1;
                } else {
                    pre = nums[i];
                }
            } else {
                if pre == nums[i] {
                    ans += 1;
                } else {
                    pre = nums[i];
                }
            }
        }
        ans

=======

        let mut prev = nums[0];
        let mut count = 0;
        let mut is_first = true;
        for x in nums {
            if is_first {
                is_first = false;
                continue;
            }
            if x == prev {
                count += 1;
            } else {
                prev = x;
            }
        }
        count

Synthesizing 9/10 solutions (Duplicates hidden)

=======

        int ans = 0;
        while (n > 0) {
            ans ^= n;
            n >>= 1;
        }
        return ans;

=======

        int result = 0;
        while (n) {
            result ^= n;
            n >>= 1;
        }
        return result;

=======

        return n > 0 ? (1 << (32 - __builtin_clz(n))) - 1 - minimumOneBitOperations(n & (n - 1)) : 0;

=======

        int res = 0;
        int k = 0;
        while (n > 0) {
            res |= (n ^ (n >> 1)) << k;
            n >>= 1;
            k++;
        }
        return res;

=======

        int res = 0;
        int k = 0;
        while (n) {
            res += (n % 2) * (1 << k);
            k++;
            n >>= 1;
        }
        return res;

=======

        return n ? (n ^ (n >> 1)) : 0;

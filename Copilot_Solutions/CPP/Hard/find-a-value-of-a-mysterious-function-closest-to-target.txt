Synthesizing 9/10 solutions (Duplicates hidden)

=======

        int ans = INT_MAX;
        for (int i = 0; i < arr.size(); ++i) {
            int t = arr[i];
            for (int j = i; j < arr.size(); ++j) {
                t &= arr[j];
                ans = min(ans, abs(t - target));
            }
        }
        return ans;

=======

        int n = arr.size();
        int ans = INT_MAX;
        for (int i = 0; i < n; ++i) {
            int x = arr[i];
            for (int j = i; j < n; ++j) {
                x &= arr[j];
                ans = min(ans, abs(x - target));
            }
        }
        return ans;

=======

        int n = arr.size();
        int ans = INT_MAX;
        for (int i = 0; i < n; ++i) {
            int x = arr[i];
            for (int j = i; j < n; ++j) {
                x &= arr[j];
                ans = min(ans, abs(x - target));
            }
        }
        return ans;

=======

        int n = arr.size();
        int ans = INT_MAX;
        for (int i = 0; i < n; i++) {
            int x = arr[i];
            for (int j = i; j < n; j++) {
                x &= arr[j];
                ans = min(ans, abs(x - target));
            }
        }
        return res;

=======

        int n = arr.size();
        int res = INT_MAX;
        for (int i = 0; i < n; ++i) {
            int cur = 0;
            for (int j = i; j < n; ++j) {
                cur &= arr[j];
                res = min(res, abs(cur - target));
            }
        }
        return ans;

=======

        int res = INT_MAX;
        int n = arr.size();
        for (int i = 0; i < n; ++i) {
            int x = arr[i];
            for (int j = i; j < n; ++j) {
                x &= arr[j];
                res = min(res, abs(x - target));
            }
        }
        return res;

=======

        int n = arr.size();
        int res = INT_MAX;
        for (int i = 0; i < n; ++i) {
            int cur = 0;
            for (int j = i; j < n; ++j) {
                cur &= arr[j];
                res = min(res, abs(cur - target));
            }
        }
        return res;

=======

        int result = 0x7FFFFFFF;
        int n = arr.size();
        for (int i = 0; i < n; i++) {
            int t = arr[i];
            for (int j = i; j < n; j++) {
                t &= arr[j];
                result = min(result, abs(t - target));
            }
        }
        return result;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if (k > 1) {
            sort(s.begin(), s.end());
            return s;
        }
        string ans = s;
        for (int i = 1; i < s.size(); ++i) {
            string t = s.substr(i) + s.substr(0, i);
            ans = min(ans, t);
        }
        return ans;

=======

        if (k == 1) {
            string ans = s;
            for (int i = 0; i < s.size(); ++i) {
                string t = s.substr(i) + s.substr(0, i);
                ans = min(ans, t);
            }
            return ans;
        }
        sort(s.begin(), s.end());
        return s;

=======

        if (k > 1) {
            sort(s.begin(), s.end());
            return s;
        }
        string ans = s;
        for (int i = 1; i < s.length(); ++i) {
            string t = s.substr(i) + s.substr(0, i);
            if (t < ans) ans = t;
        }
        return ans;

=======

        if (k > 1) {
            sort(s.begin(), s.end());
            return s;
        }
        string res = s;
        for (int i = 0; i < s.size(); ++i) {
            string t = s.substr(i) + s.substr(0, i);
            if (t < res) res = t;
        }
        return res;

=======

        if (k == 1) {
            string ans = s;
            for (int i = 0; i < s.size(); i++) {
                string t = s.substr(i) + s.substr(0, i);
                ans = min(ans, t);
            }
            return ans;
        } else {
            sort(s.begin(), s.end());
            return s;
        }

=======

        if (k == 1) {
            string res = s;
            for (int i = 0; i < s.length(); i++) {
                string t = s.substr(i) + s.substr(0, i);
                if (t < res) {
                    res = t;
                }
            }
            return res;
        }
        sort(s.begin(), s.end());
        return s;

=======

        if (k > 1) {
            sort(s.begin(), s.end());
            return s;
        }
        string ans = s;
        for (int i = 0; i < s.size(); i++) {
            string tmp = s.substr(i) + s.substr(0, i);
            if (tmp < ans) {
                ans = tmp;
            }
        }
        return ans;

=======

        if (k == 1) {
            string res = s;
            for (int i = 0; i < s.length(); ++i) {
                string s1 = s.substr(i);
                string s2 = s.substr(0, i);
                res = min(res, s1 + s2);
            }
            return res;
        }
        sort(s.begin(), s.end());
        return s;

Synthesizing 10/10 solutions

=======

        int x1 = 0, x2 = 0;
        for (int x : arr1) x1 ^= x;
        for (int x : arr2) x2 ^= x;
        return x1 & x2;

=======

        int a = 0, b = 0;
        for (auto x : arr1) a ^= x;
        for (auto x : arr2) b ^= x;
        return a & b;

=======

        int x1 = 0, x2 = 0;
        for (auto x : arr1) x1 ^= x;
        for (auto x : arr2) x2 ^= x;
        return x1 & x2;

=======

        int x = 0;
        for (int i : arr1) {
            x ^= i;
        }
        int y = 0;
        for (int i : arr2) {
            y ^= i;
        }
        return x & y;

=======

        int x = 0, y = 0;
        for (auto i : arr1) x ^= i;
        for (auto i : arr2) y ^= i;
        return x & y;

=======

        int a1 = 0;
        for (auto a : arr1) a1 ^= a;
        int a2 = 0;
        for (auto a : arr2) a2 ^= a;
        return a1 & a2;

=======

        int a = 0;
        for(int i = 0; i < arr1.size(); i++){
            a ^= arr1[i];
        }
        int b = 0;
        for(int i = 0; i < arr2.size(); i++){
            b ^= arr2[i];
        }
        return a & b;

=======

        int x = 0;
        for (auto a: arr1)
            x ^= a;
        int y = 0;
        for (auto a: arr2)
            y ^= a;
        return x & y;

=======

        int x1=0, x2=0;
        for (int i=0; i<arr1.size(); i++) x1 ^= arr1[i];
        for (int i=0; i<arr2.size(); i++) x2 ^= arr2[i];
        return x1 & x2;

=======

        int n = arr1.size();
        int m = arr2.size();
        int x = 0, y = 0;
        for(int i = 0; i < n; i++) {
            x ^= arr1[i];
        }
        for(int i = 0; i < m; i++) {
            y ^= arr2[i];
        }
        return x & y;

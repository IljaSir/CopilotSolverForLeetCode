Synthesizing 10/10 solutions

=======

        int ans = target[0];
        for (int i = 1; i < target.size(); ++i) {
            ans += max(0, target[i] - target[i - 1]);
        }
        return ans;

=======

        int res = target[0];
        for (int i = 1; i < target.size(); i++) {
            res += max(0, target[i] - target[i - 1]);
        }
        return res;

=======

        int ans = target[0];
        for (int i = 1; i < target.size(); i++) {
            ans += max(0, target[i] - target[i - 1]);
        }
        return ans;

=======

        int n = target.size();
        int ans = target[0];
        for (int i = 1; i < n; i++) {
            ans += max(target[i] - target[i-1], 0);
        }
        return ans;

=======

        int n = target.size();
        int ans = target[0];
        for (int i = 1; i < n; ++i) {
            if (target[i] > target[i-1]) {
                ans += target[i] - target[i-1];
            }
        }
        return ans;

=======

        int res = 0;
        for (int i = 0; i < target.size(); i++) {
            if (i == 0) {
                res += target[i];
            } else {
                res += max(0, target[i] - target[i - 1]);
            }
        }
        return res;

=======

        int ans = 0;
        int prev = 0;
        for (int i = 0; i < target.size(); i++) {
            ans += max(target[i] - prev, 0);
            prev = target[i];
        }
        return ans;

=======

        int n = target.size();
        int sum = 0;
        for (int i = 0; i < n; i++) {
            if (i == 0) {
                sum += target[i];
            } else {
                if (target[i] > target[i - 1]) {
                    sum += target[i] - target[i - 1];
                }
            }
        }
        return sum;

=======

        int res = 0, n = target.size();
        for (int i = 0; i < n; ++i) {
            if (i == 0 || target[i] > target[i - 1]) {
                res += target[i] - (i == 0 ? 0 : target[i - 1]);
            }
        }
        return res;

=======

        int n = target.size();
        int ans = target[0];
        for(int i = 1; i < n; i++)
        {
            if(target[i] > target[i-1])
                ans += target[i] - target[i-1];
        }
        return ans;

Synthesizing 10/10 solutions

=======

        int n = nums.size();
        long long ans = 0;
        for (int i = 0; i < n; ++i) {
            for (int j = i + 1; j < n; ++j) {
                for (int k = j + 1; k < n; ++k) {
                    for (int l = k + 1; l < n; ++l) {
                        if (nums[i] < nums[k] && nums[k] < nums[j] && nums[j] < nums[l]) {
                            ans++;
                        }
                    }
                }
            }
        }
        return ans;

=======

        long long res = 0;
        for (int i = 0; i < nums.size() - 3; i++) {
            for (int j = i + 1; j < nums.size() - 2; j++) {
                for (int k = j + 1; k < nums.size() - 1; k++) {
                    for (int l = k + 1; l < nums.size(); l++) {
                        if (nums[i] < nums[k] && nums[k] < nums[j] && nums[j] < nums[l]) {
                            res++;
                        }
                    }
                }
            }
        }
        return res;

=======

        long long result = 0;
        for (int i = 0; i < nums.size() - 3; i++) {
            for (int j = i + 1; j < nums.size() - 2; j++) {
                for (int k = j + 1; k < nums.size() - 1; k++) {
                    for (int l = k + 1; l < nums.size(); l++) {
                        if (nums[i] < nums[k] && nums[k] < nums[j] && nums[j] < nums[l]) {
                            result++;
                        }
                    }
                }
            }
        }
        return result;

=======

        long long count = 0;
        for (int i = 0; i < nums.size() - 3; ++i) {
            for (int j = i + 1; j < nums.size() - 2; ++j) {
                for (int k = j + 1; k < nums.size() - 1; ++k) {
                    for (int l = k + 1; l < nums.size(); ++l) {
                        if (nums[i] < nums[k] && nums[k] < nums[j] && nums[j] < nums[l]) {
                            ++count;
                        }
                    }
                }
            }
        }
        return count;

=======

        long long ans = 0;
        int n = nums.size();
        for (int i = 0; i < n - 3; i++) {
            for (int j = i + 1; j < n - 2; j++) {
                for (int k = j + 1; k < n - 1; k++) {
                    for (int l = k + 1; l < n; l++) {
                        if (nums[i] < nums[k] && nums[k] < nums[j] && nums[j] < nums[l]) {
                            ans++;
                        }
                    }
                }
            }
        }
        return ans;

=======

        long long res = 0;
        int n = nums.size();
        for (int i = 0; i < n - 3; ++i) {
            for (int j = i + 1; j < n - 2; ++j) {
                for (int k = j + 1; k < n - 1; ++k) {
                    for (int l = k + 1; l < n; ++l) {
                        if (nums[i] < nums[k] && nums[k] < nums[j] && nums[j] < nums[l]) {
                            res++;
                        }
                    }
                }
            }
        }
        return res;

=======

        long long ret = 0;
        for (int i = 0; i < nums.size() - 3; i++) {
            for (int j = i + 1; j < nums.size() - 2; j++) {
                for (int k = j + 1; k < nums.size() - 1; k++) {
                    for (int l = k + 1; l < nums.size(); l++) {
                        if (nums[i] < nums[k] && nums[k] < nums[j] && nums[j] < nums[l]) {
                            ret++;
                        }
                    }
                }
            }
        }
        return ret;

=======

        long long ans = 0;
        int n = nums.size();
        for (int i = 0; i < n; ++i)
            for (int j = i + 1; j < n; ++j)
                for (int k = j + 1; k < n; ++k)
                    for (int l = k + 1; l < n; ++l)
                        if (nums[i] < nums[k] && nums[k] < nums[j] && nums[j] < nums[l])
                            ++ans;
        return ans;

=======

        long long n = nums.size();
        long long ans = 0;
        for (long long i = 0; i < n; i++) {
            for (long long j = i + 1; j < n; j++) {
                for (long long k = j + 1; k < n; k++) {
                    for (long long l = k + 1; l < n; l++) {
                        if (nums[i] < nums[k] && nums[k] < nums[j] && nums[j] < nums[l]) {
                            ans++;
                        }
                    }
                }
            }
        }
        return ans;

=======

        long long res = 0;
        int n = nums.size();
        for(int i = 0; i < n-3; i++){
            for(int j = i+1; j < n-2; j++){
                for(int k = j+1; k < n-1; k++){
                    for(int l = k+1; l < n; l++){
                        if(nums[i] < nums[k] && nums[j] < nums[l]){
                            res++;
                        }
                    }
                }
            }
        }
        return res;

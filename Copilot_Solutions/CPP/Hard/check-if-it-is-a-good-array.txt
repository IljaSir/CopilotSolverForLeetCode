Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int g = nums[0];
        for (int i = 1; i < nums.size(); ++i) {
            g = gcd(g, nums[i]);
        }
        return g == 1;

=======

        int g = nums[0];
        for (int i = 1; i < nums.size(); i++) {
            g = gcd(g, nums[i]);
        }
        return g == 1;

=======

        int res = nums[0];
        for (int i = 1; i < nums.size(); i++) {
            res = gcd(res, nums[i]);
        }
        return res == 1;

=======

        int res = nums[0];
        for (int i = 1; i < nums.size(); i++) {
            res = gcd(res, nums[i]);
            if (res == 1) return true;
        }
        return res == 1;

=======

        int res = nums[0];
        for (int i = 1; i < nums.size(); i++) {
            res = gcd(res, nums[i]);
        }
        return res == 1;
    }
    int gcd(int a, int b) {
        if (a < b) {
            return gcd(b, a);
        }
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);

=======

        int g = nums[0];
        for (int i = 1; i < nums.size(); i++) {
            g = gcd(g, nums[i]);
        }
        return g == 1;
    }
    
    int gcd(int a, int b) {
        while (b != 0) {
            int t = b;
            b = a % b;
            a = t;
        }
        return a;

=======

        int res = nums[0];
        for (int i = 1; i < nums.size(); ++i) {
            res = gcd(res, nums[i]);
        }
        return res == 1;
    }
    
    int gcd(int a, int b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);

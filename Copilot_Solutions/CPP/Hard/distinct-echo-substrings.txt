Synthesizing 4/10 solutions

=======

        int n = text.size();
        set<string> s;
        for (int i = 0; i < n; i++) {
            string t = "";
            for (int j = i; j < n; j++) {
                t += text[j];
                if (j - i + 1 > t.size()) continue;
                if (t.substr(0, j - i + 1) == t.substr(j - i + 1)) {
                    s.insert(t);
                }
            }
        }
        return s.size();

=======

        int n = text.size(), ans = 0;
        unordered_set<string> s;
        for (int i = 0; i < n; ++i) {
            string t = "";
            for (int j = i; j < n; ++j) {
                t += text[j];
                if (j - i + 1 > t.size()) break;
                if (j - i + 1 == t.size() && t.substr(0, t.size() / 2) == t.substr(t.size() / 2)) {
                    if (s.find(t) == s.end()) {
                        s.insert(t);
                        ++ans;
                    }
                }
            }
        }
        return ans;

=======

        unordered_set<string> s;
        for (int i = 0; i < text.size(); ++i) {
            for (int j = i + 1; j < text.size(); ++j) {
                string str = text.substr(i, j - i);
                if (j + str.size() > text.size()) {
                    break;
                }
                if (str == text.substr(j, str.size())) {
                    s.insert(str);
                }
            }
        }
        return s.size();

=======

        int n = text.size();
        unordered_set<string> st;
        for(int i = 0; i < n; ++i){
            for(int j = 1; j <= n - i; j += 2){
                string s = text.substr(i, j);
                if(s.substr(0, j / 2) == s.substr(j / 2)){
                    st.insert(s);
                }
            }
        }
        return st.size();

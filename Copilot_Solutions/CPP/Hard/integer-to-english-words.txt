Synthesizing 10/10 solutions

=======

        if (num == 0) return "Zero";
        string res;
        int i = 0;
        while (num > 0) {
            if (num % 1000 != 0) {
                res = helper(num % 1000) + thousands[i] + (res.empty() ? "" : " ") + res;
            }
            num /= 1000;
            ++i;
        }
        return res;

=======

        if (num == 0) {
            return "Zero";
        }
        vector<string> units = {"", "Thousand", "Million", "Billion"};
        string res;
        int i = 0;
        while (num > 0) {
            if (num % 1000 != 0) {
                res = helper(num % 1000) + units[i] + " " + res;
            }
            num /= 1000;
            i++;
        }
        while (res.back() == ' ') {
            res.pop_back();
        }
        return res;

=======

        if (num == 0) return "Zero";
        string res = "";
        vector<string> units = {"", "Thousand", "Million", "Billion"};
        int i = 0;
        while (num > 0) {
            int cur = num % 1000;
            if (cur > 0) {
                string curStr = helper(cur);
                res = curStr + units[i] + " " + res;
            }
            num /= 1000;
            ++i;
        }
        res.pop_back();
        return res;

=======

        if (num == 0) {
            return "Zero";
        }
        vector<string> units = {"", " Thousand", " Million", " Billion"};
        string ans;
        int i = 0;
        while (num > 0) {
            if (num % 1000 != 0) {
                ans = numToWords(num % 1000) + units[i] + ans;
            }
            num /= 1000;
            i++;
        }
        return ans.substr(1);
    }

    string numToWords(int num) {
        vector<string> below20 = {"", " One", " Two", " Three", " Four", " Five", " Six", " Seven", " Eight", " Nine", " Ten", " Eleven", " Twelve", " Thirteen", " Fourteen", " Fifteen", " Sixteen", " Seventeen", " Eighteen", " Nineteen"};
        vector<string> tens = {"", "", " Twenty", " Thirty", " Forty", " Fifty", " Sixty", " Seventy", " Eighty", " Ninety"};
        string ans;
        if (num >= 100) {
            ans += below20[num / 100] + " Hundred";
            num %= 100;
        }
        if (num >= 20) {
            ans += tens[num / 10];
            num %= 10;
        }
        if (num >= 1) {
            ans += below20[num];
        }
        return ans;

=======

        if (num == 0) return "Zero";
        vector<string> v = {"", "Thousand", "Million", "Billion"};
        string ans;
        int i = 0;
        while (num) {
            int n = num % 1000;
            if (n) {
                string s = helper(n);
                ans = s + (i ? " " + v[i] : "") + (ans.empty() ? "" : " " + ans);
            }
            num /= 1000;
            i++;
        }
        return ans;
    }
    
    string helper(int num) {
        vector<string> v = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"};
        vector<string> v1 = {"Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
        vector<string> v2 = {"", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
        string ans;
        int n = num % 10;
        if (n) ans = v[n];
        num /= 10;
        n = num % 10;
        if (n == 1) {
            ans = v1[n] + (ans.empty() ? "" : " " + ans);
        } else {
            if (n) {
                ans = v2[n] + (ans.empty() ? "" : " " + ans);
            }
        }
        num /= 10;
        n = num % 10;
        if (n) {
            ans = v[n] + " Hundred" + (ans.empty() ? "" : " " + ans);
        }
        return ans;

=======

        if (num == 0) return "Zero";
        vector<string> units = {"", " Thousand", " Million", " Billion"};
        string ret;
        int i = 0;
        while (num > 0) {
            int n = num % 1000;
            if (n > 0) {
                ret = helper(n) + units[i] + (ret.empty() ? "" : " ") + ret;
            }
            num /= 1000;
            i++;
        }
        return ret;
    }
    string helper(int num) {
        vector<string> digits = {"One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"};
        vector<string> teens = {"Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
        vector<string> tens = {"Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
        string ret;
        int h = num / 100;
        if (h > 0) {
            ret = digits[h - 1] + " Hundred";
        }
        int t = num % 100;
        if (t >= 11 && t <= 19) {
            ret += (ret.empty() ? "" : " ") + teens[t - 11];
        } else {
            if (t / 10 > 0) {
                ret += (ret.empty() ? "" : " ") + tens[t / 10 - 1];
            }
            int d = t % 10;
            if (d > 0) {
                ret += (ret.empty() ? "" : " ") + digits[d - 1];
            }
        }
        return ret;

=======

        if (num == 0) return "Zero";
        vector<string> units = {"", "Thousand", "Million", "Billion"};
        string ans = "";
        int idx = 0;
        while (num) {
            int n = num % 1000;
            if (n != 0) {
                string s = helper(n);
                ans = s + (ans.empty() ? "" : " ") + units[idx] + (ans.empty() ? "" : " ") + ans;
            }
            num /= 1000;
            idx++;
        }
        return ans;
    }
    
    string helper(int num) {
        vector<string> below20 = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
        vector<string> tens = {"", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
        string ans = "";
        if (num >= 100) {
            ans = below20[num / 100] + " Hundred";
            num %= 100;
        }
        if (num >= 20) {
            ans = (ans.empty() ? "" : ans + " ") + tens[num / 10];
            num %= 10;
        }
        if (num > 0) {
            ans = (ans.empty() ? "" : ans + " ") + below20[num];
        }
        return ans;

=======

        if (num == 0) return "Zero";
        string ans = "";
        vector<string> thousands = {"", "Thousand", "Million", "Billion"};
        int i = 0;
        while (num > 0) {
            if (num % 1000 != 0) {
                ans = helper(num % 1000) + thousands[i] + " " + ans;
            }
            num /= 1000;
            i++;
        }
        while (ans.back() == ' ') ans.pop_back();
        return ans;
    }
    string helper(int num) {
        if (num == 0) return "";
        else if (num < 20) return belowTwenty[num] + " ";
        else if (num < 100) return tens[num / 10] + " " + helper(num % 10);
        else return belowTwenty[num / 100] + " Hundred " + helper(num % 100);

=======

        if (num == 0) return "Zero";
        string res;
        int i = 0;
        while (num) {
            if (num % 1000) {
                string tmp = helper(num % 1000);
                if (i) tmp += " " + thousands[i] + " ";
                res = tmp + res;
            }
            num /= 1000;
            i++;
        }
        while (res.back() == ' ') res.pop_back();
        return res;

=======

        if (num == 0) return "Zero";
        string ans = "";
        int i = 0;
        while (num) {
            if (num % 1000) ans = helper(num % 1000) + thousands[i] + (ans == "" ? "" : " ") + ans;
            num /= 1000;
            i++;
        }
        return ans;

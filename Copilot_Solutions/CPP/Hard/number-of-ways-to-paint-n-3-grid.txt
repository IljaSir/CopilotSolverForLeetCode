Synthesizing 6/10 solutions

=======

        long long a121 = 6, a123 = 6, mod = 1e9 + 7;
        for (int i = 1; i < n; ++i) {
            long long b121 = 3 * a121 + 2 * a123;
            long long b123 = 2 * a121 + 2 * a123;
            a121 = b121 % mod;
            a123 = b123 % mod;
        }
        return (a121 + a123) % mod;

=======

        constexpr int kMod = 1e9 + 7;
        long long a121 = 6, a123 = 6;
        for (int i = 1; i < n; ++i) {
            long long b121 = (3 * a121 + 2 * a123) % kMod;
            long long b123 = (2 * a121 + 2 * a123) % kMod;
            a121 = b121;
            a123 = b123;
        }
        return (a121 + a123) % kMod;

=======

        long long a121 = 6, a123 = 6;
        long long mod = 1000000007;
        for (int i = 1; i < n; i++) {
            long long b121 = 3 * a121 + 2 * a123;
            long long b123 = 2 * a121 + 2 * a123;
            a121 = b121 % mod;
            a123 = b123 % mod;
        }
        return (a121 + a123) % mod;

=======

        vector<long> dp(3, 6);
        for (int i = 1; i < n; ++i) {
            vector<long> ndp(3);
            ndp[0] = dp[0] * 2 + dp[1] * 2;
            ndp[1] = dp[0] * 2 + dp[2] * 2;
            ndp[2] = dp[1] * 2 + dp[2] * 2;
            for (int j = 0; j < 3; ++j) {
                ndp[j] %= 1000000007;
            }
            dp = ndp;
        }
        return (dp[0] + dp[1] + dp[2]) % 1000000007;

=======

        int mod = 1000000007;
        long long same = 6, diff = 6;
        for (int i = 2; i <= n; i++) {
            long long same_temp = same;
            same = (3 * same_temp + 2 * diff) % mod;
            diff = (2 * same_temp + 2 * diff) % mod;
        }
        return (same + diff) % mod;

=======

        long long int same = 6, diff = 6, mod = 1000000007;
        for(int i = 2; i <= n; i++) {
            long long int temp = same;
            same = diff;
            diff = (temp * 2 + diff * 3) % mod;
        }
        return (same + diff) % mod;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        vector<int> target;
        for (int i = 0; i < nums.size(); i++) {
            target.insert(target.begin() + index[i], nums[i]);
        }
        return target;

=======

        vector<int> result;
        for (int i = 0; i < nums.size(); i++) {
            result.insert(result.begin() + index[i], nums[i]);
        }
        return result;

=======

        vector<int> target;
        for (int i = 0; i < nums.size(); ++i) {
            target.insert(target.begin() + index[i], nums[i]);
        }
        return target;

=======

        vector<int> target;
        int n = nums.size();
        for (int i = 0; i < n; ++i) {
            target.insert(target.begin() + index[i], nums[i]);
        }
        return target;

=======

        vector<int> target;
        for (int i = 0; i < nums.size(); i++) {
            auto it = target.begin();
            target.insert(it + index[i], nums[i]);
        }
        return target;

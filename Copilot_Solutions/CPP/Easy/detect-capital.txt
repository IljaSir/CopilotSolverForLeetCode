Synthesizing 10/10 solutions

=======

        int n = word.size();
        if (n == 1) return true;
        if (isupper(word[0])) {
            if (isupper(word[1])) {
                for (int i = 2; i < n; i++) {
                    if (!isupper(word[i])) return false;
                }
            } else {
                for (int i = 2; i < n; i++) {
                    if (!islower(word[i])) return false;
                }
            }
        } else {
            for (int i = 1; i < n; i++) {
                if (!islower(word[i])) return false;
            }
        }
        return true;

=======

        int n = word.size();
        if (n == 1) return true;
        if (word[0] >= 'a' && word[0] <= 'z') {
            for (int i = 1; i < n; i++) {
                if (word[i] >= 'A' && word[i] <= 'Z') return false;
            }
        } else {
            if (word[1] >= 'A' && word[1] <= 'Z') {
                for (int i = 2; i < n; i++) {
                    if (word[i] >= 'a' && word[i] <= 'z') return false;
                }
            } else {
                for (int i = 2; i < n; i++) {
                    if (word[i] >= 'A' && word[i] <= 'Z') return false;
                }
            }
        }
        return true;

=======

        if (word.size() == 1) return true;
        if (isupper(word[0])) {
            if (isupper(word[1])) {
                for (int i = 2; i < word.size(); ++i) {
                    if (islower(word[i])) return false;
                }
            } else {
                for (int i = 2; i < word.size(); ++i) {
                    if (isupper(word[i])) return false;
                }
            }
        } else {
            for (int i = 1; i < word.size(); ++i) {
                if (isupper(word[i])) return false;
            }
        }
        return true;

=======

        int n = word.size();
        if (n <= 1) return true;
        if (isupper(word[0])) {
            if (isupper(word[1])) {
                for (int i = 2; i < n; i++) {
                    if (islower(word[i])) return false;
                }
            } else {
                for (int i = 2; i < n; i++) {
                    if (isupper(word[i])) return false;
                }
            }
        } else {
            for (int i = 1; i < n; i++) {
                if (isupper(word[i])) return false;
            }
        }
        return true;

=======

        int count = 0;
        for (char c : word) {
            if (c >= 'A' && c <= 'Z') {
                count++;
            }
        }
        return count == 0 || count == word.length() || (count == 1 && word[0] >= 'A' && word[0] <= 'Z');

=======

        int n = word.length();
        int c = 0;
        for (int i = 0; i < n; i++) {
            if (word[i] >= 'A' && word[i] <= 'Z') {
                c++;
            }
        }
        return c == 0 || c == n || (c == 1 && word[0] >= 'A' && word[0] <= 'Z');

=======

        int cnt = 0;
        for (auto c: word) {
            if (isupper(c)) cnt++;
        }
        return cnt == 0 || cnt == word.size() || (cnt == 1 && isupper(word[0]));

=======

        int n = word.size();
        int cnt = 0;
        for (char c : word) {
            if (isupper(c)) cnt++;
        }
        return cnt == 0 || cnt == n || (cnt == 1 && isupper(word[0]));

=======

        int n = word.size();
        if(n == 1) return true;
        int cnt = 0;
        for(auto c : word){
            if(c >= 'A' && c <= 'Z') cnt++;
        }
        if(cnt == 1){
            if(word[0] >= 'A' && word[0] <= 'Z') return true;
            else return false;
        }
        if(cnt == n) return true;
        if(cnt == 0) return true;
        return false;

=======

        int i;
        int len = word.length();
        for (i = 0; i < len; i++)
            if (isupper(word[i]))
                break;
        if (i == len)
            return true;
        if (i == 1 && isupper(word[0])) {
            for (i = 2; i < len; i++)
                if (islower(word[i]))
                    return false;
        } else {
            for (i = 1; i < len; i++)
                if (isupper(word[i]))
                    return false;
        }
        return true;

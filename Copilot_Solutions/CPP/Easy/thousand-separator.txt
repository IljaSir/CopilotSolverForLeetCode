Synthesizing 10/10 solutions

=======

        if (n == 0) return "0";
        string res = "";
        int count = 0;
        while (n > 0) {
            if (count != 0 && count % 3 == 0) {
                res += ".";
            }
            res += to_string(n % 10);
            n /= 10;
            ++count;
        }
        reverse(res.begin(), res.end());
        return res;

=======

        string s = to_string(n);
        string res = "";
        int cnt = 0;
        for (int i = s.size() - 1; i >= 0; i--) {
            res += s[i];
            cnt++;
            if (cnt == 3 && i != 0) {
                res += '.';
                cnt = 0;
            }
        }
        reverse(res.begin(), res.end());
        return res;

=======

        string s = to_string(n);
        int len = s.length();
        for(int i = len - 3; i > 0; i -= 3) {
            s.insert(i, ".");
        }
        return s;

=======

        string s = to_string(n);
        string res;
        for (int i = s.size() - 1, j = 0; i >= 0; i--, j++) {
            if (j == 3) {
                res += '.';
                j = 0;
            }
            res += s[i];
        }
        reverse(res.begin(), res.end());
        return res;

=======

        if (n < 1000) return to_string(n);
        string s = to_string(n);
        int len = s.length();
        int count = 0;
        for (int i = len - 1; i >= 0; i--) {
            count++;
            if (count == 3 && i != 0) {
                count = 0;
                s.insert(i, ".");
            }
        }
        return s;

=======

        string s = to_string(n);
        int len = s.length();
        if (len <= 3) return s;
        int i = len % 3;
        string res = s.substr(0, i);
        while (i < len) {
            if (res.length() > 0) res += ".";
            res += s.substr(i, 3);
            i += 3;
        }
        return res;

=======

        if (n==0) return "0";
        string res;
        int cnt=0;
        while (n>0) {
            res = to_string(n%10) + res;
            n/=10;
            cnt++;
            if (cnt==3 && n>0) {
                res = "." + res;
                cnt=0;
            }
        }
        return res;

=======

        string s = to_string(n);
        int l = s.size();
        int i = 0;
        while (l > 3) {
            s.insert(l - 3 + i, ".");
            l -= 3;
            i++;
        }
        return s;

=======

        string s = to_string(n);
        string res;
        int i = 0;
        while (i < s.size()) {
            if (i % 3 == 0 && i != 0) {
                res += "." + s[i];
            } else {
                res += s[i];
            }
            i++;
        }
        return res;

=======

        string s = to_string(n);
        int l = s.length();
        if(l <= 3)
            return s;
        string res;
        int i = l % 3;
        if(i > 0)
            res += s.substr(0, i) + ".";
        while(i < l) {
            res += s.substr(i, 3) + ".";
            i += 3;
        }
        res.pop_back();
        return res;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if (s.size() < 3) return 0;
        int count = 0;
        for (int i = 0; i < s.size() - 2; i++) {
            if (s[i] != s[i + 1] && s[i] != s[i + 2] && s[i + 1] != s[i + 2]) count++;
        }
        return count;

=======

        int n = s.size();
        int count = 0;
        for (int i = 0; i < n - 2; i++) {
            if (s[i] != s[i + 1] && s[i + 1] != s[i + 2] && s[i] != s[i + 2]) {
                count++;
            }
        }
        return count;

=======

        int n = s.length();
        int res = 0;
        for (int i = 0; i < n - 2; ++i) {
            if (s[i] != s[i + 1] && s[i] != s[i + 2] && s[i + 1] != s[i + 2]) {
                ++res;
            }
        }
        return res;

=======

        int n = s.length();
        if (n < 3) return 0;
        int cnt = 0;
        for (int i = 0; i < n - 2; ++i) {
            if (s[i] != s[i + 1] && s[i] != s[i + 2] && s[i + 1] != s[i + 2]) {
                ++cnt;
            }
        }
        return cnt;

=======

        int n = s.size();
        int count = 0;
        for(int i=0;i<n-2;i++){
            if(s[i]!=s[i+1] && s[i]!=s[i+2] && s[i+1]!=s[i+2]){
                count++;
            }
        }
        return count;

=======

        int n = s.length();
        if (n < 3) {
            return 0;
        }
        int ret = 0;
        for (int i = 0; i < n - 2; ++i) {
            if (s[i] != s[i + 1] && s[i + 1] != s[i + 2] && s[i] != s[i + 2]) {
                ++ret;
            }
        }
        return ret;

=======

        int n = s.length();
        if(n < 3) return 0;
        int ans = 0;
        for(int i = 0; i < n - 2; i++) {
            if(s[i] != s[i+1] && s[i+1] != s[i+2] && s[i] != s[i+2]) ans++;
        }
        return ans;

=======

        int n = s.size();
        int good = 0;
        for (int i = 0; i < n - 2; i++) {
            if (s[i] != s[i + 1] && s[i] != s[i + 2] && s[i + 1] != s[i + 2]) {
                good++;
            }
        }
        return good;

=======

        int cnt = 0;
        for(int i = 0;i < s.size()-2;i++){
            if(s[i] != s[i+1] && s[i+1] != s[i+2] && s[i+2] != s[i]){
                cnt++;
            }
        }
        return cnt;

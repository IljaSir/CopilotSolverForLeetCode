Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int max = 0;
        for (int i = 0; i < accounts.size(); i++) {
            int sum = 0;
            for (int j = 0; j < accounts[i].size(); j++) {
                sum += accounts[i][j];
            }
            if (sum > max) max = sum;
        }
        return max;

=======

        int max = 0;
        for (int i = 0; i < accounts.size(); i++) {
            int sum = 0;
            for (int j = 0; j < accounts[i].size(); j++) {
                sum += accounts[i][j];
            }
            if (sum > max) {
                max = sum;
            }
        }
        return max;

=======

        int maxWealth = 0;
        for (int i = 0; i < accounts.size(); ++i) {
            int wealth = 0;
            for (int j = 0; j < accounts[i].size(); ++j) {
                wealth += accounts[i][j];
            }
            if (maxWealth < wealth) {
                maxWealth = wealth;
            }
        }
        return maxWealth;

=======

        int maxWealth = 0;
        int wealth = 0;
        for (int i = 0; i < accounts.size(); i++) {
            wealth = 0;
            for (int j = 0; j < accounts[i].size(); j++) {
                wealth += accounts[i][j];
            }
            if (wealth > maxWealth) {
                maxWealth = wealth;
            }
        }
        return maxWealth;

=======

        int maxWealth = 0;
        for (auto& account : accounts) {
            int wealth = 0;
            for (auto& money : account) {
                wealth += money;
            }
            maxWealth = max(maxWealth, wealth);
        }
        return maxWealth;

=======

        int maxWealth = 0;
        for (auto &account : accounts) {
            int wealth = accumulate(account.begin(), account.end(), 0);
            maxWealth = max(maxWealth, wealth);
        }
        return maxWealth;

=======

        int ans = 0;
        for (auto& account : accounts) {
            int sum = 0;
            for (auto& money : account) {
                sum += money;
            }
            ans = max(ans, sum);
        }
        return ans;

=======

        int max = 0;
        for (auto &row : accounts) {
            int sum = 0;
            for (auto &val : row) {
                sum += val;
            }
            if (sum > max) {
                max = sum;
            }
        }
        return max;

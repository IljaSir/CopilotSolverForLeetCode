Synthesizing 10/10 solutions

=======

        int a = -1, b = -1;
        for (int i = 0; i < s.length(); i++) {
            if (s[i] == 'a') {
                a = i;
            } else {
                b = i;
            }
            if (a != -1 && b != -1 && a > b) {
                return false;
            }
        }
        return true;

=======

        int a = 0;
        int b = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s[i] == 'a') {
                a++;
            } else {
                b++;
            }
            if (b > a) {
                return false;
            }
        }
        return true;

=======

        int a = 0, b = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] == 'a') a++;
            else if (s[i] == 'b') b++;
            if (b > 0 && a == 0) return false;
        }
        return true;

=======

        int n = s.length();
        int a = 0;
        int b = 0;
        for(int i = 0; i < n; i++) {
            if(s[i] == 'a') {
                a++;
            }
            if(s[i] == 'b') {
                b++;
            }
            if(b > 0 && a == 0) {
                return false;
            }
        }
        return true;

=======

        int a = 0, b = 0;
        for(int i = 0; i < s.size(); i++){
            if(s[i] == 'a'){
                a++;
            }else{
                b++;
            }
            if(b > 0 && a == 0){
                return false;
            }
        }
        return true;

=======

        int n = s.length();
        int a = 0, b = 0;
        for(int i = 0; i < n; i++) {
            if(s[i] == 'a') {
                a++;
            }
            else {
                b++;
            }
            if(b > a) {
                return false;
            }
        }
        return true;

=======

        int n = s.length();
        int a = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'a') {
                a++;
            } else {
                if (a == 0) {
                    return false;
                }
            }
        }
        return true;

=======

        bool flag = true;
        int a = 0, b = 0;
        for(int i = 0; i < s.length(); i++){
            if(s[i] == 'a'){
                a++;
            }else{
                b++;
            }
            if(b > a){
                flag = false;
                break;
            }
        }
        return flag;

=======

        int a = s.find('a');
        int b = s.find('b');
        if(a == -1 || b == -1)
            return true;
        if(a < b)
            return checkString(s.substr(a+1)) && checkString(s.substr(b+1));
        else
            return false;

=======

        int n = s.size();
        int i = 0, j = 0;
        for (i = 0; i < n; i++) {
            if (s[i] == 'a') {
                break;
            }
        }
        for (j = i; j < n; j++) {
            if (s[j] == 'b') {
                break;
            }
        }
        for (int k = j; k < n; k++) {
            if (s[k] == 'a') {
                return false;
            }
        }
        return true;

Synthesizing 10/10 solutions

=======

        int even = 0, odd = 0;
        int i = 0;
        while (n > 0) {
            if (n & 1) {
                if (i & 1) {
                    odd++;
                } else {
                    even++;
                }
            }
            n >>= 1;
            i++;
        }
        return {even, odd};

=======

        int even = 0, odd = 0;
        for (int i = 0; i < 32; i++) {
            if (i & 1) {
                odd += (n >> i) & 1;
            } else {
                even += (n >> i) & 1;
            }
        }
        return {even, odd};

=======

        int even = 0, odd = 0;
        for (int i = 0; i < 32; i++) {
            if (n & (1<<i)) {
                if (i % 2 == 0) even++;
                else odd++;
            }
        }
        return {even, odd};

=======

        int even = 0, odd = 0;
        for (int i = 0; i < 10; ++i) {
            if (i % 2 == 0) {
                if (n & (1 << i)) {
                    ++even;
                }
            } else {
                if (n & (1 << i)) {
                    ++odd;
                }
            }
        }
        return {even, odd};

=======

        vector<int> res(2, 0);
        int i = 0;
        while (n > 0) {
            if (n & 1) {
                res[i % 2]++;
            }
            n >>= 1;
            i++;
        }
        return res;

=======

        vector<int> result;
        int even = 0;
        int odd = 0;
        int i = 0;
        while (n > 0) {
            if (n & 1) {
                if (i % 2 == 0) {
                    even++;
                } else {
                    odd++;
                }
            }
            n >>= 1;
            i++;
        }
        result.push_back(even);
        result.push_back(odd);
        return result;

=======

        int even = 0, odd = 0;
        for (int i = 0; i <= 31; i++) {
            if (i % 2 == 0) {
                if (n & (1 << i)) {
                    even++;
                }
            } else {
                if (n & (1 << i)) {
                    odd++;
                }
            }
        }
        return {even, odd};

=======

        int even=0,odd=0;
        int i=0;
        while(n){
            if(i%2==0){
                if(n&1==1){
                    even++;
                }
            }
            else{
                if(n&1==1){
                    odd++;
                }
            }
            i++;
            n=n>>1;
        }
        return {even,odd};

=======

        vector<int> result(2,0);
        int i = 0;
        while (n > 0) {
            if (n & 1) {
                result[i%2]++;
            }
            n >>= 1;
            i++;
        }
        return result;

=======

        vector<int> result(2, 0);
        for(int i = 0; i < 10; ++i){
            if(n & (1 << i)){
                if(i % 2){
                    ++result[1];
                }else{
                    ++result[0];
                }
            }
        }
        return result;

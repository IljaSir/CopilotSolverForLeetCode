Synthesizing 10/10 solutions

=======

        int max = 0;
        for (int i = 0; i < sentences.size(); i++) {
            int count = 0;
            for (int j = 0; j < sentences[i].length(); j++) {
                if (sentences[i][j] == ' ') {
                    count++;
                }
            }
            if (count + 1 > max) {
                max = count + 1;
            }
        }
        return max;

=======

        int max = 0;
        for (int i = 0; i < sentences.size(); i++) {
            int count = 0;
            for (int j = 0; j < sentences[i].size(); j++) {
                if (sentences[i][j] == ' ') {
                    count++;
                }
            }
            if (max < count) {
                max = count;
            }
        }
        return max;
    }
    int maxNumberOfWordsFound(string sentence) {
        int count = 0;
        for (int i = 0; i < sentence.size(); i++) {
            if (sentence[i] == ' ') {
                count++;
            }
        }
        return count;
    }
    int maxWords(vector<string>& sentences) {
        int max = 0;
        for (int i = 0; i < sentences.size(); i++) {
            int count = maxNumberOfWordsFound(sentences[i]);
            if (max < count) {
                max = count;
            }
        }
        return max;
    }
    int maxNumberOfWords(string sentence) {
        int count = 0;
        for (int i = 0; i < sentence.size(); i++) {
            if (sentence[i] == ' ') {
                count++;
            }
        }
        return count;
    }
    int maxNumberOfWordsInSentence(string sentence) {
        int count = 0;
        for (int i = 0; i < sentence.size(); i++) {
            if (sentence[i] == ' ') {
                count++;
            }
        }
        return count;
    }
    int maxNumberOfWordsInSentences(vector<string>& sentences) {
        int max = 0;
        for (int i = 0; i < sentences.size(); i++) {
            int count = maxNumberOfWordsInSentence(sentences[i]);
            if (max < count) {
                max = count;
            }
        }
        return max;
    }
    int maxNumberOfWordsInSentence(string sentence) {
        int count = 0;
        for (int i = 0; i < sentence.size(); i++) {
            if (sentence[i] == ' ') {
                count++;
            }
        }
        return count;

=======

        int max = 0;
        for (string sentence : sentences) {
            int count = 1;
            for (int i = 0; i < sentence.length(); i++) {
                if (sentence[i] == ' ') {
                    count++;
                }
            }
            if (count > max) {
                max = count;
            }
        }
        return max;

=======

        int maxWords = 0;
        for (auto sentence : sentences) {
            int count = 0;
            for (int i = 0; i < sentence.length(); i++) {
                if (sentence[i] == ' ') {
                    count++;
                }
            }
            if (maxWords < count) {
                maxWords = count;
            }
        }
        return maxWords + 1;

=======

        int maxWords = 0;
        for (auto sentence : sentences) {
            int count = 0;
            for (int i = 0; i < sentence.length(); i++) {
                if (sentence[i] == ' ') {
                    count++;
                }
            }
            maxWords = max(maxWords, count + 1);
        }
        return maxWords;

=======

        int maxWords = 0;
        for (auto& sentence : sentences) {
            int words = 1;
            for (auto& c : sentence) {
                if (c == ' ') {
                    words++;
                }
            }
            if (words > maxWords) {
                maxWords = words;
            }
        }
        return maxWords;

=======

        int maxWords = 0;
        for (auto& sentence : sentences) {
            int words = 0;
            for (int i = 0; i < sentence.length(); i++) {
                if (sentence[i] == ' ') {
                    words++;
                }
            }
            maxWords = max(maxWords, words + 1);
        }
        return maxWords;

=======

        int maxWords = 0;
        for (auto sentence : sentences) {
            int words = 0;
            for (int i = 0; i < sentence.length(); ++i) {
                if (sentence[i] == ' ') {
                    words++;
                }
            }
            maxWords = max(maxWords, words + 1);
        }
        return maxWords;

=======

        int maxWords = 0;
        for (auto sentence: sentences) {
            int count = 0;
            for (auto c: sentence) {
                if (c == ' ') {
                    count++;
                }
            }
            maxWords = max(maxWords, count+1);
        }
        return maxWords;

=======

        int max_words = 0;
        for(auto& s : sentences){
            int cnt = 0;
            for(auto& c : s){
                if(c == ' '){
                    cnt++;
                }
            }
            max_words = max(max_words, cnt+1);
        }
        return max_words;

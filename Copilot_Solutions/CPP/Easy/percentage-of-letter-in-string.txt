Synthesizing 10/10 solutions

=======

        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s[i] == letter) {
                count++;
            }
        }
        return (count * 100) / s.length();

=======

        int count = 0;
        int n = s.length();
        for (int i = 0; i < n; i++) {
            if (s[i] == letter) {
                count++;
            }
        }
        return count * 100 / n;

=======

        int count = 0;
        for (char c : s) {
            if (c == letter) {
                count++;
            }
        }
        return count * 100 / s.length();

=======

        int count = 0;
        for (char c : s) {
            if (c == letter) {
                count++;
            }
        }
        return count * 100 / s.size();

=======

        int count = 0;
        for (char c : s) {
            if (c == letter) {
                ++count;
            }
        }
        return count * 100 / s.size();

=======

        int count = 0;
        for (auto c : s) {
            if (c == letter) {
                ++count;
            }
        }
        return count * 100 / s.size();

=======

        int cnt = 0;
        for (char c : s) {
            if (c == letter) {
                cnt++;
            }
        }
        return cnt * 100 / s.size();

=======

        int count = 0;
        for (auto c: s) {
            if (c == letter) {
                count++;
            }
        }
        return (count * 100) / s.size();

=======

        int count = 0;
        int n = s.length();
        for(int i = 0; i < n; i++) {
            if(s[i] == letter) {
                count++;
            }
        }
        return (count * 100) / n;

=======

        int count = 0;
        for (char c : s) {
            if (c == letter) {
                count++;
            }
        }
        return (int) (count * 100.0 / s.size());

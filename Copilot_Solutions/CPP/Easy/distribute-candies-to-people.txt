Synthesizing 10/10 solutions

=======

        vector<int> ans(num_people, 0);
        int i = 0;
        while (candies > 0) {
            ans[i % num_people] += min(candies, i + 1);
            candies -= min(candies, i + 1);
            i++;
        }
        return ans;

=======

        vector<int> result(num_people, 0);
        int i = 0;
        while (candies > 0) {
            result[i % num_people] += min(candies, i + 1);
            candies -= (i + 1);
            i++;
        }
        return result;

=======

        int i = 0;
        vector<int> ans(num_people, 0);
        while (candies > 0) {
            ans[i % num_people] += min(candies, i + 1);
            candies -= min(candies, i + 1);
            i++;
        }
        return ans;

=======

        vector<int> ans(num_people, 0);
        int i = 0;
        while (candies > 0) {
            ans[i] += min(candies, i + 1);
            candies -= i + 1;
            i = (i + 1) % num_people;
        }
        return ans;

=======

        vector<int> result(num_people, 0);
        int i = 0;
        while (candies > 0) {
            result[i % num_people] += min(i + 1, candies);
            candies -= min(i + 1, candies);
            i++;
        }
        return result;

=======

        vector<int> ans(num_people, 0);
        int cnt = 1;
        while (candies > 0) {
            for (int i = 0; i < num_people; i++) {
                if (candies - cnt < 0) {
                    ans[i] += candies;
                    candies = 0;
                    break;
                } else {
                    ans[i] += cnt;
                    candies -= cnt;
                    cnt++;
                }
            }
        }
        return ans;

=======

        vector<int> res(num_people, 0);
        int i = 0;
        while(candies > 0){
            res[i % num_people] += min(candies, i + 1);
            candies -= min(candies, i + 1);
            i++;
        }
        return res;

=======

        vector<int> ans(num_people, 0);
        int i = 0;
        int count = 1;
        while (candies > 0) {
            ans[i] += min(count, candies);
            candies -= count;
            count++;
            i++;
            i %= num_people;
        }
        return ans;

=======

        vector<int> result(num_people, 0);
        int i = 0, j = 1;
        while (candies > 0) {
            result[i] += min(candies, j);
            candies -= j;
            j++;
            i = (i + 1) % num_people;
        }
        return result;

=======

        vector<int> res(num_people);
        int n = 1;
        while (candies > 0) {
            res[(n-1)%num_people] += min(n, candies);
            candies -= n;
            n++;
        }
        return res;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int res = 0;
        for (char c : s) {
            res += (c - 'a' + 1) / 10 + (c - 'a' + 1) % 10;
        }
        while (--k) {
            int tmp = res;
            res = 0;
            while (tmp) {
                res += tmp % 10;
                tmp /= 10;
            }
        }
        return res;

=======

        string num = "";
        for (char c : s) {
            num += to_string(c - 'a' + 1);
        }
        while (k--) {
            int sum = 0;
            for (char c : num) {
                sum += c - '0';
            }
            num = to_string(sum);
        }
        return stoi(num);

=======

        int sum = 0;
        for (int i = 0; i < s.length(); i++) {
            sum += (s[i] - 'a' + 1);
        }
        if (k == 1) return sum;
        int res = 0;
        while (k--) {
            res = 0;
            while (sum) {
                res += sum % 10;
                sum /= 10;
            }
            sum = res;
        }
        return res;

=======

        string num = "";
        for (auto c : s) {
            num += to_string(c - 'a' + 1);
        }
        int res = 0;
        while (k--) {
            res = 0;
            for (auto c : num) {
                res += c - '0';
            }
            num = to_string(res);
        }
        return res;

=======

        int n = s.size();
        string str = "";
        for (int i = 0; i < n; i++) {
            str += to_string(s[i] - 'a' + 1);
        }
        int sum = 0;
        for (int i = 0; i < str.size(); i++) {
            sum += str[i] - '0';
        }
        int res = sum;
        for (int i = 1; i < k; i++) {
            sum = 0;
            while (res) {
                sum += res % 10;
                res /= 10;
            }
            res = sum;
        }
        return res;

=======

        int sum = 0;
        for(auto c : s) {
            int num = c - 'a' + 1;
            while(num) {
                sum += num % 10;
                num /= 10;
            }
        }
        while(--k) {
            int num = sum;
            sum = 0;
            while(num) {
                sum += num % 10;
                num /= 10;
            }
        }
        return sum;

=======

        int sum = 0;
        for (char c : s) {
            sum += c - 'a' + 1;
        }
        while (k-- > 1) {
            int t = 0;
            while (sum > 0) {
                t += sum % 10;
                sum /= 10;
            }
            sum = t;
        }
        return sum;

=======

        int n = s.size();
        int sum = 0;
        for (int i = 0; i < n; i++){
            int c = s[i] - 'a' + 1;
            sum += c / 10;
            sum += c % 10;
        }
        while (--k){
            int temp = sum;
            sum = 0;
            while (temp){
                sum += temp % 10;
                temp /= 10;
            }
        }
        return sum;

=======

        string num = "";
        for (auto c : s) {
            num += to_string(c - 'a' + 1);
        }
        long long int sum = 0;
        for (int i = 0; i < k; i++) {
            sum = 0;
            for (auto c : num) {
                sum += (c - '0');
            }
            num = to_string(sum);
        }
        return sum;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int res = 0;
        for (int i = 0; i < columnTitle.size(); i++) {
            res = res * 26 + columnTitle[i] - 'A' + 1;
        }
        return res;

=======

        int res = 0;
        for (int i = 0; i < columnTitle.length(); i++) {
            res = res * 26 + (columnTitle[i] - 'A' + 1);
        }
        return res;

=======

        int ans = 0;
        for (int i = 0; i < columnTitle.size(); i++) {
            ans = ans * 26 + (columnTitle[i] - 'A' + 1);
        }
        return ans;

=======

        int result = 0;
        for (int i = 0; i < columnTitle.size(); i++) {
            result = result * 26 + (columnTitle[i] - 'A' + 1);
        }
        return result;

=======

        int ans = 0;
        for (int i = 0; i < columnTitle.size(); i++) {
            ans *= 26;
            ans += columnTitle[i] - 'A' + 1;
        }
        return ans;

=======

        int result = 0;
        for (int i = 0; i < columnTitle.length(); i++) {
            result = result * 26 + (columnTitle[i] - 'A' + 1);
        }
        return result;

=======

        int ans = 0;
        for (int i = 0; i < columnTitle.size(); i++) {
            ans = ans * 26 + columnTitle[i] - 'A' + 1;
        }
        return ans;

=======

        int res = 0;
        for (auto c: columnTitle) {
            res = res * 26 + c - 'A' + 1;
        }
        return res;

=======

        int n = columnTitle.length();
        int res = 0;
        for(int i = 0; i < n; i++){
            res = res * 26 + (columnTitle[i] - 'A' + 1);
        }
        return res;

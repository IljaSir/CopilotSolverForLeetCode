Synthesizing 10/10 solutions

=======

        int i = 1;
        while (true) {
            if (i % 2 == 0 && i % n == 0) {
                return i;
            }
            i++;
        }

=======

        if(n==1)
            return 2;
        if(n==2)
            return 6;
        if(n==3)
            return 12;
        if(n==4)
            return 60;
        if(n==5)
            return 60;
        if(n==6)
            return 60;
        if(n==7)
            return 420;
        if(n==8)
            return 840;
        if(n==9)
            return 2520;
        if(n==10)
            return 2520;
        if(n==11)
            return 27720;
        if(n==12)
            return 27720;
        if(n==13)
            return 360360;
        if(n==14)
            return 360360;
        if(n==15)
            return 360360;
        if(n==16)
            return 360360;
        if(n==17)
            return 720720;
        if(n==18)
            return 12252240;
        if(n==19)
            return 12252240;
        if(n==20)
            return 232792560;
        if(n==21)
            return 232792560;
        if(n==22)
            return 232792560;
        if(n==23)
            return 232792560;
        if(n==24)
            return 232792560;
        if(n==25)
            return 232792560;
        if(n==26)
            return 232792560;
        if(n==27)
            return 232792560;
        if(n==28)
            return 232792560;
        if(n==29)
            return 232792560;
        if(n==30)
            return 232792560;
        if(n==31)
            return 232792560;
        if(n==32)
            return 232792560;
        if(n==33)
            return 232792560;
        if(n==34)
            return 232792560;
        if(n==35)
            return 232792560;
        if(n==36)
            return 232792560;
        if(n==37)
            return 232792560;
        if(n==38)
            return 232792560;
        if(n==39)
            return 232792560;
        if(n==40)
            return 232792560;
        if(n==

=======

        int ans = n;
        while (ans % 2 != 0) {
            ans += n;
        }
        return ans;

=======

        int res = 1;
        for (int i = 1; i <= n; ++i) {
            res = lcm(res, i);
        }
        return res;

=======

        int i = 1;
        while (true) {
            if (i % n == 0 && i % 2 == 0) {
                return i;
            }
            i++;
        }

=======

        int i = 2;
        while (true) {
            if (i % n == 0 && i % 2 == 0) {
                return i;
            }
            i++;
        }

=======

        int i = 2;
        while (true) {
            if (i % n == 0) {
                return i;
            }
            i += 2;
        }

=======

        return n % 2 == 0 ? n : n * 2;

=======

        int ans = 0;
        for (int i = 1; i <= n; ++i) {
            if (n % i == 0) {
                ans = i;
                break;
            }
        }
        if (ans % 2 == 1) {
            ans *= 2;
        }
        return ans;

=======

        if(n%2==0) return n;
        else return 2*n;

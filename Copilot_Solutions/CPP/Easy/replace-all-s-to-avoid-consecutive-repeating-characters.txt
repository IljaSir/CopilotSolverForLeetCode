Synthesizing 10/10 solutions (Duplicates hidden)

=======

        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == '?') {
                for (char c = 'a'; c <= 'z'; ++c) {
                    if ((i == 0 || s[i - 1] != c) && (i == s.size() - 1 || s[i + 1] != c)) {
                        s[i] = c;
                        break;
                    }
                }
            }
        }
        return s;

=======

        for (int i = 0; i < s.size(); i++) {
            if (s[i] == '?') {
                for (char c = 'a'; c <= 'z'; c++) {
                    if ((i == 0 || s[i - 1] != c) && (i == s.size() - 1 || s[i + 1] != c)) {
                        s[i] = c;
                        break;
                    }
                }
            }
        }
        return s;

=======

        int n = s.size();
        for (int i = 0; i < n; ++i) {
            if (s[i] == '?') {
                for (char c = 'a'; c <= 'z'; ++c) {
                    if ((i == 0 || s[i - 1] != c) && (i == n - 1 || s[i + 1] != c)) {
                        s[i] = c;
                        break;
                    }
                }
            }
        }
        return s;

=======

        int n = s.size();
        for (int i = 0; i < n; i++) {
            if (s[i] == '?') {
                for (char c = 'a'; c <= 'z'; c++) {
                    if ((i == 0 || s[i - 1] != c) && (i == n - 1 || s[i + 1] != c)) {
                        s[i] = c;
                        break;
                    }
                }
            }
        }
        return s;

=======

        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == '?') {
                for (char c = 'a'; c <= 'z'; ++c) {
                    if (i > 0 && s[i - 1] == c) continue;
                    if (i + 1 < s.size() && s[i + 1] == c) continue;
                    s[i] = c;
                    break;
                }
            }
        }
        return s;

=======

        int n = s.length();
        for (int i = 0; i < n; i++) {
            if (s[i] == '?') {
                for (char c = 'a'; c <= 'z'; c++) {
                    if ((i == 0 || s[i - 1] != c) && (i == n - 1 || s[i + 1] != c)) {
                        s[i] = c;
                        break;
                    }
                }
            }
        }
        return s;

=======

        int n = s.size();
        for (int i = 0; i < n; ++i) {
            if (s[i] != '?') continue;
            for (char c = 'a'; c <= 'z'; ++c) {
                if (i > 0 && s[i - 1] == c) continue;
                if (i < n - 1 && s[i + 1] == c) continue;
                s[i] = c;
                break;
            }
        }
        return s;

=======

        int n = s.size();
        for (int i = 0; i < n; i++)
            if (s[i] == '?') {
                for (char c = 'a'; c <= 'z'; c++) {
                    if (i > 0 && s[i - 1] == c) continue;
                    if (i < n - 1 && s[i + 1] == c) continue;
                    s[i] = c;
                    break;
                }
            }
        return s;

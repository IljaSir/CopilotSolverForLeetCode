Synthesizing 10/10 solutions

=======

        int min = salary[0];
        int max = salary[0];
        int sum = 0;
        for (int i = 0; i < salary.size(); i++) {
            if (salary[i] < min) {
                min = salary[i];
            }
            if (salary[i] > max) {
                max = salary[i];
            }
            sum += salary[i];
        }
        return (double)(sum - min - max) / (salary.size() - 2);

=======

        int min = salary[0];
        int max = salary[0];
        int sum = 0;
        for (int i = 0; i < salary.size(); i++) {
            if (salary[i] < min) {
                min = salary[i];
            }
            if (salary[i] > max) {
                max = salary[i];
            }
            sum += salary[i];
        }
        return (sum - min - max) / (salary.size() - 2.0);

=======

        int sum = 0;
        int min = INT_MAX;
        int max = INT_MIN;
        for (int i = 0; i < salary.size(); i++) {
            sum += salary[i];
            if (salary[i] < min) {
                min = salary[i];
            }
            if (salary[i] > max) {
                max = salary[i];
            }
        }
        return (double)(sum - min - max) / (salary.size() - 2);

=======

        int min = salary[0];
        int max = salary[0];
        double sum = 0;
        for (int i = 0; i < salary.size(); ++i) {
            if (salary[i] < min) {
                min = salary[i];
            }
            if (salary[i] > max) {
                max = salary[i];
            }
            sum += salary[i];
        }
        return (sum - min - max) / (salary.size() - 2);

=======

        int min = 1000000;
        int max = 0;
        int sum = 0;
        for (int i = 0; i < salary.size(); i++) {
            if (salary[i] < min) min = salary[i];
            if (salary[i] > max) max = salary[i];
            sum += salary[i];
        }
        return (sum - min - max) / 1.0 / (salary.size() - 2);

=======

        double sum = 0;
        double min = salary[0];
        double max = salary[0];
        for (int i = 0; i < salary.size(); ++i) {
            sum += salary[i];
            if (salary[i] < min) {
                min = salary[i];
            }
            if (salary[i] > max) {
                max = salary[i];
            }
        }
        sum = sum - min - max;
        return sum / (salary.size() - 2);

=======

        int min = INT_MAX, max = INT_MIN;
        double sum = 0;
        for (int i = 0; i < salary.size(); i++) {
            if (salary[i] < min) {
                min = salary[i];
            }
            if (salary[i] > max) {
                max = salary[i];
            }
            sum += salary[i];
        }
        return (sum - min - max) / (salary.size() - 2);

=======

        int sum = 0;
        int min = INT_MAX;
        int max = INT_MIN;
        for(int i = 0; i < salary.size(); i++) {
            sum += salary[i];
            if(salary[i] < min) min = salary[i];
            if(salary[i] > max) max = salary[i];
        }
        return (double)(sum - min - max) / (salary.size() - 2);

=======

        int min = salary[0];
        int max = salary[0];
        double sum = 0;
        for(int i=0; i<salary.size(); i++) {
            if(salary[i] < min) min = salary[i];
            if(salary[i] > max) max = salary[i];
            sum += salary[i];
        }
        sum = sum - min - max;
        return sum / (salary.size() - 2);

=======

        int min = salary[0];
        int max = salary[0];
        int sum = 0;
        for (int s: salary) {
            sum += s;
            if (s < min)
                min = s;
            if (s > max)
                max = s;
        }
        return (double)(sum - min - max) / (salary.size() - 2);

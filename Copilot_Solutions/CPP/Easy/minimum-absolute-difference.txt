Synthesizing 10/10 solutions

=======

        sort(arr.begin(), arr.end());
        int minDiff = INT_MAX;
        for (int i = 0; i < arr.size() - 1; i++) {
            minDiff = min(minDiff, arr[i + 1] - arr[i]);
        }
        
        vector<vector<int>> ans;
        for (int i = 0; i < arr.size() - 1; i++) {
            if (arr[i + 1] - arr[i] == minDiff) {
                ans.push_back({arr[i], arr[i + 1]});
            }
        }
        return ans;

=======

        sort(arr.begin(), arr.end());
        int minDiff = INT_MAX;
        for (int i = 0; i < arr.size() - 1; i++) {
            minDiff = min(minDiff, arr[i + 1] - arr[i]);
        }
        vector<vector<int>> res;
        for (int i = 0; i < arr.size() - 1; i++) {
            if (arr[i + 1] - arr[i] == minDiff) {
                res.push_back({arr[i], arr[i + 1]});
            }
        }
        return res;

=======

        sort(arr.begin(), arr.end());
        int min_diff = INT_MAX;
        for (int i = 0; i < arr.size() - 1; ++i) {
            min_diff = min(min_diff, arr[i + 1] - arr[i]);
        }
        vector<vector<int>> res;
        for (int i = 0; i < arr.size() - 1; ++i) {
            if (arr[i + 1] - arr[i] == min_diff) {
                res.push_back({arr[i], arr[i + 1]});
            }
        }
        return res;

=======

        sort(arr.begin(), arr.end());
        int min = INT_MAX;
        for (int i = 0; i < arr.size() - 1; i++) {
            if (arr[i + 1] - arr[i] < min) {
                min = arr[i + 1] - arr[i];
            }
        }
        vector<vector<int>> res;
        for (int i = 0; i < arr.size() - 1; i++) {
            if (arr[i + 1] - arr[i] == min) {
                res.push_back({arr[i], arr[i + 1]});
            }
        }
        return res;

=======

        sort(arr.begin(), arr.end());
        int min = INT_MAX;
        for (int i = 0; i < arr.size() - 1; i++) {
            if (arr[i + 1] - arr[i] < min) {
                min = arr[i + 1] - arr[i];
            }
        }
        vector<vector<int>> result;
        for (int i = 0; i < arr.size() - 1; i++) {
            if (arr[i + 1] - arr[i] == min) {
                result.push_back({arr[i], arr[i + 1]});
            }
        }
        return result;

=======

        sort(arr.begin(), arr.end());
        vector<vector<int>> result;
        int min = INT_MAX;
        for (int i = 1; i < arr.size(); i++) {
            int diff = arr[i] - arr[i - 1];
            if (diff < min) {
                min = diff;
                result.clear();
                result.push_back({arr[i - 1], arr[i]});
            } else if (diff == min) {
                result.push_back({arr[i - 1], arr[i]});
            }
        }
        return result;

=======

        vector<vector<int>> result;
        sort(arr.begin(), arr.end());
        int min_diff = INT_MAX;
        for (int i = 0; i < arr.size() - 1; i++) {
            int diff = arr[i + 1] - arr[i];
            if (diff < min_diff) {
                min_diff = diff;
                result.clear();
                result.push_back({arr[i], arr[i + 1]});
            } else if (diff == min_diff) {
                result.push_back({arr[i], arr[i + 1]});
            }
        }
        return result;

=======

        sort(arr.begin(), arr.end());
        vector<vector<int>> result;
        int min_diff = INT_MAX;
        for (int i = 0; i < arr.size() - 1; i++) {
            int diff = arr[i + 1] - arr[i];
            if (diff < min_diff) {
                min_diff = diff;
                result.clear();
            }
            if (diff == min_diff) {
                result.push_back({arr[i], arr[i + 1]});
            }
        }
        return result;

=======

        vector<vector<int>> res;
        sort(arr.begin(), arr.end());
        int min = INT_MAX;
        for (int i = 0; i < arr.size() - 1; i++) {
            if (arr[i + 1] - arr[i] < min) {
                min = arr[i + 1] - arr[i];
            }
        }
        for (int i = 0; i < arr.size() - 1; i++) {
            if (arr[i + 1] - arr[i] == min) {
                res.push_back(vector<int>{arr[i], arr[i + 1]});
            }
        }
        return res;

=======

        sort(arr.begin(), arr.end());
        vector<vector<int>> ans;
        int minDiff = INT_MAX;
        for (int i = 0; i < arr.size() - 1; ++i) {
            if (arr[i + 1] - arr[i] < minDiff) {
                minDiff = arr[i + 1] - arr[i];
                ans.clear();
                ans.push_back({arr[i], arr[i + 1]});
            } else if (arr[i + 1] - arr[i] == minDiff) {
                ans.push_back({arr[i], arr[i + 1]});
            }
        }
        return ans;

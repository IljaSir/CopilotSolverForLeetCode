Synthesizing 10/10 solutions

=======

        int count = 0;
        for (int i = 0; i < startTime.size(); i++) {
            if (queryTime >= startTime[i] && queryTime <= endTime[i]) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < startTime.size(); i++) {
            if (startTime[i] <= queryTime && queryTime <= endTime[i]) {
                count++;
            }
        }
        return count;

=======

        int cnt = 0;
        for (int i = 0; i < startTime.size(); i++) {
            if (startTime[i] <= queryTime && endTime[i] >= queryTime) {
                cnt++;
            }
        }
        return cnt;

=======

        int count = 0;
        for (int i = 0; i < startTime.size(); ++i) {
            if (queryTime >= startTime[i] && queryTime <= endTime[i]) {
                ++count;
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < startTime.size(); ++i) {
            if (startTime[i] <= queryTime && endTime[i] >= queryTime) {
                ++count;
            }
        }
        return count;

=======

        int ans = 0;
        for (int i = 0; i < startTime.size(); ++i) {
            if (queryTime >= startTime[i] && queryTime <= endTime[i]) {
                ++ans;
            }
        }
        return ans;

=======

        int n = startTime.size();
        int count = 0;
        for (int i = 0; i < n; i++) {
            if (startTime[i] <= queryTime && endTime[i] >= queryTime) {
                count++;
            }
        }
        return count;

=======

        int num = 0;
        for (int i = 0; i < startTime.size(); i++) {
            if (queryTime >= startTime[i] && queryTime <= endTime[i]) {
                num++;
            }
        }
        return num;

=======

        int n = startTime.size();
        int cnt = 0;
        for (int i = 0; i < n; i++) {
            if (startTime[i] <= queryTime && endTime[i] >= queryTime) {
                cnt++;
            }
        }
        return cnt;

=======

        int n = startTime.size();
        int ans = 0;
        for(int i = 0; i < n; i++){
            if(startTime[i] <= queryTime && endTime[i] >= queryTime) ans++;
        }
        return ans;

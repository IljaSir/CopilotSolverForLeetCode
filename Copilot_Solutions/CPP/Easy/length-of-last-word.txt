Synthesizing 10/10 solutions

=======

        int len = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            if (s[i] == ' ') {
                if (len > 0) {
                    return len;
                }
            } else {
                len++;
            }
        }
        return len;

=======

        int len = 0;
        for (int i = s.size() - 1; i >= 0; i--) {
            if (s[i] == ' ') {
                if (len > 0) {
                    break;
                }
            } else {
                len++;
            }
        }
        return len;

=======

        int count = 0;
        int i = s.length() - 1;
        while (i >= 0 && s[i] == ' ') i--;
        while (i >= 0 && s[i] != ' ') {
            count++;
            i--;
        }
        return count;

=======

        int i = s.size() - 1;
        while (i >= 0 && s[i] == ' ') {
            i--;
        }
        int cnt = 0;
        while (i >= 0 && s[i] != ' ') {
            i--;
            cnt++;
        }
        return cnt;

=======

        int i = s.length() - 1;
        while(i >= 0 && s[i] == ' ') i--;
        if(i < 0) return 0;
        int j = i;
        while(j >= 0 && s[j] != ' ') j--;
        return i - j;

=======

        int n = s.size();
        int i = n - 1;
        while(i >= 0 && s[i] == ' ') i--;
        int j = i;
        while(j >= 0 && s[j] != ' ') j--;
        return i - j;

=======

        int n = s.length();
        int i = n - 1;
        int len = 0;
        while (i >= 0 && s[i] == ' ') i--;
        while (i >= 0 && s[i] != ' ') {
            len++;
            i--;
        }
        return len;

=======

        int len = s.length();
        int i = len - 1;
        int cnt = 0;
        while (i >= 0 && s[i] == ' ') i--;
        while (i >= 0 && s[i] != ' ') {
            i--;
            cnt++;
        }
        return cnt;

=======

        int l = s.length();
        int i = l - 1;
        while (i >= 0 && s[i] == ' ') {
            i--;
        }
        int len = 0;
        while (i >= 0 && s[i] != ' ') {
            len++;
            i--;
        }
        return len;

=======

        int len = 0;
        for (int i = s.size()-1; i >= 0; i--) {
            if (s[i] == ' ') {
                if (len > 0) break;
                continue;
            }
            len++;
        }
        return len;

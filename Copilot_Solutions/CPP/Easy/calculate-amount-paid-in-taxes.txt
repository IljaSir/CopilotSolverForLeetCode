Synthesizing 4/10 solutions

=======

        double tax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            if (income > brackets[i][0]) {
                tax += brackets[i][0] * brackets[i][1] / 100;
                income -= brackets[i][0];
            } else {
                tax += income * brackets[i][1] / 100;
                break;
            }
        }
        return tax;
    }
    double calculateTax2(vector<vector<int>>& brackets, int income) {
        double tax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            if (income > brackets[i][0]) {
                tax += brackets[i][0] * brackets[i][1] / 100;
                income -= brackets[i][0];
            } else {
                tax += income * brackets[i][1] / 100;
                break;
            }
        }
        return tax;
    }
    double calculateTax3(vector<vector<int>>& brackets, int income) {
        double tax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            if (income > brackets[i][0]) {
                tax += brackets[i][0] * brackets[i][1] / 100;
                income -= brackets[i][0];
            } else {
                tax += income * brackets[i][1] / 100;
                break;
            }
        }
        return tax;
    }
    double calculateTax4(vector<vector<int>>& brackets, int income) {
        double tax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            if (income > brackets[i][0]) {
                tax += brackets[i][0] * brackets[i][1] / 100;
                income -= brackets[i][0];
            } else {
                tax += income * brackets[i][1] / 100;
                break;
            }
        }
        return tax;

=======

        double totalTax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            int upper = brackets[i][0];
            int percent = brackets[i][1];
            if (income > upper) {
                totalTax += upper * percent / 100.0;
                income -= upper;
            } else {
                totalTax += income * percent / 100.0;
                break;
            }
        }
        return totalTax;
    }
    double calculateTax(vector<vector<int>>& brackets, int income) {
        double totalTax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            int upper = brackets[i][0];
            int percent = brackets[i][1];
            if (income > upper) {
                totalTax += upper * percent / 100.0;
                income -= upper;
            } else {
                totalTax += income * percent / 100.0;
                break;
            }
        }
        return totalTax;
    }
    double calculateTax(vector<vector<int>>& brackets, int income) {
        double totalTax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            int upper = brackets[i][0];
            int percent = brackets[i][1];
            if (income > upper) {
                totalTax += upper * percent / 100.0;
                income -= upper;
            } else {
                totalTax += income * percent / 100.0;
                break;
            }
        }
        return totalTax;
    }
    double calculateTax(vector<vector<int>>& brackets, int income) {
        double totalTax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            int upper = brackets[i][0];
            int percent = brackets[i][1];
            if (income > upper) {
                totalTax += upper * percent / 100.0;
                income -= upper;
            } else {
                totalTax += income * percent / 100.0;
                break;
            }
        }
        return totalTax;

=======

        double tax = 0;
        for (auto& bracket : brackets) {
            int upper = bracket[0];
            int percent = bracket[1];
            if (income > upper) {
                tax += upper * percent / 100.0;
                income -= upper;
            } else {
                tax += income * percent / 100.0;
                break;
            }
        }
        return tax;
    }
    double calculateTax2(vector<vector<int>>& brackets, int income) {
        double tax = 0;
        for (int i = 0; i < brackets.size(); ++i) {
            int upper = brackets[i][0];
            int percent = brackets[i][1];
            if (income > upper) {
                tax += upper * percent / 100.0;
                income -= upper;
            } else {
                tax += income * percent / 100.0;
                break;
            }
        }
        return tax;
    }
    double calculateTax3(vector<vector<int>>& brackets, int income) {
        double tax = 0;
        for (auto it = brackets.begin(); it != brackets.end(); ++it) {
            int upper = (*it)[0];
            int percent = (*it)[1];
            if (income > upper) {
                tax += upper * percent / 100.0;
                income -= upper;
            } else {
                tax += income * percent / 100.0;
                break;
            }
        }
        return tax;
    }
    double calculateTax4(vector<vector<int>>& brackets, int income) {
        double tax = 0;
        for (int i = 0, size = brackets.size(); i < size; ++i) {
            int upper = brackets[i][0];
            int percent = brackets[i][1];
            if (income > upper) {
                tax += upper * percent / 100.0;
                income -= upper;
            } else {
                tax += income * percent / 100.0;
                break;
            }
        }
        return tax;

=======

        double tax = 0;
        for (auto& b : brackets) {
            int amount = min(income, b[0]);
            tax += amount * b[1] / 100.0;
            income -= amount;
        }
        return tax;
    }
    double calculateTax2(vector<vector<int>>& brackets, int income) {
        double tax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            int amount = income;
            if (i < brackets.size() - 1)
                amount = min(amount, brackets[i + 1][0]);
            tax += amount * brackets[i][1] / 100.0;
            income -= amount;
        }
        return tax;
    }
    double calculateTax3(vector<vector<int>>& brackets, int income) {
        double tax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            int amount = income;
            if (i < brackets.size() - 1)
                amount = min(amount, brackets[i + 1][0] - brackets[i][0]);
            tax += amount * brackets[i][1] / 100.0;
            income -= amount;
        }
        return tax;
    }
    double calculateTax4(vector<vector<int>>& brackets, int income) {
        double tax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            int amount = income;
            if (i < brackets.size() - 1)
                amount = min(amount, brackets[i + 1][0] - brackets[i][0]);
            tax += amount * brackets[i][1] / 100.0;
            income -= amount;
            if (income == 0)
                break;
        }
        return tax;
    }
    double calculateTax5(vector<vector<int>>& brackets, int income) {
        double tax = 0;
        for (int i = 0; i < brackets.size(); i++) {
            int amount = income;
            if (i < brackets.size() - 1)
                amount = min(amount, brackets[i + 1][0] - brackets[i][0]);
            tax += amount * brackets[i][1] / 100.0;
            income -= amount;
            if (income <= 0)
                break;
        }
        return tax;

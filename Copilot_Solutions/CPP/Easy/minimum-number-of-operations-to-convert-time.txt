Synthesizing 10/10 solutions

=======

        int h1 = stoi(current.substr(0, 2));
        int m1 = stoi(current.substr(3, 2));
        int h2 = stoi(correct.substr(0, 2));
        int m2 = stoi(correct.substr(3, 2));
        int t1 = h1 * 60 + m1;
        int t2 = h2 * 60 + m2;
        int res = 0;
        while (t1 < t2) {
            if (t2 - t1 >= 60) {
                t1 += 60;
            } else if (t2 - t1 >= 15) {
                t1 += 15;
            } else if (t2 - t1 >= 5) {
                t1 += 5;
            } else {
                t1 += 1;
            }
            res++;
        }
        return res;
    }
    int convertTime1(string current, string correct) {
        int h1 = stoi(current.substr(0, 2));
        int m1 = stoi(current.substr(3, 2));
        int h2 = stoi(correct.substr(0, 2));
        int m2 = stoi(correct.substr(3, 2));
        int t1 = h1 * 60 + m1;
        int t2 = h2 * 60 + m2;
        int res = 0;
        while (t1 < t2) {
            if (t2 - t1 >= 60) {
                t1 += 60;
            } else if (t2 - t1 >= 30) {
                t1 += 30;
            } else if (t2 - t1 >= 15) {
                t1 += 15;
            } else if (t2 - t1 >= 5) {
                t1 += 5;
            } else {
                t1 += 1;
            }
            res++;
        }
        return res;

=======

        int h1 = stoi(current.substr(0, 2));
        int m1 = stoi(current.substr(3, 2));
        int h2 = stoi(correct.substr(0, 2));
        int m2 = stoi(correct.substr(3, 2));
        int t1 = h1 * 60 + m1;
        int t2 = h2 * 60 + m2;
        int diff = t2 - t1;
        int ans = 0;
        while (diff) {
            if (diff >= 60) {
                diff -= 60;
                ans++;
            } else if (diff >= 15) {
                diff -= 15;
                ans++;
            } else if (diff >= 5) {
                diff -= 5;
                ans++;
            } else {
                diff--;
                ans++;
            }
        }
        return ans;
    }
    int numberOfRounds(string startTime, string finishTime) {
        int h1 = stoi(startTime.substr(0, 2));
        int m1 = stoi(startTime.substr(3, 2));
        int h2 = stoi(finishTime.substr(0, 2));
        int m2 = stoi(finishTime.substr(3, 2));
        if (h1 > h2) {
            h2 += 24;
        }
        if (h1 == h2 && m1 > m2) {
            m2 += 60;
            h2++;
        }
        int t1 = h1 * 60 + m1;
        int t2 = h2 * 60 + m2;
        int diff = t2 - t1;
        if (diff == 0) {
            return 0;
        }
        int ans = 0;
        int last = 0;
        while (diff) {
            if (diff >= 60) {
                diff -= 60;
                ans++;
            } else if (diff >= 15) {
                diff -= 15;
                ans++;
            } else if (diff >= 5) {
                diff -= 5;
                ans++;
            } else {
                diff--;
                ans++;
            }
        }
        return ans;

=======

        int h1 = stoi(current.substr(0, 2));
        int m1 = stoi(current.substr(3, 2));
        int h2 = stoi(correct.substr(0, 2));
        int m2 = stoi(correct.substr(3, 2));
        
        int c = 0;
        while (h1 < h2 || (h1 == h2 && m1 < m2)) {
            if (h1 < h2) {
                if (m1 < 60) {
                    m1 += 60;
                }
                m1 -= 60;
                h1 += 1;
            } else {
                if (m1 < m2) {
                    m1 += 60;
                }
                m1 -= 60;
                h1 += 1;
            }
            c++;
        }
        return c;

=======

        int h1 = stoi(current.substr(0, 2));
        int m1 = stoi(current.substr(3, 2));
        int h2 = stoi(correct.substr(0, 2));
        int m2 = stoi(correct.substr(3, 2));
        int minute1 = h1 * 60 + m1;
        int minute2 = h2 * 60 + m2;
        int minute = minute2 - minute1;
        int result = 0;
        int a[] = {60, 15, 5, 1};
        for (int i = 0; i < 4; i++) {
            result += minute / a[i];
            minute = minute % a[i];
        }
        return result;
    }
    int minOperations(string current, string correct) {
        int h1 = stoi(current.substr(0, 2));
        int m1 = stoi(current.substr(3, 2));
        int h2 = stoi(correct.substr(0, 2));
        int m2 = stoi(correct.substr(3, 2));
        int minute1 = h1 * 60 + m1;
        int minute2 = h2 * 60 + m2;
        int minute = minute2 - minute1;
        int result = 0;
        int a[] = {60, 15, 5, 1};
        for (int i = 0; i < 4; i++) {
            result += minute / a[i];
            minute = minute % a[i];
        }
        return result;

=======

        int h1 = stoi(current.substr(0, 2));
        int m1 = stoi(current.substr(3, 2));
        int h2 = stoi(correct.substr(0, 2));
        int m2 = stoi(correct.substr(3, 2));
        int t1 = h1 * 60 + m1;
        int t2 = h2 * 60 + m2;
        int diff = t2 - t1;
        int ans = 0;
        while (diff > 0) {
            if (diff >= 60) {
                diff -= 60;
                ans++;
            } else if (diff >= 15) {
                diff -= 15;
                ans++;
            } else if (diff >= 5) {
                diff -= 5;
                ans++;
            } else {
                diff -= 1;
                ans++;
            }
        }
        return ans;

=======

        int h1 = stoi(current.substr(0,2));
        int m1 = stoi(current.substr(3,2));
        int h2 = stoi(correct.substr(0,2));
        int m2 = stoi(correct.substr(3,2));
        int t1 = h1*60+m1;
        int t2 = h2*60+m2;
        int ans = 0;
        while(t1<t2){
            if(t2-t1>=60){
                t1+=60;
                ans++;
            }else if(t2-t1>=15){
                t1+=15;
                ans++;
            }else if(t2-t1>=5){
                t1+=5;
                ans++;
            }else{
                t1++;
                ans++;
            }
        }
        return ans;

=======

        int h1 = (current[0] - '0') * 10 + current[1] - '0';
        int m1 = (current[3] - '0') * 10 + current[4] - '0';
        int h2 = (correct[0] - '0') * 10 + correct[1] - '0';
        int m2 = (correct[3] - '0') * 10 + correct[4] - '0';
        int t1 = h1 * 60 + m1;
        int t2 = h2 * 60 + m2;
        int ans = 0;
        while (t1 != t2) {
            if (t1 > t2) t2 += 24 * 60;
            if (t2 - t1 >= 60) {
                t1 += 60;
            } else if (t2 - t1 >= 15) {
                t1 += 15;
            } else if (t2 - t1 >= 5) {
                t1 += 5;
            } else {
                t1 += 1;
            }
            ans++;
        }
        return ans;

=======

        int h1, m1, h2, m2;
        sscanf(current.c_str(), "%d:%d", &h1, &m1);
        sscanf(correct.c_str(), "%d:%d", &h2, &m2);
        int t1 = h1 * 60 + m1;
        int t2 = h2 * 60 + m2;
        int t = t2 - t1;
        int ans = 0;
        while (t > 0) {
            if (t >= 60) {
                t -= 60;
                ans++;
            } else if (t >= 15) {
                t -= 15;
                ans++;
            } else if (t >= 5) {
                t -= 5;
                ans++;
            } else {
                t--;
                ans++;
            }
        }
        return ans;
    }
    int numberOfRounds(string startTime, string finishTime) {
        int h1, m1, h2, m2;
        sscanf(startTime.c_str(), "%d:%d", &h1, &m1);
        sscanf(finishTime.c_str(), "%d:%d", &h2, &m2);
        int t1 = h1 * 60 + m1;
        int t2 = h2 * 60 + m2;
        if (t1 > t2) {
            t2 += 24 * 60;
        }
        int ans = 0;
        while (t1 < t2) {
            if (t1 % 15 == 0) {
                ans++;
            }
            t1 += 1;
        }
        return ans;
    }
    int numberOfRounds(string startTime, string finishTime) {
        int h1, m1, h2, m2;
        sscanf(startTime.c_str(), "%d:%d", &h1, &m1);
        sscanf(finishTime.c_str(), "%d:%d", &h2, &m2);
        int t1 = h1 * 60 + m1;
        int t2 = h2 * 60 + m2;
        if (t1 > t2) {
            t2 += 24 * 60;
        }
        int ans = 0;
        while (t1 < t2) {
            if (t1 % 15 == 0) {

=======

        int hh1 = stoi(current.substr(0, 2));
        int mm1 = stoi(current.substr(3, 2));
        int hh2 = stoi(correct.substr(0, 2));
        int mm2 = stoi(correct.substr(3, 2));
        int t1 = hh1 * 60 + mm1;
        int t2 = hh2 * 60 + mm2;
        int t = t2 - t1;
        int ans = 0;
        while (t > 0) {
            if (t >= 60) {
                t -= 60;
                ans++;
            } else if (t >= 15) {
                t -= 15;
                ans++;
            } else if (t >= 5) {
                t -= 5;
                ans++;
            } else {
                t--;
                ans++;
            }
        }
        return ans;

=======

        int hour = stoi(current.substr(0,2));
        int minute = stoi(current.substr(3,2));
        int hour1 = stoi(correct.substr(0,2));
        int minute1 = stoi(correct.substr(3,2));
        int ans = 0;
        int temp = 0;
        while(hour != hour1 || minute != minute1){
            temp++;
            if(temp == 60){
                hour++;
                temp = 0;
            }
            if(hour == 24){
                hour = 0;
            }
            minute++;
            if(minute == 60){
                minute = 0;
            }
            ans++;
        }
        return ans;
    }
    int numberOfRounds(string startTime, string finishTime) {
        int hour = stoi(startTime.substr(0,2));
        int minute = stoi(startTime.substr(3,2));
        int hour1 = stoi(finishTime.substr(0,2));
        int minute1 = stoi(finishTime.substr(3,2));
        if(hour > hour1 || (hour == hour1 && minute > minute1)){
            hour1 += 24;
        }
        int ans = 0;
        while(hour != hour1 || minute != minute1){
            minute += 15;
            if(minute == 60){
                hour++;
                minute = 0;
            }
            if(hour == 24){
                hour = 0;
            }
            ans++;
        }
        return ans;
    }
    int numberOfRounds(string current, string correct) {
        int hour = stoi(current.substr(0,2));
        int minute = stoi(current.substr(3,2));
        int hour1 = stoi(correct.substr(0,2));
        int minute1 = stoi(correct.substr(3,2));
        if(hour > hour1 || (hour == hour1 && minute > minute1)){
            hour1 += 24;
        }
        int ans = 0;
        while(hour != hour1 || minute != minute1){
            minute += 15;
            if(minute == 60){
                hour++;
                minute = 0;
            }
            if(hour == 24){
                hour = 0;
            }
            ans++;
        }
        return ans;

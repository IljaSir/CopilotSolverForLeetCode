Synthesizing 10/10 solutions (Duplicates hidden)

=======

        sort(seats.begin(), seats.end());
        sort(students.begin(), students.end());
        int ans = 0;
        for (int i = 0; i < seats.size(); i++) {
            ans += abs(seats[i] - students[i]);
        }
        return ans;

=======

        sort(seats.begin(), seats.end());
        sort(students.begin(), students.end());
        int res = 0;
        for (int i = 0; i < seats.size(); i++) {
            res += abs(seats[i] - students[i]);
        }
        return res;

=======

        sort(seats.begin(), seats.end());
        sort(students.begin(), students.end());
        int ans = 0;
        for (int i = 0; i < seats.size(); ++i) {
            ans += abs(seats[i] - students[i]);
        }
        return ans;

=======

        sort(seats.begin(), seats.end());
        sort(students.begin(), students.end());
        int result = 0;
        for (int i = 0; i < seats.size(); i++) {
            result += abs(seats[i] - students[i]);
        }
        return result;

=======

        sort(seats.begin(), seats.end());
        sort(students.begin(), students.end());
        int n = seats.size();
        int ans = 0;
        for (int i = 0; i < n; ++i) {
            ans += abs(seats[i] - students[i]);
        }
        return ans;

=======

        int n = seats.size();
        sort(seats.begin(), seats.end());
        sort(students.begin(), students.end());
        int res = 0;
        for (int i = 0; i < n; ++i) {
            res += abs(seats[i] - students[i]);
        }
        return res;

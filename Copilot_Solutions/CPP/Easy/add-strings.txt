Synthesizing 10/10 solutions

=======

        int i = num1.size() - 1, j = num2.size() - 1, carry = 0;
        string ans = "";
        while (i >= 0 || j >= 0 || carry != 0) {
            int sum = carry;
            if (i >= 0) sum += num1[i--] - '0';
            if (j >= 0) sum += num2[j--] - '0';
            ans += to_string(sum % 10);
            carry = sum / 10;
        }
        reverse(ans.begin(), ans.end());
        return ans;

=======

        int i = num1.size() - 1;
        int j = num2.size() - 1;
        int carry = 0;
        string res;
        while (i >= 0 || j >= 0 || carry) {
            int sum = carry;
            if (i >= 0) {
                sum += num1[i--] - '0';
            }
            if (j >= 0) {
                sum += num2[j--] - '0';
            }
            res += to_string(sum % 10);
            carry = sum / 10;
        }
        reverse(res.begin(), res.end());
        return res;

=======

        int i = num1.size() - 1;
        int j = num2.size() - 1;
        int carry = 0;
        string ans;
        while (i >= 0 || j >= 0 || carry != 0) {
            int a = i >= 0 ? num1[i] - '0' : 0;
            int b = j >= 0 ? num2[j] - '0' : 0;
            int sum = a + b + carry;
            carry = sum / 10;
            sum = sum % 10;
            ans += to_string(sum);
            i--;
            j--;
        }
        reverse(ans.begin(), ans.end());
        return ans;

=======

        int i = num1.length() - 1;
        int j = num2.length() - 1;
        int carry = 0;
        string ans = "";
        while (i >= 0 || j >= 0 || carry != 0) {
            int a = i >= 0 ? num1[i--] - '0' : 0;
            int b = j >= 0 ? num2[j--] - '0' : 0;
            int sum = a + b + carry;
            ans = to_string(sum % 10) + ans;
            carry = sum / 10;
        }
        return ans;

=======

        int i = num1.length() - 1;
        int j = num2.length() - 1;
        int carry = 0;
        string res;
        while (i >= 0 || j >= 0 || carry > 0) {
            int digit1 = i >= 0 ? num1[i--] - '0' : 0;
            int digit2 = j >= 0 ? num2[j--] - '0' : 0;
            int sum = digit1 + digit2 + carry;
            carry = sum / 10;
            res.push_back(sum % 10 + '0');
        }
        reverse(res.begin(), res.end());
        return res;

=======

        string result;
        int carry = 0;
        int i = num1.length() - 1;
        int j = num2.length() - 1;
        while (i >= 0 || j >= 0) {
            int sum = carry;
            if (i >= 0) {
                sum += num1[i] - '0';
                --i;
            }
            if (j >= 0) {
                sum += num2[j] - '0';
                --j;
            }
            result += to_string(sum % 10);
            carry = sum / 10;
        }
        if (carry) {
            result += to_string(carry);
        }
        reverse(result.begin(), result.end());
        return result;

=======

        int i = num1.size() - 1;
        int j = num2.size() - 1;
        int carry = 0;
        string sum = "";
        while (i >= 0 || j >= 0 || carry) {
            int d1 = i >= 0 ? num1[i] - '0' : 0;
            int d2 = j >= 0 ? num2[j] - '0' : 0;
            int d = d1 + d2 + carry;
            carry = d / 10;
            sum += to_string(d % 10);
            i--;
            j--;
        }
        reverse(sum.begin(), sum.end());
        return sum;

=======

        string ans = "";
        int carry = 0;
        int i = num1.length() - 1;
        int j = num2.length() - 1;
        while (i >= 0 || j >= 0) {
            int sum = carry;
            if (i >= 0) sum += num1[i--] - '0';
            if (j >= 0) sum += num2[j--] - '0';
            ans += to_string(sum % 10);
            carry = sum / 10;
        }
        if (carry) ans += to_string(carry);
        reverse(ans.begin(), ans.end());
        return ans;

=======

        int n = num1.size();
        int m = num2.size();
        int carry = 0;
        string ans = "";
        for (int i = n - 1, j = m - 1; i >= 0 || j >= 0 || carry; i--, j--) {
            int sum = 0;
            if (i >= 0) {
                sum += (num1[i] - '0');
            }
            if (j >= 0) {
                sum += (num2[j] - '0');
            }
            sum += carry;
            ans += to_string(sum % 10);
            carry = sum / 10;
        }
        reverse(ans.begin(), ans.end());
        return ans;

=======

        int carry = 0;
        string result;
        int i = num1.size() - 1, j = num2.size() - 1;
        while(i >= 0 || j >= 0 || carry > 0){
            int a = i >= 0 ? num1[i--] - '0' : 0;
            int b = j >= 0 ? num2[j--] - '0' : 0;
            int sum = a + b + carry;
            result += '0' + sum % 10;
            carry = sum / 10;
        }
        reverse(result.begin(), result.end());
        return result;

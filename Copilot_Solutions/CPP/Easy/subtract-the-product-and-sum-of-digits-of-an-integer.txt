Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int product = 1;
        int sum = 0;
        while (n > 0) {
            int digit = n % 10;
            product *= digit;
            sum += digit;
            n /= 10;
        }
        return product - sum;

=======

        int product = 1;
        int sum = 0;
        while (n) {
            int digit = n % 10;
            product *= digit;
            sum += digit;
            n /= 10;
        }
        return product - sum;

=======

        int sum = 0, product = 1;
        while (n > 0) {
            int digit = n % 10;
            sum += digit;
            product *= digit;
            n /= 10;
        }
        return product - sum;

=======

        int sum = 0;
        int product = 1;
        while (n) {
            int digit = n % 10;
            sum += digit;
            product *= digit;
            n /= 10;
        }
        return product - sum;

=======

        int sum = 0;
        int product = 1;
        while (n != 0) {
            int digit = n % 10;
            sum += digit;
            product *= digit;
            n /= 10;
        }
        return product - sum;

=======

        int product = 1, sum = 0;
        while(n > 0) {
            int digit = n % 10;
            product *= digit;
            sum += digit;
            n /= 10;
        }
        return product - sum;

=======

        int sum = 0, product = 1;
        while (n) {
            int digit = n % 10;
            sum += digit;
            product *= digit;
            n /= 10;
        }
        
        return product - sum;

=======

        int p=1, s=0;
        while (n > 0) {
            p *= n%10;
            s += n%10;
            n /= 10;
        }
        return p-s;

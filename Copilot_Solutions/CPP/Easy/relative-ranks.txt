Synthesizing 10/10 solutions

=======

        int n = score.size();
        vector<string> ans(n);
        vector<int> rank(n);
        for (int i = 0; i < n; ++i) {
            rank[i] = i;
        }
        sort(rank.begin(), rank.end(), [&](int a, int b) { return score[a] > score[b]; });
        for (int i = 0; i < n; ++i) {
            string s;
            switch (i) {
                case 0:
                    s = "Gold Medal";
                    break;
                case 1:
                    s = "Silver Medal";
                    break;
                case 2:
                    s = "Bronze Medal";
                    break;
                default:
                    s = to_string(i + 1);
                    break;
            }
            ans[rank[i]] = s;
        }
        return ans;

=======

        vector<string> ans(score.size());
        vector<pair<int, int>> tmp;
        for (int i = 0; i < score.size(); i++) {
            tmp.push_back(make_pair(score[i], i));
        }
        sort(tmp.begin(), tmp.end());
        for (int i = 0; i < tmp.size(); i++) {
            if (i == 0) {
                ans[tmp[i].second] = "Gold Medal";
            } else if (i == 1) {
                ans[tmp[i].second] = "Silver Medal";
            } else if (i == 2) {
                ans[tmp[i].second] = "Bronze Medal";
            } else {
                ans[tmp[i].second] = to_string(i + 1);
            }
        }
        return ans;

=======

        vector<string> ans;
        if(score.size() == 0) return ans;
        if(score.size() == 1) {
            ans.push_back("Gold Medal");
            return ans;
        }
        if(score.size() == 2) {
            if(score[0] > score[1]) {
                ans.push_back("Gold Medal");
                ans.push_back("Silver Medal");
            } else {
                ans.push_back("Silver Medal");
                ans.push_back("Gold Medal");
            }
            return ans;
        }
        if(score.size() == 3) {
            if(score[0] > score[1]) {
                if(score[0] > score[2]) {
                    ans.push_back("Gold Medal");
                    if(score[1] > score[2]) {
                        ans.push_back("Silver Medal");
                        ans.push_back("Bronze Medal");
                    } else {
                        ans.push_back("Bronze Medal");
                        ans.push_back("Silver Medal");
                    }
                } else {
                    ans.push_back("Bronze Medal");
                    ans.push_back("Gold Medal");
                    ans.push_back("Silver Medal");
                }
            } else {
                if(score[1] > score[2]) {
                    ans.push_back("Silver Medal");
                    if(score[0] > score[2]) {
                        ans.push_back("Gold Medal");
                        ans.push_back("Bronze Medal");
                    } else {
                        ans.push_back("Bronze Medal");
                        ans.push_back("Gold Medal");
                    }
                } else {
                    ans.push_back("Bronze Medal");
                    ans.push_back("Silver Medal");
                    ans.push_back("Gold Medal");
                }
            }
            return ans;
        }
        vector<int> s = score;
        sort(s.begin(), s.end(), greater<int>());
        for(int i = 0; i < score.size(); i++) {
            for(int j = 0; j < s.size(); j++) {
                if(score[i] == s[j]) {
                    if(j == 0) ans.push_back("Gold Medal");
                    else if(j == 1) ans.push_back("Silver Medal");
                    else if(j == 2) ans.push_back("Bronze Medal");
                    else ans.push_back(to_string(j + 1));
                }
            }
        }
        return ans;

=======

        vector<int> sortedScore(score);
        sort(sortedScore.begin(), sortedScore.end(), greater<int>());
        unordered_map<int, int> scoreToRank;
        for (int i = 0; i < sortedScore.size(); i++) {
            scoreToRank[sortedScore[i]] = i;
        }
        vector<string> result;
        for (int i = 0; i < score.size(); i++) {
            int rank = scoreToRank[score[i]];
            if (rank == 0) {
                result.push_back("Gold Medal");
            } else if (rank == 1) {
                result.push_back("Silver Medal");
            } else if (rank == 2) {
                result.push_back("Bronze Medal");
            } else {
                result.push_back(to_string(rank + 1));
            }
        }
        return result;

=======

        map<int,int> m;
        for(int i=0;i<score.size();i++)
            m[score[i]]=i;
        vector<string> ans(score.size());
        int i=1;
        for(auto it=m.rbegin();it!=m.rend();it++)
        {
            if(i==1)
                ans[it->second]="Gold Medal";
            else if(i==2)
                ans[it->second]="Silver Medal";
            else if(i==3)
                ans[it->second]="Bronze Medal";
            else
                ans[it->second]=to_string(i);
            i++;
        }
        return ans;

=======

        int n = score.size();
        vector<string> ranks(n);
        vector<int> sorted = score;
        sort(sorted.begin(), sorted.end(), greater<int>());
        for(int i = 0; i < n; i++) {
            if(sorted[i] == score[i]) {
                if(i == 0) {
                    ranks[i] = "Gold Medal";
                } else if(i == 1) {
                    ranks[i] = "Silver Medal";
                } else if(i == 2) {
                    ranks[i] = "Bronze Medal";
                } else {
                    ranks[i] = to_string(i + 1);
                }
            }
        }
        return ranks;

=======

        vector<string> result;
        std::map<int, int> rank;
        for (int i = 0; i < score.size(); i++) {
            rank[score[i]] = i;
        }
        int i = 0;
        for (auto it = rank.rbegin(); it != rank.rend(); it++) {
            if (i == 0) {
                result.push_back("Gold Medal");
            } else if (i == 1) {
                result.push_back("Silver Medal");
            } else if (i == 2) {
                result.push_back("Bronze Medal");
            } else {
                result.push_back(std::to_string(i + 1));
            }
            i++;
        }
        vector<string> newResult(score.size());
        for (int i = 0; i < result.size(); i++) {
            newResult[rank[score[i]]] = result[i];
        }
        return newResult;

=======

        vector<string> result;
        vector<int> sorted = score;
        std::sort(sorted.begin(), sorted.end(), std::greater<int>());
        for (int i = 0; i < score.size(); i++) {
            int index = std::find(sorted.begin(), sorted.end(), score[i]) - sorted.begin();
            if (index == 0) {
                result.push_back("Gold Medal");
            } else if (index == 1) {
                result.push_back("Silver Medal");
            } else if (index == 2) {
                result.push_back("Bronze Medal");
            } else {
                result.push_back(std::to_string(index + 1));
            }
        }
        return result;

=======

        vector<string> result;
        vector<int> sortedScore = score;
        sort(sortedScore.begin(), sortedScore.end());
        for (int i = 0; i < score.size(); i++) {
            int rank = 0;
            for (int j = 0; j < sortedScore.size(); j++) {
                if (score[i] == sortedScore[j]) {
                    rank = sortedScore.size() - j;
                    break;
                }
            }
            if (rank == 1) {
                result.push_back("Gold Medal");
            } else if (rank == 2) {
                result.push_back("Silver Medal");
            } else if (rank == 3) {
                result.push_back("Bronze Medal");
            } else {
                result.push_back(to_string(rank));
            }
        }
        return result;

=======

        vector<string> ans;
        vector<int> s(score);
        sort(s.begin(), s.end());
        for (int i = 0; i < score.size(); i++) {
            int idx = lower_bound(s.begin(), s.end(), score[i]) - s.begin();
            if (idx == score.size() - 1) {
                ans.push_back("Gold Medal");
            } else if (idx == score.size() - 2) {
                ans.push_back("Silver Medal");
            } else if (idx == score.size() - 3) {
                ans.push_back("Bronze Medal");
            } else {
                ans.push_back(to_string(score.size() - idx));
            }
        }
        return ans;

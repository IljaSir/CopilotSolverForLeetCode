Synthesizing 10/10 solutions

=======

        int res = 0;
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == 'X') {
                ++res;
                i += 2;
            }
        }
        return res;

=======

        int count = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] == 'X') {
                count++;
                i += 2;
            }
        }
        return count;

=======

        int res = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s[i] == 'X') {
                res++;
                i += 2;
            }
        }
        return res;

=======

        int ans = 0;
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == 'X') {
                ans++;
                i += 2;
            }
        }
        return ans;

=======

        int n = s.size();
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'X') {
                ans++;
                i += 2;
            }
        }
        return ans;

=======

        int n = s.size();
        int res = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'X') {
                res++;
                i += 2;
            }
        }
        return res;

=======

        int ans = 0;
        for(int i = 0; i < s.size(); i++) {
            if(s[i] == 'X') {
                ans++;
                i += 2;
            }
        }
        return ans;

=======

        int n = s.length();
        int ans = 0;
        for (int i = 0; i < n; ++i) {
            if (s[i] == 'X') {
                ans++;
                i += 2;
            }
        }
        return ans;

=======

        int i = 0;
        int count = 0;
        while (i < s.length()) {
            if (s[i] == 'X') {
                i += 3;
                count++;
            } else {
                i++;
            }
        }
        return count;

=======

        int n = s.length();
        int c = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'X') {
                c++;
                i += 2;
            }
        }
        return c;

Synthesizing 10/10 solutions

=======

        int count = 0;
        int index = 0;
        if (ruleKey == "type") {
            index = 0;
        } else if (ruleKey == "color") {
            index = 1;
        } else if (ruleKey == "name") {
            index = 2;
        }
        for (int i = 0; i < items.size(); i++) {
            if (items[i][index] == ruleValue) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < items.size(); i++) {
            if (ruleKey == "type") {
                if (items[i][0] == ruleValue) {
                    count++;
                }
            } else if (ruleKey == "color") {
                if (items[i][1] == ruleValue) {
                    count++;
                }
            } else if (ruleKey == "name") {
                if (items[i][2] == ruleValue) {
                    count++;
                }
            }
        }
        return count;

=======

        int cnt = 0;
        int idx = 0;
        if (ruleKey == "color") {
            idx = 1;
        } else if (ruleKey == "name") {
            idx = 2;
        }
        for (auto item : items) {
            if (item[idx] == ruleValue) {
                cnt++;
            }
        }
        return cnt;

=======

        int count = 0;
        for (auto item : items) {
            if (ruleKey == "type" && item[0] == ruleValue) {
                count++;
            } else if (ruleKey == "color" && item[1] == ruleValue) {
                count++;
            } else if (ruleKey == "name" && item[2] == ruleValue) {
                count++;
            }
        }
        return count;

=======

        int idx;
        if(ruleKey == "type") idx = 0;
        else if(ruleKey == "color") idx = 1;
        else idx = 2;
        
        int count = 0;
        for(int i = 0; i < items.size(); i++) {
            if(items[i][idx] == ruleValue) count++;
        }
        
        return count;

=======

        int ans = 0;
        for (auto &item : items) {
            if (ruleKey == "type" && item[0] == ruleValue) {
                ans++;
            } else if (ruleKey == "color" && item[1] == ruleValue) {
                ans++;
            } else if (ruleKey == "name" && item[2] == ruleValue) {
                ans++;
            }
        }
        return ans;

=======

        int result = 0;
        for (auto& item : items) {
            if (ruleKey == "type" && item[0] == ruleValue) {
                result++;
            }
            if (ruleKey == "color" && item[1] == ruleValue) {
                result++;
            }
            if (ruleKey == "name" && item[2] == ruleValue) {
                result++;
            }
        }
        return result;

=======

        int count = 0;
        int index = 0;
        if(ruleKey == "color") index = 1;
        else if(ruleKey == "name") index = 2;
        for(auto item : items){
            if(item[index] == ruleValue) count++;
        }
        return count;

=======

        int count = 0;
        for(auto item: items){
            if(ruleKey == "type"){
                if(item[0] == ruleValue) count++;
            } else if(ruleKey == "color"){
                if(item[1] == ruleValue) count++;
            } else if(ruleKey == "name"){
                if(item[2] == ruleValue) count++;
            }
        }
        return count;

=======

        int index = 0;
        if(ruleKey == "color") index = 1;
        if(ruleKey == "name") index = 2;
        int res = 0;
        for(auto& item: items)
            if(item[index] == ruleValue) res++;
        return res;

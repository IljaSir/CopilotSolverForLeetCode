Synthesizing 10/10 solutions

=======

        vector<int> row(rowIndex + 1, 0);
        row[0] = 1;
        for (int i = 1; i <= rowIndex; i++) {
            for (int j = i; j >= 1; j--) {
                row[j] = row[j] + row[j - 1];
            }
        }
        return row;

=======

        vector<int> result(rowIndex + 1, 0);
        result[0] = 1;
        for (int i = 1; i <= rowIndex; i++) {
            for (int j = i; j >= 1; j--) {
                result[j] = result[j] + result[j - 1];
            }
        }
        return result;

=======

        vector<int> row(rowIndex + 1, 0);
        row[0] = 1;
        for (int i = 1; i <= rowIndex; ++i) {
            for (int j = i; j >= 1; --j) {
                row[j] += row[j - 1];
            }
        }
        return row;

=======

        vector<int> res;
        for (int i = 0; i <= rowIndex; i++) {
            res.push_back(1);
            for (int j = i - 1; j > 0; j--) {
                res[j] = res[j] + res[j - 1];
            }
        }
        return res;

=======

        vector<int> res;
        for (int i = 0; i <= rowIndex; ++i) {
            res.push_back(1);
            for (int j = i - 1; j > 0; --j) {
                res[j] = res[j] + res[j - 1];
            }
        }
        return res;

=======

        vector<int> ans(rowIndex + 1);
        ans[0] = 1;
        for (int i = 1; i <= rowIndex; i++) {
            for (int j = i; j > 0; j--) {
                ans[j] += ans[j - 1];
            }
        }
        return ans;

=======

        vector<int> ans(rowIndex + 1, 1);
        for (int i = 1; i <= rowIndex; i++) {
            for (int j = i - 1; j > 0; j--) {
                ans[j] += ans[j - 1];
            }
        }
        return ans;

=======

        vector<int> result(rowIndex + 1, 1);
        for(int i = 2; i <= rowIndex; i++) {
            for(int j = i - 1; j > 0; j--) {
                result[j] += result[j - 1];
            }
        }
        return result;

=======

        vector<int> ans;
        ans.push_back(1);
        for (int i = 1; i <= rowIndex; i++) {
            for (int j = i - 1; j >= 1; j--) {
                ans[j] = ans[j] + ans[j - 1];
            }
            ans.push_back(1);
        }
        return ans;

=======

        vector<int> ret;
        if (rowIndex < 0) {
            return ret;
        }
        ret.push_back(1);
        for (int i = 1; i <= rowIndex; ++i) {
            ret.push_back(1);
            for (int j = i - 1; j > 0; --j) {
                ret[j] += ret[j - 1];
            }
        }
        return ret;

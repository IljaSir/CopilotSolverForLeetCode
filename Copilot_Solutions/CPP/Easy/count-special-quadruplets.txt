Synthesizing 9/10 solutions (Duplicates hidden)

=======

        int n = nums.size();
        int ans = 0;
        for (int i = 0; i < n - 3; i++) {
            for (int j = i + 1; j < n - 2; j++) {
                for (int k = j + 1; k < n - 1; k++) {
                    for (int l = k + 1; l < n; l++) {
                        if (nums[i] + nums[j] + nums[k] == nums[l]) {
                            ans++;
                        }
                    }
                }
            }
        }
        return ans;

=======

        int n = nums.size();
        int ans = 0;
        for (int i = 0; i < n - 3; ++i) {
            for (int j = i + 1; j < n - 2; ++j) {
                for (int k = j + 1; k < n - 1; ++k) {
                    for (int l = k + 1; l < n; ++l) {
                        if (nums[i] + nums[j] + nums[k] == nums[l]) {
                            ++ans;
                        }
                    }
                }
            }
        }
        return ans;

=======

        int n = nums.size();
        int res = 0;
        for (int i = 0; i < n - 3; i++) {
            for (int j = i + 1; j < n - 2; j++) {
                for (int k = j + 1; k < n - 1; k++) {
                    for (int l = k + 1; l < n; l++) {
                        if (nums[i] + nums[j] + nums[k] == nums[l]) {
                            res++;
                        }
                    }
                }
            }
        }
        return res;

=======

        int res = 0;
        for (int i = 0; i < nums.size(); ++i) {
            for (int j = i + 1; j < nums.size(); ++j) {
                for (int k = j + 1; k < nums.size(); ++k) {
                    for (int l = k + 1; l < nums.size(); ++l) {
                        if (nums[i] + nums[j] + nums[k] == nums[l]) {
                            ++res;
                        }
                    }
                }
            }
        }
        return res;

=======

        int n = nums.size();
        int ans = 0;
        for (int i = 0; i < n; ++i) {
            for (int j = i + 1; j < n; ++j) {
                for (int k = j + 1; k < n; ++k) {
                    for (int l = k + 1; l < n; ++l) {
                        if (nums[i] + nums[j] + nums[k] == nums[l]) {
                            ++ans;
                        }
                    }
                }
            }
        }
        return ans;

=======

        int n = nums.size();
        int res = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    for (int l = k + 1; l < n; l++) {
                        if (nums[i] + nums[j] + nums[k] == nums[l]) {
                            res++;
                        }
                    }
                }
            }
        }
        return res;

=======

        int N = nums.size();
        int res = 0;
        for (int i = 0; i < N - 3; i++) {
            for (int j = i + 1; j < N - 2; j++) {
                for (int k = j + 1; k < N - 1; k++) {
                    for (int l = k + 1; l < N; l++) {
                        if (nums[i] + nums[j] + nums[k] == nums[l]) {
                            res++;
                        }
                    }
                }
            }
        }
        return res;

=======

        int n = nums.size();
        int count = 0;
        for(int a = 0; a < n; a++) {
            for(int b = a+1; b < n; b++) {
                for(int c = b+1; c < n; c++) {
                    for(int d = c+1; d < n; d++) {
                        if(nums[a]+nums[b]+nums[c]==nums[d]) {
                            count++;
                        }
                    }
                }
            }
        }
        return count;

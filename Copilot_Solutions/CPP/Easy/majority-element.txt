Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int count = 0;
        int candidate = 0;
        for (int num : nums) {
            if (count == 0) {
                candidate = num;
            }
            count += (num == candidate) ? 1 : -1;
        }
        return candidate;

=======

        int count = 0;
        int candidate = -1;
        for (int num : nums) {
            if (count == 0) {
                candidate = num;
            }
            count += (num == candidate) ? 1 : -1;
        }
        return candidate;

=======

        int count = 0;
        int candidate = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (count == 0) {
                candidate = nums[i];
                count = 1;
            } else if (nums[i] == candidate) {
                count++;
            } else {
                count--;
            }
        }
        return candidate;

=======

        int count = 0;
        int candidate = 0;
        
        for (int i = 0; i < nums.size(); i++) {
            if (count == 0) {
                candidate = nums[i];
            }
            
            if (candidate == nums[i]) {
                count++;
            } else {
                count--;
            }
        }
        
        return candidate;

=======

        int n = nums.size();
        int count = 0;
        int candidate = 0;
        for (int i = 0; i < n; ++i) {
            if (count == 0) {
                candidate = nums[i];
                count = 1;
            } else {
                if (nums[i] == candidate) {
                    count += 1;
                } else {
                    count -= 1;
                }
            }
        }
        return candidate;

=======

        int n = nums.size();
        int count = 0;
        int res = 0;
        for (int i = 0; i < n; i++) {
            if (count == 0) {
                res = nums[i];
            }
            if (res == nums[i]) {
                count++;
            } else {
                count--;
            }
        }
        return res;

=======

        int cnt = 0;
        int major = nums[0];
        for (int i = 0; i < nums.size(); ++i) {
            if (cnt == 0) {
                major = nums[i];
                cnt++;
            } else if (major == nums[i]) {
                cnt++;
            } else {
                cnt--;
            }
        }
        return major;

=======

        int cnt = 0;
        int candidate;
        for (auto num : nums) {
            if (cnt == 0) {
                candidate = num;
            }
            if (num == candidate) {
                cnt++;
            } else {
                cnt--;
            }
        }
        return candidate;

=======

        int n = nums.size();
        int count = 0;
        int ans = -1;
        for(int i = 0; i < n; i++) {
            if(count == 0) {
                ans = nums[i];
                count++;
            } else {
                if(ans == nums[i]) {
                    count++;
                } else {
                    count--;
                }
            }
        }
        return ans;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int b = 0, a = 0, l = 0, o = 0, n = 0;
        for (auto c : text) {
            if (c == 'b') b++;
            if (c == 'a') a++;
            if (c == 'l') l++;
            if (c == 'o') o++;
            if (c == 'n') n++;
        }
        return min({b, a, l/2, o/2, n});

=======

        int count[26] = {0};
        for (char c : text) {
            count[c - 'a']++;
        }
        int res = INT_MAX;
        res = min(res, count['b' - 'a']);
        res = min(res, count['a' - 'a']);
        res = min(res, count['l' - 'a'] / 2);
        res = min(res, count['o' - 'a'] / 2);
        res = min(res, count['n' - 'a']);
        return res;

=======

        int count[26] = {0};
        for (auto c : text) {
            count[c - 'a']++;
        }
        int ans = INT_MAX;
        ans = min(ans, count['b' - 'a']);
        ans = min(ans, count['a' - 'a']);
        ans = min(ans, count['l' - 'a'] / 2);
        ans = min(ans, count['o' - 'a'] / 2);
        ans = min(ans, count['n' - 'a']);
        return ans;

=======

        int a[26] = {0};
        for (auto c : text) {
            a[c-'a']++;
        }
        return min({a['b'-'a'], a['a'-'a'], a['l'-'a']/2, a['o'-'a']/2, a['n'-'a']});

=======

        int freq[26] = {0};
        for (auto c : text) {
            freq[c - 'a']++;
        }
        int res = INT_MAX;
        res = min(res, freq['b' - 'a']);
        res = min(res, freq['a' - 'a']);
        res = min(res, freq['l' - 'a'] / 2);
        res = min(res, freq['o' - 'a'] / 2);
        res = min(res, freq['n' - 'a']);
        return res;

=======

        int count[26] = {0};
        for (char c: text) {
            count[c - 'a']++;
        }
        int ans = text.size();
        ans = min(ans, count['b' - 'a']);
        ans = min(ans, count['a' - 'a']);
        ans = min(ans, count['l' - 'a'] / 2);
        ans = min(ans, count['o' - 'a'] / 2);
        ans = min(ans, count['n' - 'a']);
        return ans;

=======

        int a[26] = {0};
        for (auto c : text) {
            a[c - 'a']++;
        }
        int res = 100000;
        res = min(res, a['b' - 'a']);
        res = min(res, a['a' - 'a']);
        res = min(res, a['l' - 'a'] / 2);
        res = min(res, a['o' - 'a'] / 2);
        res = min(res, a['n' - 'a']);
        return res;

=======

        int a[26] = {0};
        for (auto t : text) a[t - 'a']++;
        int ans = INT_MAX;
        ans = min(ans, a['b' - 'a']);
        ans = min(ans, a['a' - 'a']);
        ans = min(ans, a['l' - 'a'] / 2);
        ans = min(ans, a['o' - 'a'] / 2);
        ans = min(ans, a['n' - 'a']);
        return ans;

=======

        int a[26]={0};
        for(int i=0;i<text.size();i++)
        {
            a[text[i]-'a']++;
        }
        int m=1000000;
        m=min(m,a['b'-'a']);
        m=min(m,a['a'-'a']);
        m=min(m,a['l'-'a']/2);
        m=min(m,a['o'-'a']/2);
        m=min(m,a['n'-'a']);
        return m;

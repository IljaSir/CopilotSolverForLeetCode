Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int count = 0;
        for (int i = 1; i <= n; i++) {
            if (n % i == 0) {
                count++;
            }
        }
        return count == 3;

=======

        int cnt = 0;
        for (int i = 1; i <= n; i++) {
            if (n % i == 0) {
                cnt++;
            }
        }
        return cnt == 3;

=======

        int cnt = 0;
        for (int i = 1; i <= n; ++i) {
            if (n % i == 0) {
                ++cnt;
            }
        }
        return cnt == 3;

=======

        int cnt = 0;
        for (int i = 1; i <= n; i++) {
            if (n % i == 0) cnt++;
        }
        return cnt == 3;

=======

        int count = 0;
        for (int i = 1; i <= n; i++) {
            if (n % i == 0) count++;
        }
        return count == 3;

=======

        int cnt = 0;
        for (int i = 1; i * i <= n; ++i) {
            if (n % i == 0) {
                cnt += 1;
                if (i * i != n) cnt += 1;
            }
            if (cnt > 3) return false;
        }
        return cnt == 3;

=======

        int c = 0;
        for(int i = 1; i <= n; i++) {
            if(n % i == 0) c++;
        }
        return c == 3;

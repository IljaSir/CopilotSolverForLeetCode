Synthesizing 10/10 solutions

=======

        int x = 0, y = 0;
        for (char c : moves) {
            if (c == 'U') y++;
            else if (c == 'D') y--;
            else if (c == 'R') x++;
            else if (c == 'L') x--;
        }
        return x == 0 && y == 0;

=======

        int x = 0, y = 0;
        for (char c : moves) {
            switch (c) {
                case 'U': y++; break;
                case 'D': y--; break;
                case 'L': x--; break;
                case 'R': x++; break;
            }
        }
        return (x == 0) && (y == 0);

=======

        int x = 0, y = 0;
        for (char c : moves) {
            if (c == 'U') ++y;
            else if (c == 'D') --y;
            else if (c == 'L') --x;
            else ++x;
        }
        return x == 0 && y == 0;

=======

        int x = 0, y = 0;
        for (auto c : moves) {
            if (c == 'U') y++;
            else if (c == 'D') y--;
            else if (c == 'R') x++;
            else if (c == 'L') x--;
        }
        return x == 0 && y == 0;

=======

        int x = 0, y = 0;
        for (auto c : moves) {
            switch (c) {
                case 'U':
                    y++;
                    break;
                case 'D':
                    y--;
                    break;
                case 'L':
                    x--;
                    break;
                case 'R':
                    x++;
                    break;
            }
        }
        return x == 0 && y == 0;

=======

        int x = 0, y = 0;
        for (char c : moves) {
            if (c == 'U') y++;
            if (c == 'D') y--;
            if (c == 'R') x++;
            if (c == 'L') x--;
        }
        return x == 0 && y == 0;

=======

        int x = 0;
        int y = 0;
        for (auto c : moves) {
            switch (c) {
                case 'U': y++; break;
                case 'D': y--; break;
                case 'L': x--; break;
                case 'R': x++; break;
            }
        }
        return x == 0 && y == 0;

=======

        int x = 0, y = 0;
        for (auto m : moves) {
            switch (m) {
                case 'U': y++; break;
                case 'D': y--; break;
                case 'L': x--; break;
                case 'R': x++; break;
            }
        }
        return x == 0 && y == 0;

=======

        int x = 0, y = 0;
        for (auto ch: moves) {
            if (ch == 'U') ++x;
            if (ch == 'D') --x;
            if (ch == 'L') --y;
            if (ch == 'R') ++y;
        }
        return x == 0 && y == 0;

=======

        int x = 0;
        int y = 0;
        for(int i = 0; i < moves.length(); i++){
            switch (moves[i]){
                case 'U':
                    y++;
                    break;
                case 'D':
                    y--;
                    break;
                case 'L':
                    x--;
                    break;
                case 'R':
                    x++;
                    break;
            }
        }
        return x == 0 && y == 0;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int ans = 0;
        for (int i = 0; i < 32; i++) {
            int a = (start >> i) & 1;
            int b = (goal >> i) & 1;
            if (a == b) continue;
            if (a == 0) {
                ans++;
                start ^= (1 << i);
            } else {
                if (i == 31) return -1;
                ans += 2;
                start ^= (1 << i);
                start ^= (1 << (i + 1));
            }
        }
        return ans;

=======

        int res = 0;
        for (int i = 0; i < 32; i++) {
            int a = (start >> i) & 1;
            int b = (goal >> i) & 1;
            if (a == b) continue;
            if (a == 1) {
                res += 2;
            } else {
                res += 1;
            }
        }
        return res;

=======

        int ans = 0;
        for (int i = 0; i < 32; i++) {
            int bit1 = (start >> i) & 1;
            int bit2 = (goal >> i) & 1;
            if (bit1 == bit2) {
                continue;
            }
            if (bit1 == 0) {
                ans++;
            }
            if (bit1 == 1) {
                ans++;
                start ^= (1 << i);
            }
        }
        return ans;

=======

        int count = 0;
        for (int i = 0; i < 32; i++) {
            int s = start & 1;
            int g = goal & 1;
            if (s != g) {
                count++;
            }
            start >>= 1;
            goal >>= 1;
        }
        return count;

=======

        int ans = 0;
        for (int i = 0; i < 32; ++i) {
            if ((start & 1) != (goal & 1)) {
                ans++;
                start ^= 1;
            }
            start >>= 1;
            goal >>= 1;
        }
        return ans;

=======

        int cnt = 0;
        while (start != goal) {
            if ((start & 1) != (goal & 1)) {
                cnt++;
                start ^= 1;
            }
            start >>= 1;
            goal >>= 1;
        }
        return cnt;

=======

        int ans = 0;
        for (int i = 30; i >= 0; --i) {
            if ((start >> i & 1) != (goal >> i & 1)) {
                if (i == 0) {
                    return -1;
                }
                ans++;
                start ^= 1 << i;
                start ^= 1 << (i - 1);
            }
        }
        return ans;

=======

        int ans = 0;
        for (int i = 0; i < 31; ++i) {
            if ((start & (1 << i)) != (goal & (1 << i))) {
                ans += 1;
                start ^= (1 << i);
            }
        }
        return ans;

=======

        int res = 0;
        for (int i = 0; i < 32; i++) {
            if ((start ^ goal) & 1) {
                if (start & 1) {
                    res++;
                } else {
                    return -1;
                }
            }
            start >>= 1;
            goal >>= 1;
        }
        return res;

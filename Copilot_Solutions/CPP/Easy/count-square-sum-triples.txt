Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int count = 0;
        for (int a = 1; a <= n; a++) {
            for (int b = 1; b <= n; b++) {
                int c = a * a + b * b;
                if (c > n * n) break;
                int s = sqrt(c);
                if (s * s == c) count++;
            }
        }
        return count;

=======

        int ans = 0;
        for (int a = 1; a <= n; ++a) {
            for (int b = a; b <= n; ++b) {
                int c2 = a * a + b * b;
                int c = sqrt(c2);
                if (c <= n && c * c == c2) {
                    ans += 2;
                }
            }
        }
        return ans;

=======

        int ans = 0;
        for (int a = 1; a <= n; a++) {
            for (int b = a; b <= n; b++) {
                int c = a * a + b * b;
                int k = (int)sqrt(c);
                if (k * k == c && k <= n) {
                    ans += 2;
                }
            }
        }
        return ans;

=======

        int count = 0;
        for (int a = 1; a <= n; a++) {
            for (int b = a; b <= n; b++) {
                int c = sqrt(a * a + b * b);
                if (c <= n && c * c == a * a + b * b) {
                    count += 2;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (int a = 1; a <= n; ++a) {
            for (int b = a; b <= n; ++b) {
                int c = sqrt(a * a + b * b);
                if (c <= n && c * c == a * a + b * b) {
                    count += 2;
                }
            }
        }
        return count;

=======

        int res = 0;
        for (int i = 1; i <= n; ++i) {
            for (int j = 1; j <= n; ++j) {
                int k = i * i + j * j;
                int r = sqrt(k);
                if (r * r == k && r <= n) {
                    res += 2;
                }
            }
        }
        return res;

=======

        int res = 0;
        for (int i = 1; i <= n; ++i) {
            for (int j = i; j <= n; ++j) {
                for (int k = j; k <= n; ++k) {
                    if (i * i + j * j == k * k) {
                        res += (i != j) + (j != k) + (i != k);
                    }
                }
            }
        }
        return res;

=======

        int count = 0;
        for(int a = 1; a <= n; a++) {
            for(int b = 1; b <= n; b++) {
                int c = sqrt(a*a + b*b);
                if(c > n) continue;
                if(c*c == a*a + b*b) {
                    count++;
                }
            }
        }
        return count;

=======

        int ans = 0;
        for (int i=1;i<=n;i++) {
            for (int j=i;j<=n;j++) {
                int k = i*i + j*j;
                int m = sqrt(k);
                if (m*m == k && m <= n) {
                    ans += 2;
                }
            }
        }
        return ans;

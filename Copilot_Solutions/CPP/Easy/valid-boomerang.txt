Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int x1 = points[0][0];
        int y1 = points[0][1];
        int x2 = points[1][0];
        int y2 = points[1][1];
        int x3 = points[2][0];
        int y3 = points[2][1];
        return (x1 - x2) * (y1 - y3) != (x1 - x3) * (y1 - y2);

=======

        int x1 = points[0][0];
        int y1 = points[0][1];
        int x2 = points[1][0];
        int y2 = points[1][1];
        int x3 = points[2][0];
        int y3 = points[2][1];
        return (y2 - y1) * (x3 - x2) != (y3 - y2) * (x2 - x1);

=======

        int x1 = points[0][0];
        int y1 = points[0][1];
        int x2 = points[1][0];
        int y2 = points[1][1];
        int x3 = points[2][0];
        int y3 = points[2][1];
        
        if (x1 == x2 && y1 == y2) return false;
        if (x1 == x3 && y1 == y3) return false;
        if (x3 == x2 && y3 == y2) return false;
        
        if (x1 == x2 && x2 == x3) return false;
        if (y1 == y2 && y2 == y3) return false;
        
        if ((x1 - x2) * (y1 - y3) == (x1 - x3) * (y1 - y2)) return false;
        
        return true;

=======

        return (points[0][0] - points[1][0]) * (points[0][1] - points[2][1]) != (points[0][0] - points[2][0]) * (points[0][1] - points[1][1]);

=======

        return (points[0][0] - points[1][0]) * (points[0][1] - points[2][1]) != (points[0][1] - points[1][1]) * (points[0][0] - points[2][0]);

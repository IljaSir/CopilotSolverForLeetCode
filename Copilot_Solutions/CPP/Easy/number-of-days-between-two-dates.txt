Synthesizing 8/10 solutions (Duplicates hidden)

=======

        int y1 = stoi(date1.substr(0, 4));
        int m1 = stoi(date1.substr(5, 2));
        int d1 = stoi(date1.substr(8, 2));
        int y2 = stoi(date2.substr(0, 4));
        int m2 = stoi(date2.substr(5, 2));
        int d2 = stoi(date2.substr(8, 2));
        int days1 = 0;
        int days2 = 0;
        for (int i = 1971; i < y1; i++) {
            if ((i % 4 == 0 && i % 100 != 0) || (i % 400 == 0)) {
                days1 += 366;
            } else {
                days1 += 365;
            }
        }
        for (int i = 1971; i < y2; i++) {
            if ((i % 4 == 0 && i % 100 != 0) || (i % 400 == 0)) {
                days2 += 366;
            } else {
                days2 += 365;
            }
        }
        int months1[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        int months2[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        if ((y1 % 4 == 0 && y1 % 100 != 0) || (y1 % 400 == 0)) {
            months1[2] = 29;
        }
        if ((y2 % 4 == 0 && y2 % 100 != 0) || (y2 % 400 == 0)) {
            months2[2] = 29;
        }
        for (int i = 1; i < m1; i++) {
            days1 += months1[i];
        }
        for (int i = 1; i < m2; i++) {
            days2 += months2[i];
        }
        days1 += d1;
        days2 += d2;
        return abs(days1

=======

        int y1 = stoi(date1.substr(0, 4));
        int m1 = stoi(date1.substr(5, 2));
        int d1 = stoi(date1.substr(8, 2));
        int y2 = stoi(date2.substr(0, 4));
        int m2 = stoi(date2.substr(5, 2));
        int d2 = stoi(date2.substr(8, 2));
        int days[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        int sum1 = 0, sum2 = 0;
        for (int i = 1971; i < y1; i++) {
            sum1 += 365;
            if (i % 4 == 0 && i % 100 != 0 || i % 400 == 0) sum1++;
        }
        for (int i = 1; i < m1; i++) sum1 += days[i];
        if (y1 % 4 == 0 && y1 % 100 != 0 || y1 % 400 == 0) sum1++;
        sum1 += d1;
        for (int i = 1971; i < y2; i++) {
            sum2 += 365;
            if (i % 4 == 0 && i % 100 != 0 || i % 400 == 0) sum2++;
        }
        for (int i = 1; i < m2; i++) sum2 += days[i];
        if (y2 % 4 == 0 && y2 % 100 != 0 || y2 % 400 == 0) sum2++;
        sum2 += d2;
        return abs(sum1 - sum2);

=======

        int year1 = stoi(date1.substr(0, 4));
        int month1 = stoi(date1.substr(5, 2));
        int day1 = stoi(date1.substr(8, 2));
        int year2 = stoi(date2.substr(0, 4));
        int month2 = stoi(date2.substr(5, 2));
        int day2 = stoi(date2.substr(8, 2));
        return abs(days(year1, month1, day1) - days(year2, month2, day2));
    }
    
    int days(int year, int month, int day) {
        int days = 0;
        for (int y = 1971; y < year; ++y) {
            days += 365;
            if (y % 4 == 0 && (y % 100 != 0 || y % 400 == 0)) {
                ++days;
            }
        }
        int months[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        for (int m = 1; m < month; ++m) {
            days += months[m - 1];
            if (m == 2 && year % 4 == 0 && (year % 100 != 0 || year % 400 == 0)) {
                ++days;
            }
        }
        days += day;
        return days;

=======

        int year1 = stoi(date1.substr(0,4));
        int month1 = stoi(date1.substr(5,2));
        int day1 = stoi(date1.substr(8,2));
        int year2 = stoi(date2.substr(0,4));
        int month2 = stoi(date2.substr(5,2));
        int day2 = stoi(date2.substr(8,2));
        int days1 = 0;
        int days2 = 0;
        for(int i=1971;i<year1;i++) {
            if (i%4==0) {
                days1 += 366;
            } else {
                days1 += 365;
            }
        }
        for(int i=1971;i<year2;i++) {
            if (i%4==0) {
                days2 += 366;
            } else {
                days2 += 365;
            }
        }
        int days = 0;
        if (year1==year2) {
            if (month1==month2) {
                days = abs(day1-day2);
            } else {
                if (month1<month2) {
                    for(int i=month1;i<month2;i++) {
                        days += daysInMonth(i,year1);
                    }
                    days += day2;
                    days -= day1;
                } else {
                    for(int i=month2;i<month1;i++) {
                        days += daysInMonth(i,year2);
                    }
                    days += day1;
                    days -= day2;
                }
            }
        } else {
            if (year1<year2) {
                for(int i=month1;i<=12;i++) {
                    days += daysInMonth(i,year1);
                }
                days += day1;
                for(int i=1;i<month2;i++) {
                    days += daysInMonth(i,year2);
                }
                days += day2;
            } else {
                for(int i=month2;i<=12;i++) {
                    days += daysInMonth(i,year2);
                }
                days += day2;
                for(int i=1;i<month1;i++) {
                    days += daysInMonth(i,year1);
                }
                days += day1;
            }
        }
        return abs(days1+days-days2);

=======

        auto days = [](string date) {
            int y = stoi(date.substr(0, 4));
            int m = stoi(date.substr(5, 2));
            int d = stoi(date.substr(8, 2));
            if (m < 3) {
                m += 12;
                y -= 1;
            }
            return 365 * y + y / 4 - y / 100 + y / 400 + (153 * m + 8) / 5 + d;
        };
        return abs(days(date1) - days(date2));

=======

        return abs(days(date1) - days(date2));

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        vector<int> ans;
        for(int i=0;i<nums.size();i++){
            ans.push_back(nums[i]);
        }
        for(int i=0;i<nums.size();i++){
            ans.push_back(nums[i]);
        }
        return ans;

=======

        int n = nums.size();
        vector<int> ans(2*n);
        for(int i=0; i<n; i++){
            ans[i] = nums[i];
            ans[i+n] = nums[i];
        }
        return ans;

=======

        vector<int> ans;
        for(int i = 0; i < 2; i++){
            for(int j = 0; j < nums.size(); j++){
                ans.push_back(nums[j]);
            }
        }
        return ans;

=======

        int n = nums.size();
        vector<int> ans(2*n);
        for(int i = 0; i < n; ++i){
            ans[i] = nums[i];
            ans[i+n] = nums[i];
        }
        return ans;

=======

        int n = nums.size();
        vector<int> ans(2*n);
        for (int i = 0; i < n; ++i) {
            ans[i] = ans[n+i] = nums[i];
        }
        return ans;

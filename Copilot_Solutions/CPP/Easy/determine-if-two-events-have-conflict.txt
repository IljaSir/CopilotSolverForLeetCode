Synthesizing 10/10 solutions

=======

        int start1 = stoi(event1[0].substr(0, 2)) * 60 + stoi(event1[0].substr(3, 2));
        int end1 = stoi(event1[1].substr(0, 2)) * 60 + stoi(event1[1].substr(3, 2));
        int start2 = stoi(event2[0].substr(0, 2)) * 60 + stoi(event2[0].substr(3, 2));
        int end2 = stoi(event2[1].substr(0, 2)) * 60 + stoi(event2[1].substr(3, 2));
        return start1 < end2 && start2 < end1;

=======

        int start1 = stoi(event1[0].substr(0, 2)) * 60 + stoi(event1[0].substr(3, 2));
        int end1 = stoi(event1[1].substr(0, 2)) * 60 + stoi(event1[1].substr(3, 2));
        int start2 = stoi(event2[0].substr(0, 2)) * 60 + stoi(event2[0].substr(3, 2));
        int end2 = stoi(event2[1].substr(0, 2)) * 60 + stoi(event2[1].substr(3, 2));
        return !(end1 <= start2 || end2 <= start1);

=======

        int start1 = stoi(event1[0].substr(0, 2)) * 60 + stoi(event1[0].substr(3, 2));
        int end1 = stoi(event1[1].substr(0, 2)) * 60 + stoi(event1[1].substr(3, 2));
        int start2 = stoi(event2[0].substr(0, 2)) * 60 + stoi(event2[0].substr(3, 2));
        int end2 = stoi(event2[1].substr(0, 2)) * 60 + stoi(event2[1].substr(3, 2));
        if (start1 > end1 || start2 > end2) {
            return false;
        }
        if (start1 > start2) {
            if (start1 > end2) {
                return false;
            }
        } else {
            if (start2 > end1) {
                return false;
            }
        }
        return true;

=======

        int start1 = stoi(event1[0].substr(0, 2)) * 60 + stoi(event1[0].substr(3, 2));
        int end1 = stoi(event1[1].substr(0, 2)) * 60 + stoi(event1[1].substr(3, 2));
        int start2 = stoi(event2[0].substr(0, 2)) * 60 + stoi(event2[0].substr(3, 2));
        int end2 = stoi(event2[1].substr(0, 2)) * 60 + stoi(event2[1].substr(3, 2));
        if (end1 < start2 || end2 < start1) return false;
        return true;

=======

        int start1 = stoi(event1[0].substr(0, 2)) * 60 + stoi(event1[0].substr(3, 2));
        int end1 = stoi(event1[1].substr(0, 2)) * 60 + stoi(event1[1].substr(3, 2));
        int start2 = stoi(event2[0].substr(0, 2)) * 60 + stoi(event2[0].substr(3, 2));
        int end2 = stoi(event2[1].substr(0, 2)) * 60 + stoi(event2[1].substr(3, 2));
        return (start1 < end2 && start2 < end1);

=======

        int h1 = stoi(event1[0].substr(0, 2));
        int m1 = stoi(event1[0].substr(3, 2));
        int h2 = stoi(event1[1].substr(0, 2));
        int m2 = stoi(event1[1].substr(3, 2));
        int h3 = stoi(event2[0].substr(0, 2));
        int m3 = stoi(event2[0].substr(3, 2));
        int h4 = stoi(event2[1].substr(0, 2));
        int m4 = stoi(event2[1].substr(3, 2));
        int t1 = h1 * 60 + m1;
        int t2 = h2 * 60 + m2;
        int t3 = h3 * 60 + m3;
        int t4 = h4 * 60 + m4;
        return t1 <= t4 && t3 <= t2;

=======

        int start1 = stoi(event1[0].substr(0,2)) * 60 + stoi(event1[0].substr(3,2));
        int end1 = stoi(event1[1].substr(0,2)) * 60 + stoi(event1[1].substr(3,2));
        int start2 = stoi(event2[0].substr(0,2)) * 60 + stoi(event2[0].substr(3,2));
        int end2 = stoi(event2[1].substr(0,2)) * 60 + stoi(event2[1].substr(3,2));
        if (start1 > end1) {
            end1 += 24 * 60;
        }
        if (start2 > end2) {
            end2 += 24 * 60;
        }
        if (start2 <= start1 && start1 <= end2) {
            return true;
        }
        if (start1 <= start2 && start2 <= end1) {
            return true;
        }
        return false;

=======

        int start1 = stoi(event1[0].substr(0, 2)) * 60 + stoi(event1[0].substr(3, 2));
        int start2 = stoi(event2[0].substr(0, 2)) * 60 + stoi(event2[0].substr(3, 2));
        int end1 = stoi(event1[1].substr(0, 2)) * 60 + stoi(event1[1].substr(3, 2));
        int end2 = stoi(event2[1].substr(0, 2)) * 60 + stoi(event2[1].substr(3, 2));
        return (start1 <= start2 && start2 <= end1) || (start2 <= start1 && start1 <= end2);

=======

        int t1 = stoi(event1[0].substr(0,2))*60 + stoi(event1[0].substr(3,2));
        int t2 = stoi(event1[1].substr(0,2))*60 + stoi(event1[1].substr(3,2));
        int t3 = stoi(event2[0].substr(0,2))*60 + stoi(event2[0].substr(3,2));
        int t4 = stoi(event2[1].substr(0,2))*60 + stoi(event2[1].substr(3,2));
        return t1 <= t3 && t3 < t2 || t3 <= t1 && t1 < t4;

=======

        return (event1[0] < event2[1] && event2[0] < event1[1]);

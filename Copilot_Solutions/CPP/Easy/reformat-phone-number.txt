Synthesizing 10/10 solutions

=======

        string res;
        for (char c : number) {
            if (isdigit(c)) res += c;
        }
        for (int i = res.size() - 4; i > 0; i -= 3) {
            res.insert(i, "-");
        }
        if (res.size() - res.find_last_of('-') == 4) {
            res.insert(res.size() - 2, "-");
        }
        return res;

=======

        string s;
        for (auto c : number) {
            if (isdigit(c)) {
                s.push_back(c);
            }
        }
        string result;
        while (s.size() > 4) {
            result += s.substr(0, 3) + "-";
            s.erase(0, 3);
        }
        if (s.size() == 4) {
            result += s.substr(0, 2) + "-" + s.substr(2, 2);
        } else {
            result += s;
        }
        return result;

=======

        string res;
        for (auto c : number) {
            if (c != ' ' && c != '-') {
                res.push_back(c);
            }
        }
        int n = res.size();
        string ans;
        for (int i = 0; i < n; i += 3) {
            if (n - i == 4) {
                ans += res.substr(i, 2);
                ans += '-';
                ans += res.substr(i + 2, 2);
                break;
            } else {
                ans += res.substr(i, 3);
                if (i + 3 < n) {
                    ans += '-';
                }
            }
        }
        return ans;

=======

        string digits = "";
        for (char c : number) {
            if (c >= '0' && c <= '9') {
                digits += c;
            }
        }
        
        string result = "";
        int n = digits.length();
        for (int i = 0; i < n; i += 3) {
            if (i + 4 < n) {
                result += digits.substr(i, 3) + "-";
            } else if (i + 2 == n) {
                result += digits.substr(i, 2);
            } else {
                result += digits.substr(i, 3);
            }
        }
        return result;

=======

        string result;
        int count = 0;
        for (auto c : number) {
            if (c != '-' && c != ' ') {
                result += c;
                count++;
                if (count == 3 && result.size() < number.size() - 4) {
                    result += '-';
                    count = 0;
                }
            }
        }
        if (result.size() > 2 && result[result.size() - 2] == '-') {
            result[result.size() - 3] = result[result.size() - 1];
            result.pop_back();
        }
        return result;

=======

        string res = "";
        for (char c : number) {
            if (isdigit(c)) {
                res += c;
            }
        }
        string ans = "";
        int i = 0;
        while (i < res.size()) {
            if (res.size() - i == 4) {
                ans += res.substr(i, 2) + "-" + res.substr(i + 2, 2);
                break;
            } else if (res.size() - i == 2) {
                ans += res.substr(i, 2);
                break;
            } else if (res.size() - i == 3) {
                ans += res.substr(i, 3);
                break;
            } else {
                ans += res.substr(i, 3) + "-";
                i += 3;
            }
        }
        return ans;

=======

        string result = "";
        string temp = "";
        for (auto c : number) {
            if (c == ' ' || c == '-') {
                continue;
            }
            temp += c;
        }
        for (int i = 0; i < temp.size(); i += 3) {
            if (i + 4 == temp.size()) {
                result += temp.substr(i, 2) + "-" + temp.substr(i + 2, 2);
                break;
            }
            if (i + 3 == temp.size()) {
                result += temp.substr(i, 3);
                break;
            }
            result += temp.substr(i, 3) + "-";
        }
        return result;

=======

        string result;
        for (auto c : number) {
            if (c >= '0' && c <= '9') {
                result.push_back(c);
            }
        }
        int n = result.size();
        string out;
        for (int i = 0; i < n; i += 3) {
            if (i + 3 < n) {
                out += result.substr(i, 3) + '-';
            } else if (i + 3 == n) {
                out += result.substr(i, 2) + '-' + result.substr(i + 2, 1);
            } else if (i + 2 == n) {
                out += result.substr(i, 2);
            } else if (i + 1 == n) {
                out += result.substr(i, 1);
            }
        }
        return out;

=======

        string ans;
        for (auto c : number) {
            if (c == '-' || c == ' ') {
                continue;
            }
            ans.push_back(c);
        }
        int len = ans.size();
        int i = 0;
        while (len - i > 4) {
            ans.insert(i + 3, "-");
            len++;
            i += 4;
        }
        if (len - i == 4) {
            ans.insert(i + 2, "-");
        }
        return ans;

=======

        string num = "";
        for (char c : number) {
            if (c != ' ' && c != '-') {
                num = num + c;
            }
        }
        string ans = "";
        int len = num.length();
        int i = 0;
        while (i < len) {
            int cnt = 0;
            while (i < len && cnt < 3) {
                ans = ans + num[i];
                i++;
                cnt++;
            }
            if (i < len) {
                ans = ans + '-';
            }
            if (len - i == 4) {
                ans = ans + num[i] + num[i + 1];
                ans = ans + '-';
                ans = ans + num[i + 2] + num[i + 3];
                break;
            }
        }
        return ans;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int k = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] != val) {
                nums[k++] = nums[i];
            }
        }
        return k;

=======

        int k = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] != val) {
                nums[k] = nums[i];
                k++;
            }
        }
        return k;

=======

        int i = 0;
        for (int j = 0; j < nums.size(); j++) {
            if (nums[j] != val) {
                nums[i] = nums[j];
                i++;
            }
        }
        return i;

=======

        int k = 0;
        for (int i = 0; i < nums.size(); ++i) {
            if (nums[i] != val) {
                nums[k++] = nums[i];
            }
        }
        return k;

=======

        int n = nums.size();
        int k = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] != val) {
                nums[k++] = nums[i];
            }
        }
        return k;

=======

        int len = nums.size();
        int k = 0;
        for (int i = 0; i < len; i++) {
            if (nums[i] != val) {
                nums[k++] = nums[i];
            }
        }
        return k;

=======

        int len = nums.size();
        int i = 0;
        while (i < len) {
            if (nums[i] == val) {
                nums.erase(nums.begin() + i);
                len--;
            } else {
                i++;
            }
        }
        return len;

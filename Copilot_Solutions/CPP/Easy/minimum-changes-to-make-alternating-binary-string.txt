Synthesizing 10/10 solutions

=======

        int n = s.size();
        int cnt1 = 0, cnt2 = 0;
        for (int i = 0; i < n; i++) {
            if (i & 1) {
                if (s[i] == '0') cnt1++;
                else cnt2++;
            } else {
                if (s[i] == '0') cnt2++;
                else cnt1++;
            }
        }
        return min(cnt1, cnt2);

=======

        int n = s.size();
        int ans1 = 0, ans2 = 0;
        for (int i = 0; i < n; i++) {
            if ((i % 2 == 0 && s[i] == '1') || (i % 2 == 1 && s[i] == '0')) ans1++;
            if ((i % 2 == 0 && s[i] == '0') || (i % 2 == 1 && s[i] == '1')) ans2++;
        }
        return min(ans1, ans2);

=======

        int n = s.size();
        int cnt1 = 0, cnt2 = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] != '0' + i % 2) {
                cnt1++;
            }
            if (s[i] != '0' + (i + 1) % 2) {
                cnt2++;
            }
        }
        return min(cnt1, cnt2);

=======

        int n = s.size();
        int cnt = 0;
        for (int i = 0; i < n; ++i) {
            if (s[i] != '0' + i % 2) {
                ++cnt;
            }
        }
        return min(cnt, n - cnt);

=======

        int n = s.size();
        int res = 0;
        for (int i = 0; i < n; i++) {
            if ((i % 2 == 0 && s[i] == '0') || (i % 2 == 1 && s[i] == '1')) res++;
        }
        return min(res, n - res);

=======

        int n = s.length();
        int cnt1 = 0, cnt2 = 0;
        for(int i = 0; i < n; i++) {
            if(i % 2 == 0) {
                if(s[i] != '0') cnt1++;
                if(s[i] != '1') cnt2++;
            } else {
                if(s[i] != '1') cnt1++;
                if(s[i] != '0') cnt2++;
            }
        }
        return min(cnt1, cnt2);

=======

        int count = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] == '0' && i % 2 == 0) {
                count++;
            } else if (s[i] == '1' && i % 2 == 1) {
                count++;
            }
        }
        return min(count, (int)s.size() - count);

=======

        int cnt0=0;
        int cnt1=0;
        for(int i=0;i<s.size();i++){
            if(i%2==0){
                if(s[i]=='0'){
                    cnt0++;
                }
                else{
                    cnt1++;
                }
            }
            else{
                if(s[i]=='1'){
                    cnt0++;
                }
                else{
                    cnt1++;
                }
            }
        }
        return min(cnt0,cnt1);

=======

        int n = s.size();
        int res = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] != (i % 2) + '0') {
                res++;
            }
        }
        return min(res, n - res);

=======

        int n = s.size();
        int ans = 0;
        for(int i = 0; i < n; ++i){
            if(s[i] == '0' + i % 2) ++ans;
        }
        return min(ans, n - ans);

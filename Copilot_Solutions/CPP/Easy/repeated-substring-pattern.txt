Synthesizing 10/10 solutions

=======

        int n = s.size();
        for (int i = 1; i * 2 <= n; ++i) {
            if (n % i == 0) {
                bool match = true;
                for (int j = i; j < n; ++j) {
                    if (s[j] != s[j - i]) {
                        match = false;
                        break;
                    }
                }
                if (match) {
                    return true;
                }
            }
        }
        return false;

=======

        int n = s.length();
        for (int i = 1; i * 2 <= n; i++) {
            if (n % i == 0) {
                bool match = true;
                for (int j = i; j < n; j++) {
                    if (s[j] != s[j - i]) {
                        match = false;
                        break;
                    }
                }
                if (match) return true;
            }
        }
        return false;

=======

        int n = s.size();
        for (int i = n / 2; i >= 1; i--) {
            if (n % i == 0) {
                int m = n / i;
                string t = s.substr(0, i);
                int j;
                for (j = 1; j < m; j++) {
                    if (s.substr(j * i, i) != t) {
                        break;
                    }
                }
                if (j == m) {
                    return true;
                }
            }
        }
        return false;

=======

        int n = s.size();
        for (int i = 1; i <= n / 2; i++) {
            if (n % i == 0) {
                bool ok = true;
                for (int j = i; j < n; j++) {
                    if (s[j] != s[j - i]) {
                        ok = false;
                        break;
                    }
                }
                if (ok) return true;
            }
        }
        return false;

=======

        int n = s.size();
        for (int i = 1; i <= n / 2; i++) {
            if (n % i == 0) {
                bool match = true;
                for (int j = i; j < n; j++) {
                    if (s[j] != s[j - i]) {
                        match = false;
                        break;
                    }
                }
                if (match) return true;
            }
        }
        return false;

=======

        int n = s.length();
        for (int i = 1; i <= n / 2; i++) {
            if (n % i == 0) {
                bool ok = true;
                for (int j = i; j < n; j++) {
                    if (s[j] != s[j - i]) {
                        ok = false;
                        break;
                    }
                }
                if (ok) return true;
            }
        }
        return false;

=======

        int n = s.size();
        for (int i = 1; i <= n / 2; ++i) {
            if (n % i == 0) {
                string sub = s.substr(0, i);
                bool flag = true;
                for (int j = i; j < n; j += i) {
                    if (sub != s.substr(j, i)) {
                        flag = false;
                        break;
                    }
                }
                if (flag) return true;
            }
        }
        return false;

=======

        int n = s.size();
        for (int i = 1; i <= n / 2; ++i) {
            if (n % i != 0) continue;
            bool ok = true;
            for (int j = i; j < n; ++j) {
                if (s[j] != s[j - i]) {
                    ok = false;
                    break;
                }
            }
            if (ok) return true;
        }
        return false;

=======

        int n = s.size();
        for(int i = 1; i <= n / 2; i++) {
            if(n % i == 0) {
                string sub = s.substr(0, i);
                int j = i;
                while(j < n) {
                    if(s.substr(j, i) != sub)
                        break;
                    j += i;
                }
                if(j == n)
                    return true;
            }
        }
        return false;

=======

        int n = s.length();
        for(int i = 1; i <= n/2; i++){
            if(n % i == 0){
                string sub = s.substr(0, i);
                int j = i;
                for(; j < n; j += i){
                    if(s.substr(j, i) != sub){
                        break;
                    }
                }
                if(j == n){
                    return true;
                }
            }
        }
        return false;

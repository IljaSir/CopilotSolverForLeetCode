Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int n = nums.size();
        vector<int> leftSum(n);
        vector<int> rightSum(n);
        for (int i = 1; i < n; ++i) {
            leftSum[i] = leftSum[i - 1] + nums[i - 1];
        }
        for (int i = n - 2; i >= 0; --i) {
            rightSum[i] = rightSum[i + 1] + nums[i + 1];
        }
        vector<int> ans(n);
        for (int i = 0; i < n; ++i) {
            ans[i] = abs(leftSum[i] - rightSum[i]);
        }
        return ans;

=======

        vector<int> leftSum(nums.size(), 0);
        vector<int> rightSum(nums.size(), 0);
        int sum = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            leftSum[i] = sum;
        }
        sum = 0;
        for (int i = nums.size() - 1; i >= 0; i--) {
            sum += nums[i];
            rightSum[i] = sum;
        }
        vector<int> result(nums.size(), 0);
        for (int i = 0; i < nums.size(); i++) {
            result[i] = abs(leftSum[i] - rightSum[i]);
        }
        return result;

=======

        int n = nums.size();
        vector<int> leftSum(n, 0);
        vector<int> rightSum(n, 0);
        vector<int> ans(n, 0);
        for (int i = 1; i < n; i++) {
            leftSum[i] = leftSum[i - 1] + nums[i - 1];
        }
        for (int i = n - 2; i >= 0; i--) {
            rightSum[i] = rightSum[i + 1] + nums[i + 1];
        }
        for (int i = 0; i < n; i++) {
            ans[i] = abs(leftSum[i] - rightSum[i]);
        }
        return ans;

=======

        vector<int> leftSum(nums.size());
        vector<int> rightSum(nums.size());
        vector<int> answer(nums.size());
        leftSum[0] = 0;
        for(int i = 1; i < nums.size(); i++) {
            leftSum[i] = leftSum[i - 1] + nums[i - 1];
        }
        rightSum[nums.size() - 1] = 0;
        for(int i = nums.size() - 2; i >= 0; i--) {
            rightSum[i] = rightSum[i + 1] + nums[i + 1];
        }
        for(int i = 0; i < nums.size(); i++) {
            answer[i] = abs(leftSum[i] - rightSum[i]);
        }
        return answer;

=======

        int n = nums.size();
        vector<int> ans(n);
        vector<int> leftSum(n);
        vector<int> rightSum(n);
        leftSum[0] = 0;
        rightSum[n-1] = 0;
        for(int i=1; i<n; i++) {
            leftSum[i] = leftSum[i-1] + nums[i-1];
        }
        for(int i=n-2; i>=0; i--) {
            rightSum[i] = rightSum[i+1] + nums[i+1];
        }
        for(int i=0; i<n; i++) {
            ans[i] = abs(leftSum[i] - rightSum[i]);
        }
        return ans;

=======

        int n = nums.size();
        vector<int> leftSum(n,0);
        vector<int> rightSum(n,0);
        vector<int> answer(n,0);
        for(int i = 1; i < n; i++){
            leftSum[i] = leftSum[i-1] + nums[i-1];
        }
        for(int i = n-2; i >= 0; i--){
            rightSum[i] = rightSum[i+1] + nums[i+1];
        }
        for(int i = 0; i < n; i++){
            answer[i] = abs(leftSum[i] - rightSum[i]);
        }
        return answer;

=======

        vector<int> leftSum(nums.size(),0);
        vector<int> rightSum(nums.size(),0);
        for(int i=1; i<nums.size(); i++) {
            leftSum[i] = leftSum[i-1] + nums[i-1];
            rightSum[nums.size()-i-1] = rightSum[nums.size()-i] + nums[nums.size()-i];
        }
        vector<int> answer(nums.size(),0);
        for(int i=0; i<nums.size(); i++) {
            answer[i] = abs(leftSum[i] - rightSum[i]);
        }
        return answer;

=======

        int n = nums.size();
        vector<int> leftSum(n, 0);
        vector<int> rightSum(n, 0);
        vector<int> answer(n, 0);
        if (n == 1) return answer;
        leftSum[0] = nums[0];
        rightSum[n-1] = nums[n-1];
        for (int i = 1; i < n; i++) {
            leftSum[i] = leftSum[i-1] + nums[i];
            rightSum[n-1-i] = rightSum[n-i] + nums[n-1-i];
        }
        for (int i = 0; i < n; i++) {
            answer[i] = abs(leftSum[i] - rightSum[i]);
        }
        return answer;

=======

        int n = nums.size();
        vector<int> leftSum(n, 0);
        vector<int> rightSum(n, 0);
        
        // leftSum
        for (int i = 1; i < n; ++i) {
            leftSum[i] = leftSum[i-1] + nums[i-1];
        }
        
        // rightSum
        for (int i = n-2; i >= 0; --i) {
            rightSum[i] = rightSum[i+1] + nums[i+1];
        }
        
        vector<int> answer(n, 0);
        for (int i = 0; i < n; ++i) {
            answer[i] = abs(leftSum[i] - rightSum[i]);
        }
        
        return answer;

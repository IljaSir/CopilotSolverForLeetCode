Synthesizing 10/10 solutions (Duplicates hidden)

=======

        for (int i = 0; i < nums.size(); ++i) {
            if (i % 10 == nums[i]) {
                return i;
            }
        }
        return -1;

=======

        int n = nums.size();
        for (int i = 0; i < n; i++) {
            if (i % 10 == nums[i]) {
                return i;
            }
        }
        return -1;

=======

        for(int i=0;i<nums.size();i++){
            if(i%10==nums[i]){
                return i;
            }
        }
        return -1;

=======

        int n = nums.size();
        int ans = -1;
        for(int i = 0; i < n; i++){
            if(i % 10 == nums[i]){
                ans = i;
                break;
            }
        }
        return ans;

=======

        int n=nums.size();
        for(int i=0;i<n;i++){
            if(nums[i]==i%10) return i;
        }
        return -1;

=======

        int n = nums.size();
        int i = 0;
        while(i < n){
            if(nums[i] == i%10){
                return i;
            }
            i++;
        }
        return -1;

=======

        int min = -1;
        for(int i=0; i<nums.size(); i++) {
            if(i%10 == nums[i]) {
                if(min == -1) {
                    min = i;
                } else {
                    if(i < min) {
                        min = i;
                    }
                }
            }
        }
        return min;

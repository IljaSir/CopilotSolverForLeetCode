Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int count = 0;
        for (int i = 1; i < nums.size() - 1; i++) {
            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {
                count++;
            }
            if (nums[i] < nums[i - 1] && nums[i] < nums[i + 1]) {
                count++;
            }
        }
        return count;

=======

        int n = nums.size();
        int count = 0;
        for (int i = 1; i < n - 1; i++) {
            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {
                count++;
            }
            if (nums[i] < nums[i - 1] && nums[i] < nums[i + 1]) {
                count++;
            }
        }
        return count;

=======

        int n = nums.size();
        int count = 0;
        for (int i = 1; i < n - 1; i++) {
            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {
                count++;
            } else if (nums[i] < nums[i - 1] && nums[i] < nums[i + 1]) {
                count++;
            }
        }
        return count;

=======

        int n = nums.size();
        int count = 0;
        for (int i = 1; i < n - 1; i++) {
            if ((nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) ||
                (nums[i] < nums[i - 1] && nums[i] < nums[i + 1])) {
                count++;
            }
        }
        return count;

=======

        int ans = 0;
        for (int i = 1; i < nums.size() - 1; i++) {
            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {
                ans++;
            }
            if (nums[i] < nums[i - 1] && nums[i] < nums[i + 1]) {
                ans++;
            }
        }
        return ans;

=======

        int n = nums.size();
        int cnt = 0;
        for (int i = 1; i < n - 1; i++) {
            if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {
                cnt++;
            }
            if (nums[i] < nums[i - 1] && nums[i] < nums[i + 1]) {
                cnt++;
            }
        }
        return cnt;

=======

        int n = nums.size();
        int ans = 0;
        for(int i = 1; i < n - 1; i++) {
            if((nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) || (nums[i] < nums[i - 1] && nums[i] < nums[i + 1])) {
                ans++;
            }
        }
        return ans;

=======

        int count = 0;
        int n = nums.size();
        for(int i=1; i<n-1; i++){
            if(nums[i-1] != nums[i] && nums[i+1] != nums[i]){
                if(nums[i-1] < nums[i] && nums[i] > nums[i+1]){
                    count++;
                }
                if(nums[i-1] > nums[i] && nums[i] < nums[i+1]){
                    count++;
                }
            }
        }
        return count;

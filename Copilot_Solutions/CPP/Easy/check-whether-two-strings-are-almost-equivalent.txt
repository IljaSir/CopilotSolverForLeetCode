Synthesizing 10/10 solutions

=======

        int n = word1.size();
        vector<int> freq1(26, 0);
        vector<int> freq2(26, 0);
        for (int i = 0; i < n; i++) {
            freq1[word1[i] - 'a']++;
            freq2[word2[i] - 'a']++;
        }
        int count = 0;
        for (int i = 0; i < 26; i++) {
            if (abs(freq1[i] - freq2[i]) > 3) {
                count++;
            }
        }
        return count <= 3;

=======

        int count1[26] = {0};
        int count2[26] = {0};
        for (char c: word1) {
            count1[c - 'a']++;
        }
        for (char c: word2) {
            count2[c - 'a']++;
        }
        int diff = 0;
        for (int i = 0; i < 26; i++) {
            diff += abs(count1[i] - count2[i]);
        }
        return diff <= 3;

=======

        if (word1.length() != word2.length()) return false;
        int freq1[26] = {0};
        int freq2[26] = {0};
        for (int i = 0; i < word1.length(); i++) {
            freq1[word1[i] - 'a']++;
            freq2[word2[i] - 'a']++;
        }
        int diff = 0;
        for (int i = 0; i < 26; i++) {
            diff += abs(freq1[i] - freq2[i]);
            if (diff > 3) return false;
        }
        return true;

=======

        int n = word1.length();
        vector<int> cnt1(26, 0);
        vector<int> cnt2(26, 0);
        for (int i = 0; i < n; i++) {
            cnt1[word1[i] - 'a']++;
            cnt2[word2[i] - 'a']++;
        }
        int diff = 0;
        for (int i = 0; i < 26; i++) {
            diff += abs(cnt1[i] - cnt2[i]);
        }
        return diff <= 3;

=======

        int n = word1.size();
        vector<int> freq1(26, 0), freq2(26, 0);
        for (int i = 0; i < n; ++i) {
            freq1[word1[i] - 'a']++;
            freq2[word2[i] - 'a']++;
        }
        for (int i = 0; i < 26; ++i) {
            if (abs(freq1[i] - freq2[i]) > 3) {
                return false;
            }
        }
        return true;

=======

        int n = word1.size();
        int m = word2.size();
        if (n != m) return false;
        vector<int> cnt1(26, 0);
        vector<int> cnt2(26, 0);
        for (int i = 0; i < n; i++) {
            cnt1[word1[i] - 'a']++;
            cnt2[word2[i] - 'a']++;
        }
        int diff = 0;
        for (int i = 0; i < 26; i++) {
            if (abs(cnt1[i] - cnt2[i]) > 3) {
                return false;
            }
        }
        return true;

=======

        int n = word1.length();
        if (n != word2.length()) {
            return false;
        }
        int freq1[26] = {0};
        int freq2[26] = {0};
        for (int i = 0; i < n; i++) {
            freq1[word1[i] - 'a']++;
            freq2[word2[i] - 'a']++;
        }
        int diff = 0;
        for (int i = 0; i < 26; i++) {
            diff += abs(freq1[i] - freq2[i]);
        }
        return diff <= 6;

=======

        int n = word1.size();
        if (n != word2.size()) {
            return false;
        }
        vector<int> c1(26, 0), c2(26, 0);
        for (int i = 0; i < n; ++i) {
            c1[word1[i] - 'a']++;
            c2[word2[i] - 'a']++;
        }
        int diff = 0;
        for (int i = 0; i < 26; ++i) {
            diff += abs(c1[i] - c2[i]);
        }
        return diff <= 3;

=======

        int n = word1.size();
        int diff = 0;
        vector<int> freq1(26, 0);
        vector<int> freq2(26, 0);
        for (int i = 0; i < n; i++) {
            freq1[word1[i] - 'a']++;
            freq2[word2[i] - 'a']++;
        }
        for (int i = 0; i < 26; i++) {
            diff += abs(freq1[i] - freq2[i]);
        }
        return diff <= 3;

=======

        int word1Count[26] = {0};
        int word2Count[26] = {0};
        for (char c : word1) {
            ++word1Count[c - 'a'];
        }
        for (char c : word2) {
            ++word2Count[c - 'a'];
        }
        int diff = 0;
        for (int i = 0; i < 26; ++i) {
            diff += abs(word1Count[i] - word2Count[i]);
        }
        return diff <= 3;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if (n <= 0) return false;
        while (n % 3 == 0) {
            n /= 3;
        }
        return n == 1;

=======

        if (n <= 0) return false;
        while (n % 3 == 0) n /= 3;
        return n == 1;

=======

        return n > 0 && 1162261467 % n == 0;

=======

        if(n==0)
            return false;
        if(n==1)
            return true;
        if(n%3==0)
            return isPowerOfThree(n/3);
        else
            return false;

=======

        if(n<=0)
            return false;
        if(n==1)
            return true;
        if(n%3!=0)
            return false;
        return isPowerOfThree(n/3);

=======

        if(n == 1) return true;
        if(n == 0) return false;
        if(n % 3 == 0) return isPowerOfThree(n / 3);
        return false;

=======

        if(n==0) return false;
        while(n%3==0) n/=3;
        return n==1;

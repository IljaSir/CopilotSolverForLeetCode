Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if (n <= 0) {
            return false;
        }
        return (n & (n - 1)) == 0;

=======

        if (n <= 0) return false;
        return (n & (n - 1)) == 0;

=======

        if(n == 0) return false;
        if(n == 1) return true;
        if(n % 2 != 0) return false;
        return isPowerOfTwo(n/2);

=======

        if(n==0)
            return false;
        if(n==1)
            return true;
        if(n%2==0)
            return isPowerOfTwo(n/2);
        else
            return false;

=======

        return (n > 0) && (n & (n - 1)) == 0;

=======

        return n > 0 && !(n & (n - 1));

=======

        if(n <= 0) return false;
        while(n > 1){
            if(n % 2 != 0) return false;
            n = n/2;
        }
        return true;

=======

        if(n==0) return false;
        while(n%2==0){
            n/=2;
        }
        return n==1;

=======

        if(n==1)return true;
        if(n<=0)return false;
        if(n%2==1)return false;
        return isPowerOfTwo(n/2);

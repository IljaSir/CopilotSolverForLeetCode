Synthesizing 10/10 solutions

=======

        for (int i = 1; i <= n; ++i) {
            int sum1 = 0, sum2 = 0;
            for (int j = 1; j <= i; ++j) {
                sum1 += j;
            }
            for (int j = i + 1; j <= n; ++j) {
                sum2 += j;
            }
            if (sum1 == sum2) {
                return i;
            }
        }
        return -1;

=======

        int sum = 0;
        for (int i = 1; i <= n; i++) {
            sum += i;
        }
        if (sum % 2 != 0) {
            return -1;
        }
        int half = sum / 2;
        int sum2 = 0;
        for (int i = 1; i <= n; i++) {
            sum2 += i;
            if (sum2 == half) {
                return i;
            }
        }
        return -1;

=======

        int sum = 0;
        for (int i = 1; i <= n; ++i) {
            sum += i;
        }
        if (sum % 2 == 1) {
            return -1;
        }
        int half = sum / 2;
        int left = 0;
        for (int i = 1; i <= n; ++i) {
            left += i;
            if (left == half) {
                return i;
            }
        }
        return -1;

=======

        for (int i = 1; i <= n; i++) {
            int sum = 0;
            for (int j = 1; j <= i; j++) {
                sum += j;
            }
            for (int j = i + 1; j <= n; j++) {
                sum -= j;
            }
            if (sum == 0) {
                return i;
            }
        }
        return -1;

=======

        for (int i = 1; i <= n; ++i) {
            if (i * (i + 1) / 2 == (n * (n + 1) / 2 - (i * (i + 1) / 2))) {
                return i;
            }
        }
        return -1;

=======

        int sum = 0;
        for (int i = 1; i <= n; i++) {
            sum += i;
        }
        int left = 0;
        int right = sum;
        for (int i = 1; i <= n; i++) {
            right -= i;
            if (left == right) {
                return i;
            }
            left += i;
        }
        return -1;

=======

        if (n == 1) return 1;
        for (int i = 2; i <= n; i++) {
            int sum1 = 0, sum2 = 0;
            for (int j = 1; j < i; j++) {
                sum1 += j;
            }
            for (int j = i + 1; j <= n; j++) {
                sum2 += j;
            }
            if (sum1 == sum2) return i;
        }
        return -1;

=======

        int sum = 0;
        int sum2 = 0;
        for (int i = 1; i <= n; i++) {
            sum += i;
            sum2 += n - i + 1;
            if (sum == sum2) {
                return i;
            }
        }
        return -1;

=======

        int sum = 0;
        for(int i = 1; i <= n; i++){
            sum += i;
        }
        int lsum = 0;
        int rsum = sum;
        for(int i = 1; i <= n; i++){
            lsum += i;
            rsum -= i;
            if(lsum == rsum){
                return i;
            }
        }
        return -1;

=======

        int sum = 0;
        for(int i=1;i<=n;i++) {
            sum += i;
            if(sum == n*(n+1)/2 - sum + i) {
                return i;
            }
        }
        return -1;

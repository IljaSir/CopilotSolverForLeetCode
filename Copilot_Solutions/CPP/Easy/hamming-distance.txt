Synthesizing 10/10 solutions

=======

        int res = 0;
        while (x > 0 || y > 0) {
            res += (x % 2) ^ (y % 2);
            x /= 2;
            y /= 2;
        }
        return res;

=======

        int ans = 0;
        for (int i = 0; i < 32; ++i) {
            ans += (x & 1) ^ (y & 1);
            x >>= 1;
            y >>= 1;
        }
        return ans;

=======

        int z = x ^ y;
        int res = 0;
        while (z) {
            res += z & 1;
            z >>= 1;
        }
        return res;

=======

        int result = 0;
        while (x > 0 || y > 0) {
            if ((x & 1) != (y & 1)) {
                result++;
            }
            x >>= 1;
            y >>= 1;
        }
        return result;

=======

        int res = 0;
        while (x != 0 || y != 0) {
            if ((x & 1) != (y & 1)) {
                res++;
            }
            x >>= 1;
            y >>= 1;
        }
        return res;

=======

        int z = x ^ y;
        int res = 0;
        while (z) {
            if (z & 1) {
                res++;
            }
            z >>= 1;
        }
        return res;

=======

        int res = 0;
        while (x != 0 || y != 0) {
            res += (x & 1) ^ (y & 1);
            x = x >> 1;
            y = y >> 1;
        }
        return res;

=======

        int z = x ^ y;
        int cnt = 0;
        while (z) {
            cnt += (z & 1);
            z >>= 1;
        }
        return cnt;

=======

        int z = x ^ y;
        int r = 0;
        while (z > 0) {
            if (z & 1) {
                r++;
            }
            z >>= 1;
        }
        return r;

=======

        int z = x ^ y;
        int count = 0;
        while (z != 0) {
            if (z % 2 == 1) {
                count++;
            }
            z = z >> 1;
        }
        return count;

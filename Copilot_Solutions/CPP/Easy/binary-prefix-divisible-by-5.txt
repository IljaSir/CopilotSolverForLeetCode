Synthesizing 10/10 solutions

=======

        vector<bool> ans;
        int sum = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum = ((sum << 1) + nums[i]) % 5;
            ans.push_back(sum % 5 == 0);
        }
        return ans;

=======

        vector<bool> ans;
        int n = nums.size();
        int num = 0;
        for (int i = 0; i < n; i++) {
            num = ((num << 1) + nums[i]) % 5;
            ans.push_back(num == 0);
        }
        return ans;

=======

        int n = nums.size();
        vector<bool> res(n, false);
        int x = 0;
        for (int i = 0; i < n; i++) {
            x = (x * 2 + nums[i]) % 5;
            if (x == 0) {
                res[i] = true;
            }
        }
        return res;

=======

        vector<bool> res;
        int val = 0;
        for (int i = 0; i < nums.size(); i++) {
            val = val * 2 + nums[i];
            res.push_back(val % 5 == 0);
            val = val % 5;
        }
        return res;

=======

        vector<bool> result;
        int num = 0;
        for (int i = 0; i < nums.size(); i++) {
            num = num * 2 + nums[i];
            num = num % 5;
            result.push_back(num == 0);
        }
        return result;

=======

        vector<bool> res;
        int n = nums.size();
        int prefix = 0;
        for (int i = 0; i < n; i++) {
            prefix = (prefix * 2 + nums[i]) % 5;
            res.push_back(prefix == 0);
        }
        return res;

=======

        int n = nums.size();
        vector<bool> result(n, false);
        int prefix = 0;
        for (int i = 0; i < n; ++i) {
            prefix = ((prefix << 1) + nums[i]) % 5;
            result[i] = prefix == 0;
        }
        return result;

=======

        vector<bool> result;
        int sum = 0;
        for (int i = 0; i < nums.size(); ++i) {
            sum = (sum << 1) + nums[i];
            sum = sum % 5;
            result.push_back(sum == 0);
        }
        return result;

=======

        vector<bool> ans;
        int num = 0;
        for (auto n: nums) {
            num = (num << 1) + n;
            num %= 5;
            ans.push_back(num == 0);
        }
        return ans;

=======

        vector<bool> result;
        int i = 0;
        int x = 0;
        for (i = 0; i < nums.size(); i++) {
            x = (x << 1) | nums[i];
            x = x % 5;
            result.push_back(x == 0);
        }
        return result;

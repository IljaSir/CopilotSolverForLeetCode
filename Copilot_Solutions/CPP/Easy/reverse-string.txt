Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int n = s.size();
        for (int i = 0; i < n / 2; i++) {
            swap(s[i], s[n - i - 1]);
        }

=======

        int i = 0, j = s.size() - 1;
        while (i < j) {
            swap(s[i++], s[j--]);
        }

=======

        int i = 0;
        int j = s.size() - 1;
        while(i < j){
            char temp = s[i];
            s[i] = s[j];
            s[j] = temp;
            i++;
            j--;
        }

=======

        int i = 0, j = s.size() - 1;
        while (i < j) {
            swap(s[i], s[j]);
            i++;
            j--;
        }

=======

        int n=s.size();
        for(int i=0;i<n/2;i++){
            char temp=s[i];
            s[i]=s[n-1-i];
            s[n-1-i]=temp;
        }

=======

        int n = s.size();
        int i = 0;
        int j = n-1;
        while(i < j){
            char temp = s[i];
            s[i] = s[j];
            s[j] = temp;
            i++;
            j--;
        }

=======

        int n = s.size();
        for(int i = 0; i < n / 2; i++){
            swap(s[i], s[n - 1 - i]);
        }

=======

        int l=0;
        int r=s.size()-1;
        while(l<r){
            swap(s[l],s[r]);
            l++;
            r--;
        }

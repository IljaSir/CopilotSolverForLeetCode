Synthesizing 10/10 solutions

=======

        vector<int> count(26, INT_MAX);
        for (string word : words) {
            vector<int> cnt(26, 0);
            for (char ch : word) {
                ++cnt[ch - 'a'];
            }
            for (int i = 0; i < 26; ++i) {
                count[i] = min(count[i], cnt[i]);
            }
        }
        vector<string> ans;
        for (int i = 0; i < 26; ++i) {
            for (int j = 0; j < count[i]; ++j) {
                ans.push_back(string(1, i + 'a'));
            }
        }
        return ans;

=======

        int n = words.size();
        vector<int> minFreq(26, INT_MAX);
        for (int i = 0; i < n; i++) {
            vector<int> freq(26, 0);
            for (char c : words[i]) {
                freq[c - 'a']++;
            }
            for (int j = 0; j < 26; j++) {
                minFreq[j] = min(minFreq[j], freq[j]);
            }
        }
        vector<string> ans;
        for (int i = 0; i < 26; i++) {
            for (int j = 0; j < minFreq[i]; j++) {
                ans.push_back(string(1, i + 'a'));
            }
        }
        return ans;

=======

        vector<string> result;
        vector<int> count(26, 0);
        for (char ch : words[0]) {
            count[ch - 'a']++;
        }
        for (int i = 1; i < words.size(); i++) {
            vector<int> countTemp(26, 0);
            for (char ch : words[i]) {
                countTemp[ch - 'a']++;
            }
            for (int i = 0; i < 26; i++) {
                count[i] = min(count[i], countTemp[i]);
            }
        }
        for (int i = 0; i < 26; i++) {
            while (count[i] > 0) {
                result.push_back(string(1, 'a' + i));
                count[i]--;
            }
        }
        return result;

=======

        vector<string> res;
        vector<int> count(26, 0);
        for (int i = 0; i < words.size(); i++) {
            vector<int> temp(26, 0);
            for (int j = 0; j < words[i].size(); j++) {
                temp[words[i][j] - 'a']++;
            }
            for (int j = 0; j < 26; j++) {
                count[j] = min(temp[j], count[j]);
            }
        }
        for (int i = 0; i < 26; i++) {
            if (count[i] > 0) {
                for (int j = 0; j < count[i]; j++) {
                    res.push_back(string(1, 'a' + i));
                }
            }
        }
        return res;

=======

        vector<string> result;
        int n = words.size();
        vector<int> minFreq(26, INT_MAX);
        for (int i = 0; i < n; i++) {
            vector<int> freq(26, 0);
            for (int j = 0; j < words[i].size(); j++) {
                freq[words[i][j] - 'a']++;
            }
            for (int j = 0; j < 26; j++) {
                minFreq[j] = min(minFreq[j], freq[j]);
            }
        }
        for (int i = 0; i < 26; i++) {
            for (int j = 0; j < minFreq[i]; j++) {
                result.push_back(string(1, 'a' + i));
            }
        }
        return result;

=======

        vector<string> result;
        vector<int> count(26, 0);
        for (auto c: words[0]) {
            ++count[c - 'a'];
        }
        for (int i = 1; i < words.size(); ++i) {
            vector<int> temp(26, 0);
            for (auto c: words[i]) {
                ++temp[c - 'a'];
            }
            for (int i = 0; i < 26; ++i) {
                count[i] = min(count[i], temp[i]);
            }
        }
        for (int i = 0; i < 26; ++i) {
            while (count[i]--) {
                result.push_back(string(1, i + 'a'));
            }
        }
        return result;

=======

        vector<string> result;
        int arr[26][100] = {0};
        for (int i = 0; i < words.size(); ++i) {
            for (int j = 0; j < words[i].size(); ++j) {
                arr[words[i][j] - 'a'][i]++;
            }
        }
        for (int i = 0; i < 26; ++i) {
            int min = 100;
            for (int j = 0; j < words.size(); ++j) {
                if (arr[i][j] < min) {
                    min = arr[i][j];
                }
            }
            for (int j = 0; j < min; ++j) {
                string s;
                s.push_back(i + 'a');
                result.push_back(s);
            }
        }
        return result;

=======

        vector<string> res;
        vector<int> cnt(26, INT_MAX);
        for (auto& w : words) {
            vector<int> cnt2(26);
            for (auto c : w) ++cnt2[c - 'a'];
            for (int i = 0; i < 26; ++i) cnt[i] = min(cnt[i], cnt2[i]);
        }
        for (int i = 0; i < 26; ++i) {
            string t(cnt[i], i + 'a');
            res.push_back(t);
        }
        return res;

=======

        vector<string> ans;
        int n = words.size();
        vector<int> minFreq(26, INT_MAX);
        for (auto word : words) {
            vector<int> freq(26, 0);
            for (auto ch : word) {
                freq[ch - 'a']++;
            }
            for (int i = 0; i < 26; i++) {
                minFreq[i] = min(minFreq[i], freq[i]);
            }
        }
        for (int i = 0; i < 26; i++) {
            while (minFreq[i]--) {
                ans.push_back(string(1, i + 'a'));
            }
        }
        return ans;

=======

        vector<string> ans;
        int n = words.size();
        if (n == 0) return ans;
        vector<int> freq(26, 0);
        for (auto c : words[0]) {
            freq[c - 'a']++;
        }
        for (int i = 1; i < n; i++) {
            vector<int> freq2(26, 0);
            for (auto c : words[i]) {
                freq2[c - 'a']++;
            }
            for (int j = 0; j < 26; j++) {
                freq[j] = min(freq[j], freq2[j]);
            }
        }
        for (int i = 0; i < 26; i++) {
            if (freq[i] > 0) {
                string s;
                s.push_back(i + 'a');
                for (int j = 0; j < freq[i]; j++) {
                    ans.push_back(s);
                }
            }
        }
        return ans;

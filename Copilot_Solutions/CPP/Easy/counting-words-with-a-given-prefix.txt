Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int count = 0;
        for (string word : words) {
            if (word.find(pref) == 0) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (auto word : words) {
            if (word.find(pref) == 0) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int i=0; i<words.size(); i++) {
            if (words[i].find(pref) == 0) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < words.size(); i++) {
            if (words[i].size() >= pref.size()) {
                if (words[i].substr(0, pref.size()) == pref) {
                    count++;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (auto word : words) {
            if (word.find(pref) == 0) {
                ++count;
            }
        }
        return count;

=======

        int count = 0;
        for (auto &word: words) {
            if (word.find(pref) == 0) {
                ++count;
            }
        }
        return count;

=======

        int count = 0;
        for (auto& word: words) {
            if (word.find(pref) == 0)
                ++count;
        }
        return count;

Synthesizing 10/10 solutions

=======

        string res;
        for (int i = 0; i < s.size(); ++i) {
            if (i + 2 < s.size() && s[i + 2] == '#') {
                res.push_back('j' + (s[i] - '0') * 10 + s[i + 1] - '1');
                i += 2;
            } else {
                res.push_back('a' + s[i] - '1');
            }
        }
        return res;

=======

        string result;
        for (int i = 0; i < s.size(); ++i) {
            if (i + 2 < s.size() && s[i + 2] == '#') {
                result += 'j' + (s[i] - '0') * 10 + s[i + 1] - '1';
                i += 2;
            } else {
                result += 'a' + s[i] - '1';
            }
        }
        return result;

=======

        string res = "";
        for (int i = 0; i < s.size(); i++) {
            if (i + 2 < s.size() && s[i + 2] == '#') {
                res += (s[i] - '0') * 10 + (s[i + 1] - '0') - 10 + 'a';
                i += 2;
            } else {
                res += s[i] - '0' - 1 + 'a';
            }
        }
        return res;

=======

        string res;
        for (int i = 0; i < s.size(); ++i) {
            if (i < s.size() - 2 && s[i + 2] == '#') {
                res += 'j' + (s[i] - '0') * 10 + s[i + 1] - '1';
                i += 2;
            } else {
                res += 'a' + s[i] - '1';
            }
        }
        return res;

=======

        string result = "";
        for (int i = 0; i < s.size(); i++) {
            if (i + 2 < s.size() && s[i + 2] == '#') {
                result += 'j' + (s[i] - '0') * 10 + s[i + 1] - '1';
                i += 2;
            } else {
                result += 'a' + s[i] - '1';
            }
        }
        return result;

=======

        string res;
        for (int i = s.size() - 1; i >= 0; i--) {
            if (s[i] == '#') {
                int num = (s[i - 2] - '0') * 10 + (s[i - 1] - '0');
                res += (char)('a' + num - 1);
                i -= 2;
            } else {
                res += (char)('a' + s[i] - '1');
            }
        }
        reverse(res.begin(), res.end());
        return res;

=======

        string result;
        for (int i = s.size() - 1; i >= 0; --i) {
            if (s[i] == '#') {
                result.push_back('a' + stoi(s.substr(i - 2, 2)) - 1);
                i -= 2;
            } else {
                result.push_back('a' + s[i] - '1');
            }
        }
        reverse(result.begin(), result.end());
        return result;

=======

        string result;
        for (int i = s.size() - 1; i >= 0; i--) {
            if (s[i] == '#') {
                result += 'a' + stoi(s.substr(i - 2, 2)) - 1;
                i -= 2;
            }
            else {
                result += 'a' + s[i] - '1';
            }
        }
        reverse(result.begin(), result.end());
        return result;

=======

        int n = s.size();
        if (n == 0) return "";
        string res = "";
        for (int i = 0; i < n; i++) {
            if (i + 2 < n && s[i + 2] == '#') {
                res += 'j' + (s[i] - '0') * 10 + s[i + 1] - '1';
                i += 2;
            } else {
                res += 'a' + s[i] - '1';
            }
        }
        return res;

=======

        string res;
        for (int i = s.size() - 1; i >= 0; --i) {
            if (s[i] == '#') {
                res += (char)('a' + (s[i - 1] - '0') + (s[i - 2] - '0') * 10 - 1);
                i -= 2;
            } else {
                res += (char)('a' + s[i] - '0' - 1);
            }
        }
        reverse(res.begin(), res.end());
        return res;

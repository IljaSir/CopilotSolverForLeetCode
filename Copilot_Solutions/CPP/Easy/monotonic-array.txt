Synthesizing 10/10 solutions

=======

        bool increasing = true;
        bool decreasing = true;
        for (int i = 0; i < nums.size() - 1; i++) {
            if (nums[i] > nums[i + 1]) {
                increasing = false;
            }
            if (nums[i] < nums[i + 1]) {
                decreasing = false;
            }
        }
        return increasing || decreasing;

=======

        int n = nums.size();
        bool inc = true, dec = true;
        for (int i = 1; i < n; i++) {
            if (nums[i] < nums[i - 1]) inc = false;
            if (nums[i] > nums[i - 1]) dec = false;
        }
        return inc || dec;

=======

        int n = nums.size();
        int i = 1;
        while (i < n && nums[i] == nums[i - 1]) {
            i++;
        }
        if (i == n) {
            return true;
        }
        int inc = nums[i] > nums[i - 1];
        for (; i < n; i++) {
            if (inc && nums[i] < nums[i - 1]) {
                return false;
            }
            if (!inc && nums[i] > nums[i - 1]) {
                return false;
            }
        }
        return true;

=======

        int n = nums.size();
        if (n == 1) return true;
        bool inc = true, dec = true;
        for (int i = 1; i < n; ++i) {
            if (nums[i] < nums[i-1]) inc = false;
            if (nums[i] > nums[i-1]) dec = false;
        }
        return inc || dec;

=======

        int n = nums.size();
        if (n == 1) return true;
        int i = 0;
        while (i < n - 1 && nums[i] == nums[i + 1]) i++;
        if (i == n - 1) return true;
        bool inc = nums[i] < nums[i + 1];
        for (i = i + 1; i < n - 1; i++) {
            if (inc && nums[i] > nums[i + 1]) return false;
            if (!inc && nums[i] < nums[i + 1]) return false;
        }
        return true;

=======

        int n = nums.size();
        if (n == 1) return true;
        int i = 0;
        while (i < n - 1 && nums[i] == nums[i + 1]) i++;
        if (i == n - 1) return true;
        if (nums[i] < nums[i + 1]) {
            for (int i = 0; i < n - 1; i++) {
                if (nums[i] > nums[i + 1]) return false;
            }
        } else {
            for (int i = 0; i < n - 1; i++) {
                if (nums[i] < nums[i + 1]) return false;
            }
        }
        return true;

=======

        bool inc = true, dec = true;
        int n = nums.size();
        for (int i = 1; i < n; ++i) {
            inc &= nums[i-1] <= nums[i];
            dec &= nums[i-1] >= nums[i];
        }
        return inc || dec;

=======

        int n = nums.size();
        if (n <= 2) return true;
        int i = 0;
        while (i < n-1 && nums[i] == nums[i+1]) ++i;
        if (i == n-1) return true;
        if (nums[i] < nums[i+1]) {
            while (i < n-1 && nums[i] <= nums[i+1]) ++i;
        } else {
            while (i < n-1 && nums[i] >= nums[i+1]) ++i;
        }
        return i == n-1;

=======

        int n = nums.size();
        int i = 0;
        while (i < n-1 && nums[i] == nums[i+1]) i++;
        if (i == n-1) return true;
        bool increasing = nums[i] < nums[i+1];
        for (int j = i+1; j < n-1; j++) {
            if (increasing && nums[j] > nums[j+1]) return false;
            if (!increasing && nums[j] < nums[j+1]) return false;
        }
        return true;

=======

        int n = nums.size();
        if (n <= 2) {
            return true;
        }
        bool inc = nums[0] <= nums[1];
        for (int i = 2; i < n; i++) {
            if (inc) {
                if (nums[i] < nums[i - 1]) {
                    return false;
                }
            } else {
                if (nums[i] > nums[i - 1]) {
                    return false;
                }
            }
        }
        return true;

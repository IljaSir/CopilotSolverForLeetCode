Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int matches = 0;
        while (n > 1) {
            if (n % 2 == 0) {
                matches += n / 2;
                n /= 2;
            } else {
                matches += (n - 1) / 2;
                n = (n - 1) / 2 + 1;
            }
        }
        return matches;

=======

        int matches = 0;
        while (n > 1) {
            if (n % 2 == 0) {
                matches += n / 2;
                n = n / 2;
            } else {
                matches += (n - 1) / 2;
                n = (n - 1) / 2 + 1;
            }
        }
        return matches;

=======

        int res = 0;
        while (n > 1) {
            if (n % 2 == 0) {
                res += n / 2;
                n = n / 2;
            } else {
                res += (n - 1) / 2;
                n = (n - 1) / 2 + 1;
            }
        }
        return res;

=======

        int count = 0;
        while (n > 1) {
            if (n % 2 == 0) {
                count += n / 2;
                n = n / 2;
            } else {
                count += (n - 1) / 2;
                n = (n - 1) / 2 + 1;
            }
        }
        return count;

=======

        int res = 0;
        while (n > 1) {
            res += n / 2;
            n = n / 2 + n % 2;
        }
        return res;

=======

        int ans = 0;
        while (n > 1) {
            ans += n / 2;
            n = n / 2 + n % 2;
        }
        return ans;

=======

        int m = 0;
        while (n > 1) {
            if (n % 2 == 0) {
                m += n / 2;
                n = n / 2;
            } else {
                m += (n - 1) / 2;
                n = (n - 1) / 2 + 1;
            }
        }
        return m;

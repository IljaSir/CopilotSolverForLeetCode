Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int sum = 0;
        int count = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] % 2 == 0 && nums[i] % 3 == 0) {
                sum += nums[i];
                count++;
            }
        }
        if (count == 0) {
            return 0;
        }
        return sum / count;

=======

        int sum = 0;
        int count = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] % 2 == 0 && nums[i] % 3 == 0) {
                sum += nums[i];
                count++;
            }
        }
        if (count == 0) return 0;
        return sum / count;

=======

        int sum = 0;
        int count = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] % 2 == 0 && nums[i] % 3 == 0) {
                sum += nums[i];
                count++;
            }
        }
        return sum / count;

=======

        int sum = 0;
        int count = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] % 2 == 0 && nums[i] % 3 == 0) {
                sum += nums[i];
                count++;
            }
        }
        if (count == 0) {
            return 0;
        } else {
            return sum / count;
        }

=======

        int sum = 0;
        int count = 0;
        for (auto num : nums) {
            if (num % 2 == 0 && num % 3 == 0) {
                sum += num;
                count++;
            }
        }
        return sum / count;

=======

        int sum = 0, count = 0;
        for(int i = 0; i < nums.size(); i++) {
            if(nums[i] % 2 == 0 && nums[i] % 3 == 0) {
                sum += nums[i];
                count++;
            }
        }
        return count == 0 ? 0 : sum / count;

=======

        int sum = 0;
        int cnt = 0;
        for (auto n : nums) {
            if (n % 2 == 0 && n % 3 == 0) {
                sum += n;
                ++cnt;
            }
        }
        if (cnt == 0) {
            return 0;
        }
        return sum / cnt;

Synthesizing 10/10 solutions

=======

        int hh = (time[0] - '0') * 10 + (time[1] - '0');
        int mm = (time[3] - '0') * 10 + (time[4] - '0');
        if (hh < 0 || hh > 23) return 0;
        if (mm < 0 || mm > 59) return 0;
        return 1;
    }
    int numberOfValidClocks(string time) {
        int res = 0;
        for (int i = 0; i < 10; ++i) {
            for (int j = 0; j < 10; ++j) {
                for (int k = 0; k < 10; ++k) {
                    for (int l = 0; l < 10; ++l) {
                        time[0] = '0' + i;
                        time[1] = '0' + j;
                        time[3] = '0' + k;
                        time[4] = '0' + l;
                        res += countTime(time);
                    }
                }
            }
        }
        return res;

=======

        int hh = (time[0] - '0') * 10 + (time[1] - '0');
        int mm = (time[3] - '0') * 10 + (time[4] - '0');
        return hh * 60 + mm;
    }
    int numberOfValidClockTimes(string time) {
        int hh = (time[0] - '0') * 10 + (time[1] - '0');
        int mm = (time[3] - '0') * 10 + (time[4] - '0');
        int hhMax = 23;
        int mmMax = 59;
        int hhMin = 0;
        int mmMin = 0;
        if (time[0] == '?') {
            if (time[1] == '?') {
                hhMax = 23;
            } else {
                if (time[1] <= '3') {
                    hhMax = 19;
                } else {
                    hhMax = 9;
                }
            }
        } else {
            if (time[1] == '?') {
                if (time[0] <= '1') {
                    hhMax = 19;
                } else {
                    hhMax = 9;
                }
            }
        }
        if (time[3] == '?') {
            if (time[4] == '?') {
                mmMax = 59;
            } else {
                mmMax = 50 + time[4] - '0';
            }
        } else {
            if (time[4] == '?') {
                mmMax = 50 + time[3] - '0';
            }
        }
        if (time[0] == '?') {
            if (time[1] == '?') {
                hhMin = 0;
            } else {
                if (time[1] <= '3') {
                    hhMin = 0;
                } else {
                    hhMin = 10;
                }
            }
        } else {
            if (time[1] == '?') {
                if (time[0] <= '1') {
                    hhMin = 0;
                } else {
                    hhMin = 10;
                }
            }
        }
        if (time[3] == '?') {
            if (time[4] == '?') {

=======

        int h = (time[0] - '0') * 10 + (time[1] - '0');
        int m = (time[3] - '0') * 10 + (time[4] - '0');
        return h * 60 + m;
    }
    int countDigitOne(int n) {
        int res = 0;
        for (long long i = 1; i <= n; i *= 10) {
            long long divider = i * 10;
            res += (n / divider) * i + min(max(n % divider - i + 1, 0LL), i);
        }
        return res;
    }
    int numberOfValidClockTimes(string time) {
        int res = 0;
        int cur = countTime(time);
        int h = (time[0] - '0') * 10 + (time[1] - '0');
        int m = (time[3] - '0') * 10 + (time[4] - '0');
        if (time[0] == '?') {
            if (time[1] == '?') {
                res += 24 * 60;
            } else {
                if (h <= 23) {
                    res += 60;
                }
                if (h <= 2) {
                    res += 60;
                }
            }
        } else {
            if (time[1] == '?') {
                if (h <= 23) {
                    res += 10;
                }
                if (h <= 2) {
                    res += 10;
                }
            } else {
                if (h <= 23) {
                    res += 1;
                }
                if (h <= 2) {
                    res += 1;
                }
            }
        }
        if (time[3] == '?') {
            if (time[4] == '?') {
                res += 60;
            } else {
                if (m <= 59) {
                    res += 1;
                }
            }
        } else {
            if (time[4] == '?') {
                if (m <= 59) {
                    res += 1;
                }
            } else {
                if (m <= 59) {
                    res += 1;
                }
            }
        }
        int h1 = (time

=======

        int h = (time[0] - '0') * 10 + (time[1] - '0');
        int m = (time[3] - '0') * 10 + (time[4] - '0');
        if (h >= 0 && h <= 23 && m >= 0 && m <= 59) {
            return 1;
        }
        return 0;
    }
    int countValidTime(string time) {
        int count = 0;
        int h = (time[0] - '0') * 10 + (time[1] - '0');
        int m = (time[3] - '0') * 10 + (time[4] - '0');
        if (time[0] == '?' && time[1] == '?') {
            count += 24 * 60;
        } else if (time[0] == '?') {
            if (h >= 0 && h <= 9) {
                count += 60;
            } else if (h >= 10 && h <= 23) {
                count += 40;
            }
        } else if (time[1] == '?') {
            if (h >= 0 && h <= 1) {
                count += 60;
            } else if (h >= 20 && h <= 23) {
                count += 40;
            }
        }
        if (time[3] == '?' && time[4] == '?') {
            count += 24 * 60;
        } else if (time[3] == '?') {
            if (m >= 0 && m <= 9) {
                count += 10;
            } else if (m >= 10 && m <= 59) {
                count += 40;
            }
        } else if (time[4] == '?') {
            if (m >= 0 && m <= 5) {
                count += 10;
            } else if (m >= 6 && m <= 59) {
                count += 40;
            }
        }
        return count;

=======

        int hour = (time[0] - '0') * 10 + time[1] - '0';
        int minute = (time[3] - '0') * 10 + time[4] - '0';
        if (hour < 0 || hour > 23 || minute < 0 || minute > 59) {
            return 0;
        }
        return 1;
    }
    int numberOfValidClockTimes(string time) {
        int count = 0;
        for (int i = 0; i < 10; i++) {
            time[0] = i + '0';
            for (int j = 0; j < 10; j++) {
                time[1] = j + '0';
                for (int k = 0; k < 6; k++) {
                    time[3] = k + '0';
                    for (int l = 0; l < 10; l++) {
                        time[4] = l + '0';
                        count += countTime(time);
                    }
                }
            }
        }
        return count;

=======

        int h = stoi(time.substr(0, 2));
        int m = stoi(time.substr(3, 2));
        if (h < 0 || h > 23 || m < 0 || m > 59) {
            return 0;
        }
        return 1;
    }
    
    int countValidTime(string time) {
        int cnt = 0;
        for (int i = 0; i < 24; i++) {
            for (int j = 0; j < 60; j++) {
                string h = (i < 10) ? "0" + to_string(i) : to_string(i);
                string m = (j < 10) ? "0" + to_string(j) : to_string(j);
                string tmp = h + ":" + m;
                if (tmp[0] == time[0] || time[0] == '?') {
                    if (tmp[1] == time[1] || time[1] == '?') {
                        if (tmp[3] == time[3] || time[3] == '?') {
                            if (tmp[4] == time[4] || time[4] == '?') {
                                cnt++;
                            }
                        }
                    }
                }
            }
        }
        return cnt;

=======

        int h = stoi(time.substr(0, 2));
        int m = stoi(time.substr(3, 2));
        if (h >= 0 && h <= 23 && m >= 0 && m <= 59) {
            return 1;
        }
        return 0;
    }
    int countValidTime(string time) {
        int count = 0;
        for (int i = 0; i < 24; i++) {
            for (int j = 0; j < 60; j++) {
                string h = to_string(i);
                if (h.length() == 1) {
                    h = "0" + h;
                }
                string m = to_string(j);
                if (m.length() == 1) {
                    m = "0" + m;
                }
                if (time[0] == '?' || time[0] == h[0]) {
                    if (time[1] == '?' || time[1] == h[1]) {
                        if (time[3] == '?' || time[3] == m[0]) {
                            if (time[4] == '?' || time[4] == m[1]) {
                                count++;
                            }
                        }
                    }
                }
            }
        }
        return count;
    }
    int numberOfValidClockTimes(string time) {
        int count = 0;
        for (int i = 0; i < time.length(); i++) {
            if (time[i] == '?') {
                time[i] = '0';
                count += countTime(time);
                time[i] = '1';
                count += countTime(time);
                time[i] = '2';
                count += countTime(time);
                time[i] = '3';
                count += countTime(time);
                time[i] = '4';
                count += countTime(time);
                time[i] = '5';
                count += countTime(time);
                time[i] = '6';
                count += countTime(time);
                time[i] = '7';
                count += countTime(time);
                time[i] = '8';
                count += countTime(time);
                time[i] = '9';
                count += countTime(time);
                time[i] = '?';
            }
        }
        return count;

=======

        int h = (time[0]-'0')*10 + (time[1]-'0');
        int m = (time[3]-'0')*10 + (time[4]-'0');
        if (h>=24 || m>=60) return 0;
        return 1;
    }
    int countValidTime(string time) {
        if (time[0]=='?' && time[1]=='?') {
            time[0]='2';
            time[1]='3';
        } else if (time[0]=='?') {
            if (time[1] > '3') {
                time[0]='1';
            } else {
                time[0]='2';
            }
        } else if (time[1]=='?') {
            if (time[0]=='2') {
                time[1]='3';
            } else {
                time[1]='9';
            }
        }
        if (time[3]=='?') {
            time[3]='5';
        }
        if (time[4]=='?') {
            time[4]='9';
        }
        return countTime(time);
    }
    int countValidTime2(string time) {
        if (time[0]=='?') {
            if (time[1]=='?' || time[1] <= '3') {
                time[0]='2';
            } else {
                time[0]='1';
            }
        }
        if (time[1]=='?') {
            if (time[0]=='2') {
                time[1]='3';
            } else {
                time[1]='9';
            }
        }
        if (time[3]=='?') {
            time[3]='5';
        }
        if (time[4]=='?') {
            time[4]='9';
        }
        return countTime(time);
    }
    int countValidTime3(string time) {
        if (time[0]=='?') {
            time[0]='2';
        }
        if (time[1]=='?') {
            if (time[0]=='2') {
                time[1]='3';
            } else {
                time[1]='9';
            }
        }
        if (time[3]=='?') {
            time[3]='5';
        }
        if (time[4]=='?') {
            time[4]='9';
        }
        return countTime(time

=======

        int count = 0;
        for (int i = 0; i < time.size(); i++) {
            if (time[i] == '?') {
                if (i == 0) {
                    if (time[1] == '?' || time[1] < '4') {
                        count += 2;
                    } else {
                        count += 1;
                    }
                } else if (i == 1) {
                    if (time[0] == '?' || time[0] < '2') {
                        count += 4;
                    } else {
                        count += 3;
                    }
                } else if (i == 3) {
                    count += 5;
                } else if (i == 4) {
                    count += 9;
                }
            }
        }
        return count;
    }
    int numberOfValidClockTimes(string time) {
        int count = countTime(time);
        for (int i = 0; i < time.size(); i++) {
            if (time[i] == '?') {
                if (i == 0) {
                    if (time[1] == '?' || time[1] < '4') {
                        count += countTime(time.substr(0, i) + "1" + time.substr(i + 1));
                        count += countTime(time.substr(0, i) + "2" + time.substr(i + 1));
                    } else {
                        count += countTime(time.substr(0, i) + "1" + time.substr(i + 1));
                    }
                } else if (i == 1) {
                    if (time[0] == '?' || time[0] < '2') {
                        count += countTime(time.substr(0, i) + "3" + time.substr(i + 1));
                        count += countTime(time.substr(0, i) + "4" + time.substr(i + 1));
                        count += countTime(time.substr(0, i) + "5" + time.substr(i + 1));
                        count += countTime(time.substr(0, i) + "6" + time.substr(i + 1));
                    } else {
                        count += countTime(time.substr(0, i) + "3" + time.substr(i + 1));
                        count += countTime(time.substr(0, i) + "4" + time.substr(i

=======

        int count = 0;
        if (time[0] == '?' && time[1] == '?') {
            count += 24 * 60;
        } else if (time[0] == '?') {
            count += ((time[1] - '0') < 4 ? 24 : 16) * 60;
        } else if (time[1] == '?') {
            count += (time[0] == '2' ? 4 : 10) * 60;
        } else {
            count += 60;
        }
        if (time[3] == '?' && time[4] == '?') {
            count += 24 * 60;
        } else if (time[3] == '?') {
            count += 6 * 10;
        } else if (time[4] == '?') {
            count += 10;
        }
        return count;
    }
    int numberOfValidClockTimes(string time) {
        int count = 0;
        for (int i = 0; i < 5; i++) {
            if (time[i] == '?') {
                for (int j = 0; j < 10; j++) {
                    time[i] = j + '0';
                    count += countTime(time);
                }
                time[i] = '?';
                break;
            }
        }
        return count;

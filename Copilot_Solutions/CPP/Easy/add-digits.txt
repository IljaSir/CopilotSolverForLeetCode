Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if (num == 0) {
            return 0;
        }
        if (num % 9 == 0) {
            return 9;
        }
        return num % 9;

=======

        if (num == 0) return 0;
        if (num % 9 == 0) return 9;
        return num % 9;

=======

        return 1 + (num - 1) % 9;

=======

        return (num - 1) % 9 + 1;

=======

        if (num == 0) return 0;
        return num % 9 == 0 ? 9 : num % 9;

=======

        int sum = 0;
        while (num > 0) {
            sum += num % 10;
            num /= 10;
        }
        if (sum < 10) {
            return sum;
        }
        return addDigits(sum);

=======

        int sum = 0;
        while (num > 0) {
            sum += num % 10;
            num /= 10;
        }
        if (sum > 9) {
            sum = addDigits(sum);
        }
        return sum;

=======

        if (num == 0) return 0;
        return (num - 1) % 9 + 1;

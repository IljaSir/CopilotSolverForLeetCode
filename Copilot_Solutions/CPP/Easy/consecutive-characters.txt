Synthesizing 10/10 solutions

=======

        int count = 1;
        int max = 1;
        for (int i = 0; i < s.length() - 1; i++) {
            if (s[i] == s[i + 1]) {
                count++;
            } else {
                if (count > max) {
                    max = count;
                }
                count = 1;
            }
        }
        return max > count ? max : count;

=======

        int max = 1;
        int count = 1;
        for (int i = 1; i < s.length(); i++) {
            if (s[i] == s[i-1]) {
                count++;
                if (count > max) {
                    max = count;
                }
            } else {
                count = 1;
            }
        }
        return max;

=======

        int max = 1;
        int count = 1;
        for (int i = 1; i < s.size(); i++) {
            if (s[i] == s[i - 1]) {
                count++;
            } else {
                if (count > max) {
                    max = count;
                }
                count = 1;
            }
        }
        if (count > max) {
            max = count;
        }
        return max;

=======

        int ans = 1;
        int count = 1;
        for (int i = 1; i < s.length(); i++) {
            if (s[i] == s[i - 1]) {
                count++;
                ans = max(ans, count);
            } else {
                count = 1;
            }
        }
        return ans;

=======

        int ans = 0;
        for (int i = 0; i < s.size(); ++i) {
            int j = i;
            while (j < s.size() && s[j] == s[i]) {
                ++j;
            }
            ans = max(ans, j - i);
            i = j - 1;
        }
        return ans;

=======

        int maxPower = 1;
        int currentPower = 1;
        for (int i = 1; i < s.length(); ++i) {
            if (s[i] == s[i-1]) {
                currentPower++;
            } else {
                currentPower = 1;
            }
            maxPower = max(maxPower, currentPower);
        }
        return maxPower;

=======

        int max = 0;
        int count = 1;
        for(int i = 1; i < s.size(); i++){
            if(s[i] == s[i-1]){
                count++;
            }else{
                if(count > max){
                    max = count;
                }
                count = 1;
            }
        }
        if(count > max){
            max = count;
        }
        return max;

=======

        int count=1;
        int max=0;
        for(int i=0;i<s.size()-1;i++){
            if(s[i]==s[i+1]){
                count++;
            }
            else{
                if(count>max){
                    max=count;
                }
                count=1;
            }
        }
        if(count>max){
            max=count;
        }
        return max;

=======

        int ans = 1;
        int cur = 1;
        for(int i=1; i<s.size(); i++){
            if(s[i] == s[i-1]){
                cur++;
            }
            else{
                cur = 1;
            }
            ans = max(ans, cur);
        }
        return ans;

=======

        int count = 0, max = 0;
        char c = 0;
        for (auto i : s) {
            if (i == c) {
                count++;
                if (count > max) max = count;
            } else {
                c = i;
                count = 1;
            }
        }
        return max;

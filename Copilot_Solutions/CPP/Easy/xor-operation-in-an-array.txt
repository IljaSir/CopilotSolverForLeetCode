Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int res = 0;
        for (int i = 0; i < n; i++) {
            res ^= start + 2 * i;
        }
        return res;

=======

        int res = 0;
        for (int i = 0; i < n; i++) {
            res ^= (start + 2 * i);
        }
        return res;

=======

        int res = 0;
        for (int i = 0; i < n; ++i) {
            res ^= (start + 2 * i);
        }
        return res;

=======

        int result = 0;
        for (int i = 0; i < n; i++) {
            result ^= start + 2 * i;
        }
        return result;

=======

        int result = 0;
        for (int i = 0; i < n; ++i) {
            result ^= (start + 2 * i);
        }
        return result;

=======

        int res = start;
        for (int i = 1; i < n; i++) {
            res ^= start + 2 * i;
        }
        return res;

=======

        int ret = 0;
        for (int i = 0; i < n; i++) {
            ret ^= start + 2 * i;
        }
        return ret;

=======

        int result = start;
        for (int i = 1; i < n; i++) {
            result ^= start + (2 * i);
        }
        return result;

=======

        int temp = start;
        for (int i = 1; i < n; i++) {
            temp ^= start + 2 * i;
        }
        return temp;

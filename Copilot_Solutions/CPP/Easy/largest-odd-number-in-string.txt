Synthesizing 10/10 solutions (Duplicates hidden)

=======

        for (int i = num.size() - 1; i >= 0; i--) {
            if ((num[i] - '0') % 2 == 1) {
                return num.substr(0, i + 1);
            }
        }
        return "";

=======

        int n = num.length();
        for (int i = n - 1; i >= 0; i--) {
            if ((num[i] - '0') % 2 == 1) {
                return num.substr(0, i + 1);
            }
        }
        return "";

=======

        int n = num.size();
        for (int i = n - 1; i >= 0; i--) {
            if ((num[i] - '0') % 2 != 0) {
                return num.substr(0, i + 1);
            }
        }
        return "";

=======

        int i = num.size() - 1;
        while (i >= 0 && (num[i] - '0') % 2 == 0) {
            i--;
        }
        return num.substr(0, i + 1);

=======

        for (int i = num.size()-1; i >= 0; i--) {
            if ((num[i]-'0') & 1) {
                return num.substr(0, i+1);
            }
        }
        return "";

=======

        int i;
        for (i = num.length() - 1; i >= 0; i--) {
            if ((num[i] - '0') % 2 == 1) {
                break;
            }
        }
        return num.substr(0, i + 1);

=======

        int n = num.size();
        for (int i = n-1; i >= 0; i--) {
            if ((num[i]-'0') % 2 == 1) {
                return num.substr(0, i+1);
            }
        }
        return "";

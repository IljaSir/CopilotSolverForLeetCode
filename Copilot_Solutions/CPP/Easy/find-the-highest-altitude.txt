Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int max = 0;
        int sum = 0;
        for (int i = 0; i < gain.size(); i++) {
            sum += gain[i];
            if (sum > max) {
                max = sum;
            }
        }
        return max;

=======

        int max = 0;
        int cur = 0;
        for (int i = 0; i < gain.size(); i++) {
            cur += gain[i];
            if (cur > max) {
                max = cur;
            }
        }
        return max;

=======

        int max = 0;
        int alt = 0;
        for (int i = 0; i < gain.size(); i++) {
            alt += gain[i];
            if (alt > max) {
                max = alt;
            }
        }
        return max;

=======

        int max = 0, sum = 0;
        for (int i = 0; i < gain.size(); i++) {
            sum += gain[i];
            if (sum > max) max = sum;
        }
        return max;

=======

        int maxAltitude = 0;
        int currentAltitude = 0;
        for (int i = 0; i < gain.size(); i++) {
            currentAltitude += gain[i];
            maxAltitude = max(maxAltitude, currentAltitude);
        }
        return maxAltitude;

=======

        int maxAlt = 0;
        int curAlt = 0;
        for (int i = 0; i < gain.size(); i++) {
            curAlt += gain[i];
            maxAlt = max(maxAlt, curAlt);
        }
        return maxAlt;

=======

        int sum = 0, max = 0;
        for (int i = 0; i < gain.size(); i++) {
            sum += gain[i];
            if (sum > max) {
                max = sum;
            }
        }
        return max;

=======

        int maxAltitude = 0;
        int altitude = 0;
        for (int i = 0; i < gain.size(); i++) {
            altitude += gain[i];
            if (altitude > maxAltitude) {
                maxAltitude = altitude;
            }
        }
        return maxAltitude;

=======

        int maxAlt = 0, currentAlt = 0;
        for (int i = 0; i < gain.size(); i++) {
            currentAlt += gain[i];
            if (currentAlt > maxAlt) {
                maxAlt = currentAlt;
            }
        }
        return maxAlt;

Synthesizing 10/10 solutions

=======

        int max = -1;
        int temp = 0;
        for (int i = arr.size() - 1; i >= 0; i--) {
            temp = arr[i];
            arr[i] = max;
            if (temp > max) {
                max = temp;
            }
        }
        return arr;

=======

        int n = arr.size();
        vector<int> res(n);
        res[n-1] = -1;
        for (int i = n-2; i >= 0; i--) {
            res[i] = max(res[i+1], arr[i+1]);
        }
        return res;

=======

        int n = arr.size();
        vector<int> res(n);
        res[n-1] = -1;
        for (int i = n - 2; i >= 0; --i) {
            res[i] = max(arr[i+1], res[i+1]);
        }
        return res;

=======

        int n = arr.size();
        int max = -1;
        for (int i = n - 1; i >= 0; --i) {
            int t = arr[i];
            arr[i] = max;
            if (t > max) {
                max = t;
            }
        }
        return arr;

=======

        int n = arr.size();
        int max = -1;
        for (int i = n - 1; i >= 0; --i) {
            int t = arr[i];
            arr[i] = max;
            if (t > max) max = t;
        }
        return arr;

=======

        int n = arr.size();
        vector<int> ans(n);
        ans[n-1] = -1;
        for (int i = n-2; i >= 0; i--) {
            ans[i] = max(ans[i+1], arr[i+1]);
        }
        return ans;

=======

        int n = arr.size();
        vector<int> ans(n, -1);
        for (int i = 0; i < n - 1; i++) {
            ans[i] = *max_element(arr.begin() + i + 1, arr.end());
        }
        return ans;

=======

        int n = arr.size();
        vector<int> res(n);
        res[n-1] = -1;
        for(int i = n-2; i >= 0; i--){
            res[i] = max(arr[i+1],res[i+1]);
        }
        return res;

=======

        int n = arr.size();
        int max = arr[n-1];
        arr[n-1] = -1;
        for(int i=n-2; i>=0; i--){
            int tmp = arr[i];
            arr[i] = max;
            if(tmp>max){
                max = tmp;
            }
        }
        return arr;

=======

        int size = arr.size();
        int max = arr[size-1];
        arr[size-1] = -1;
        for (int i = size-2; i >= 0; i--) {
            int temp = arr[i];
            arr[i] = max;
            if (temp > max) {
                max = temp;
            }
        }
        return arr;

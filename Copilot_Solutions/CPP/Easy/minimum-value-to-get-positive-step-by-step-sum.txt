Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int min = 0;
        int sum = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            if (sum < min) {
                min = sum;
            }
        }
        return 1 - min;

=======

        int sum = 0;
        int min = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            if (sum < min) {
                min = sum;
            }
        }
        return 1 - min;

=======

        int sum = 0;
        int minSum = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            minSum = min(minSum, sum);
        }
        return 1 - minSum;

=======

        int sum = 0, min = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            if (sum < min) {
                min = sum;
            }
        }
        return 1 - min;

=======

        int sum = 0, min = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            if (sum < min) min = sum;
        }
        return 1 - min;

=======

        int sum = 0, min = 0;
        for (int i = 0; i < nums.size(); ++i) {
            sum += nums[i];
            if (sum < min) {
                min = sum;
            }
        }
        return 1 - min;

=======

        int min = 0;
        int sum = 0;
        int n = nums.size();
        for (int i = 0; i < n; i++) {
            sum += nums[i];
            if (sum < min) {
                min = sum;
            }
        }
        int ans = 1 - min;
        if (ans < 1) {
            ans = 1;
        }
        return ans;

=======

        int min = 0, sum = 0;
        for(int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            if(sum < min) min = sum;
        }
        return 1 - min;

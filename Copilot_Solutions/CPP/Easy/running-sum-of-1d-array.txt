Synthesizing 10/10 solutions (Duplicates hidden)

=======

        for (int i = 1; i < nums.size(); i++) {
            nums[i] += nums[i - 1];
        }
        return nums;

=======

        vector<int> result;
        int sum = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            result.push_back(sum);
        }
        return result;

=======

        vector<int> res;
        int sum = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            res.push_back(sum);
        }
        return res;

=======

        int n = nums.size();
        vector<int> res(n);
        res[0] = nums[0];
        for (int i = 1; i < n; ++i) {
            res[i] = res[i - 1] + nums[i];
        }
        return res;

=======

        int sum = 0;
        vector<int> res;
        for(int i = 0; i < nums.size(); i++){
            sum += nums[i];
            res.push_back(sum);
        }
        return res;

=======

        vector<int> res(nums.size());
        res[0] = nums[0];
        for(int i=1; i<nums.size(); i++) {
            res[i] = res[i-1] + nums[i];
        }
        return res;

=======

        vector<int> res;
        for (int i = 0; i < nums.size(); ++i) {
            if (i == 0) {
                res.push_back(nums[i]);
            } else {
                res.push_back(res[i - 1] + nums[i]);
            }
        }
        return res;

=======

        int n = nums.size();
        vector<int> res(n);
        res[0] = nums[0];
        for(int i=1; i<n; i++) {
            res[i] = res[i-1] + nums[i];
        }
        return res;

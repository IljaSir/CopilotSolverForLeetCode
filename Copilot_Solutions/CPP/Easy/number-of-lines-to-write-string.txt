Synthesizing 10/10 solutions

=======

        int sum = 0;
        int lines = 1;
        for (int i = 0; i < s.length(); i++) {
            sum += widths[s[i] - 'a'];
            if (sum > 100) {
                lines++;
                sum = widths[s[i] - 'a'];
            }
        }
        return {lines, sum};

=======

        int lines = 1;
        int width = 0;
        for (auto c : s) {
            int w = widths[c - 'a'];
            if (width + w > 100) {
                lines++;
                width = w;
            } else {
                width += w;
            }
        }
        return {lines, width};

=======

        int line = 1;
        int width = 0;
        for (int i = 0; i < s.length(); i++) {
            int w = widths[s[i] - 'a'];
            if (width + w > 100) {
                line++;
                width = 0;
            }
            width += w;
        }
        return {line, width};

=======

        int line = 1;
        int width = 0;
        for (int i = 0; i < s.size(); ++i) {
            int w = widths[s[i] - 'a'];
            if (width + w <= 100) {
                width += w;
            } else {
                ++line;
                width = w;
            }
        }
        return {line, width};

=======

        int line = 1;
        int len = 0;
        for (int i = 0; i < s.length(); i++) {
            int w = widths[s[i] - 'a'];
            if (len + w > 100) {
                line++;
                len = w;
            } else {
                len += w;
            }
        }
        return vector<int>{line, len};

=======

        int count = 0;
        int width = 0;
        for (int i = 0; i < s.size(); i++) {
            int w = widths[s[i] - 'a'];
            if (width + w > 100) {
                count++;
                width = w;
            } else {
                width += w;
            }
        }
        return {count + 1, width};

=======

        int line = 1;
        int sum = 0;
        for (char c : s) {
            int w = widths[c - 'a'];
            sum += w;
            if (sum > 100) {
                line++;
                sum = w;
            }
        }
        return {line, sum};

=======

        int line = 1;
        int pixel = 0;
        for (auto c : s) {
            int w = widths[c - 'a'];
            if (pixel + w > 100) {
                line++;
                pixel = w;
            } else {
                pixel += w;
            }
        }
        return {line, pixel};

=======

        int line = 1, lastLine = 0;
        for (auto c : s) {
            int w = widths[c - 'a'];
            if (lastLine + w > 100) {
                line++;
                lastLine = w;
            } else {
                lastLine += w;
            }
        }
        return {line, lastLine};

=======

        int lines = 1;
        int lineLength = 0;
        for (int i = 0; i < s.size(); i++) {
            int charWidth = widths[s[i] - 'a'];
            if (lineLength + charWidth > 100) {
                lines++;
                lineLength = charWidth;
            } else {
                lineLength += charWidth;
            }
        }
        return {lines, lineLength};

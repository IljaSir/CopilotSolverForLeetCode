Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int i = 0, j = 0;
        while (i < s.size() && j < t.size()) {
            if (s[i] == t[j]) {
                i++;
            }
            j++;
        }
        return i == s.size();

=======

        int i = 0, j = 0;
        while (i < s.size() && j < t.size()) {
            if (s[i] == t[j]) {
                ++i;
            }
            ++j;
        }
        return i == s.size();

=======

        int i = 0, j = 0;
        while (i < s.size() && j < t.size()) {
            if (s[i] == t[j]) {
                i++;
                j++;
            } else {
                j++;
            }
        }
        return i == s.size();

=======

        int i = 0, j = 0;
        while(i < s.length() && j < t.length()) {
            if(s[i] == t[j]) {
                i++;
            }
            j++;
        }
        return i == s.length();

=======

        int n = s.length();
        int m = t.length();
        int i = 0, j = 0;
        while(i < n && j < m){
            if(s[i] == t[j]){
                i++;
                j++;
            }else{
                j++;
            }
        }
        return i == n;

=======

        int m = s.length(), n = t.length();
        int i = 0, j = 0;
        while(i < m && j < n){
            if(s[i] == t[j]){
                i++;
                j++;
            }else{
                j++;
            }
        }
        return i == m;

=======

        int i=0,j=0;
        while(i<s.length() && j<t.length()){
            if(s[i]==t[j]) i++;
            j++;
        }
        return i==s.length();

=======

        int m = s.length();
        int n = t.length();
        int j = 0;
        for(int i = 0; i < n; i++){
            if(s[j] == t[i]){
                j++;
            }
        }
        return j == m;

=======

        int i=0,j=0;
        for(;i<s.size() && j<t.size();j++){
            if(s[i]==t[j]){
                i++;
            }
        }
        return i==s.size();

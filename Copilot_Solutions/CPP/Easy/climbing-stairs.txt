Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if (n == 1) return 1;
        if (n == 2) return 2;
        int a = 1, b = 2;
        for (int i = 3; i <= n; i++) {
            int c = a + b;
            a = b;
            b = c;
        }
        return b;

=======

        if (n == 1) return 1;
        if (n == 2) return 2;
        int a = 1, b = 2, c;
        for (int i = 3; i <= n; ++i) {
            c = a + b;
            a = b;
            b = c;
        }
        return c;

=======

        int a = 0, b = 1, c;
        for (int i = 0; i < n; i++) {
            c = a + b;
            a = b;
            b = c;
        }
        return c;

=======

        if (n == 1) return 1;
        if (n == 2) return 2;
        int a = 1, b = 2, c = 0;
        for (int i = 3; i <= n; i++) {
            c = a + b;
            a = b;
            b = c;
        }
        return c;

=======

        int a = 1, b = 1;
        for (int i = 1; i < n; ++i) {
            int c = a + b;
            a = b;
            b = c;
        }
        return b;

=======

        int dp[n+1];
        dp[0] = 1;
        dp[1] = 1;
        for(int i=2; i<=n; i++) {
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n];

=======

        int a = 1, b = 1;
        for (int i = 2; i <= n; ++i) {
            int tmp = a + b;
            a = b;
            b = tmp;
        }
        return b;

=======

        if (n == 1) return 1;
        if (n == 2) return 2;
        int a = 1, b = 2;
        int c = 0;
        for (int i = 2; i < n; ++i) {
            c = a + b;
            a = b;
            b = c;
        }
        return c;

=======

        if(n==0||n==1||n==2)
            return n;
        int a=1,b=2,c=0;
        for(int i=3;i<=n;i++)
        {
            c=a+b;
            a=b;
            b=c;
        }
        return c;

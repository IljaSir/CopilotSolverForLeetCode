Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int sum = 0;
        int sign = 1;
        while (n > 0) {
            sum += sign * (n % 10);
            sign *= -1;
            n /= 10;
        }
        return sum;

=======

        int sum = 0;
        bool positive = true;
        while (n > 0) {
            if (positive) {
                sum += n % 10;
            } else {
                sum -= n % 10;
            }
            positive = !positive;
            n /= 10;
        }
        return sum;

=======

        int sum = 0;
        int sign = 1;
        while (n > 0) {
            sum += sign * (n % 10);
            sign = -sign;
            n /= 10;
        }
        return sum;

=======

        int sum = 0;
        int sign = 1;
        while(n){
            sum += sign * (n % 10);
            sign = -sign;
            n /= 10;
        }
        return sum;

=======

        int sum = 0;
        while (n) {
            int d = n % 10;
            if (sum > 0)
                sum -= d;
            else
                sum += d;
            n /= 10;
        }
        return sum;

=======

        int sum = 0;
        int sign = 1;
        while(n > 0) {
            int d = n % 10;
            sum += d * sign;
            sign = -sign;
            n /= 10;
        }
        return sum;

=======

        int sum = 0;
        bool sign = true;
        while(n) {
            int digit = n % 10;
            if (sign) sum += digit;
            else sum -= digit;
            sign = !sign;
            n /= 10;
        }
        return sum;

=======

        int sum = 0;
        int pos = 1;
        while (n) {
            int digit = n % 10;
            sum += pos * digit;
            pos *= -1;
            n /= 10;
        }
        return sum;

=======

        int i = 1, sum = 0, rem;
        while (n) {
            rem = n % 10;
            if (i % 2 == 0) {
                sum -= rem;
            } else {
                sum += rem;
            }
            i++;
            n /= 10;
        }
        return sum;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        vector<int> res;
        for (int i = 0; i < nums.size(); i += 2) {
            for (int j = 0; j < nums[i]; ++j) {
                res.push_back(nums[i + 1]);
            }
        }
        return res;

=======

        vector<int> result;
        for (int i = 0; i < nums.size(); i += 2) {
            for (int j = 0; j < nums[i]; ++j) {
                result.push_back(nums[i + 1]);
            }
        }
        return result;

=======

        vector<int> ret;
        for (int i = 0; i < nums.size(); i += 2) {
            for (int j = 0; j < nums[i]; ++j) {
                ret.push_back(nums[i + 1]);
            }
        }
        return ret;

=======

        vector<int> result;
        for (int i = 0; i < nums.size(); i += 2) {
            int freq = nums[i];
            int val = nums[i + 1];
            for (int j = 0; j < freq; j++) {
                result.push_back(val);
            }
        }
        return result;

=======

        vector<int> result;
        for (int i = 0; i < nums.size(); i += 2) {
            int freq = nums[i];
            int val = nums[i + 1];
            while (freq--) {
                result.push_back(val);
            }
        }
        return result;

=======

        vector<int> res;
        for (int i = 0; i < nums.size(); i += 2) {
            int freq = nums[i], val = nums[i+1];
            for (int j = 0; j < freq; ++j) {
                res.push_back(val);
            }
        }
        return res;

=======

        int n = nums.size();
        vector<int> ans;
        for (int i = 0; i < n; i += 2) {
            int freq = nums[i];
            int val = nums[i+1];
            for (int j = 0; j < freq; ++j) {
                ans.push_back(val);
            }
        }
        return ans;

=======

        vector<int> res;
        int freq, val;
        for (int i = 0; i < nums.size(); i+=2) {
            freq = nums[i];
            val = nums[i+1];
            for (int j = 0; j < freq; j++) {
                res.push_back(val);
            }
        }
        return res;

=======

        int n = nums.size();
        vector<int> res;
        for(int i = 0; i < n; i+=2) {
            int freq = nums[i];
            int val = nums[i+1];
            for(int j = 0; j < freq; j++) {
                res.push_back(val);
            }
        }
        return res;

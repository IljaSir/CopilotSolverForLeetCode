Synthesizing 10/10 solutions (Duplicates hidden)

=======

        sort(nums.begin(), nums.end());
        return nums[nums.size() - 1] * nums[nums.size() - 2] - nums[0] * nums[1];

=======

        sort(nums.begin(), nums.end());
        int n = nums.size();
        return nums[n-1] * nums[n-2] - nums[0] * nums[1];

=======

        int n = nums.size();
        sort(nums.begin(), nums.end());
        return nums[n - 1] * nums[n - 2] - nums[0] * nums[1];

=======

        sort(nums.begin(), nums.end());
        int i = nums.size() - 1;
        return nums[i] * nums[i - 1] - nums[0] * nums[1];

=======

        sort(nums.begin(), nums.end());
        int a = nums[0], b = nums[1], c = nums[nums.size()-2], d = nums[nums.size()-1];
        return a*b - c*d;

=======

        sort(nums.begin(), nums.end());
        return nums.back()*nums[nums.size()-2]-nums.front()*nums[1];

Synthesizing 10/10 solutions

=======

        int n = s.size();
        int low = 0, high = n;
        vector<int> res;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'I') {
                res.push_back(low);
                low++;
            } else {
                res.push_back(high);
                high--;
            }
        }
        res.push_back(high);
        return res;

=======

        int n = s.size();
        vector<int> res(n + 1);
        int l = 0, r = n;
        for (int i = 0; i < n; ++i) {
            if (s[i] == 'I') {
                res[i] = l++;
            } else {
                res[i] = r--;
            }
        }
        res[n] = l;
        return res;

=======

        int n = s.size();
        vector<int> res;
        int l = 0, r = n;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'I') {
                res.push_back(l++);
            } else {
                res.push_back(r--);
            }
        }
        res.push_back(l);
        return res;

=======

        int n = s.size();
        int low = 0;
        int high = n;
        vector<int> result;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'I') {
                result.push_back(low);
                low++;
            } else {
                result.push_back(high);
                high--;
            }
        }
        result.push_back(low);
        return result;

=======

        int n = s.size();
        int left = 0;
        int right = n;
        vector<int> res;
        for (int i = 0; i < n; ++i) {
            if (s[i] == 'I') {
                res.push_back(left++);
            } else {
                res.push_back(right--);
            }
        }
        res.push_back(left);
        return res;

=======

        int n = s.size();
        vector<int> res;
        int low = 0, high = n;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'I') {
                res.push_back(low++);
            } else {
                res.push_back(high--);
            }
        }
        res.push_back(low);
        return res;

=======

        int n = s.length();
        vector<int> res;
        int left = 0, right = n;
        for (int i = 0; i < n; ++i) {
            if (s[i] == 'I') {
                res.push_back(left);
                ++left;
            } else {
                res.push_back(right);
                --right;
            }
        }
        res.push_back(left);
        return res;

=======

        int n = s.size();
        int i = 0;
        int d = n;
        vector<int> res;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'I') {
                res.push_back(i);
            } else {
                res.push_back(d--);
            }
        }
        res.push_back(d);
        return res;

=======

        int n = s.size();
        vector<int> res;
        int min = 0, max = n;
        for(int i = 0; i < n; i++){
            if(s[i] == 'I'){
                res.push_back(min);
                min++;
            }
            else{
                res.push_back(max);
                max--;
            }
        }
        res.push_back(min);
        return res;

=======

        int n = s.size();
        vector<int> v;
        int l = 0, r = n;
        for (auto c : s) {
            if (c == 'I') {
                v.push_back(l);
                l++;
            } else {
                v.push_back(r);
                r--;
            }
        }
        v.push_back(l);
        return v;

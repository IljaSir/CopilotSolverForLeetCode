Synthesizing 10/10 solutions (Duplicates hidden)

=======

        for (auto op : ops) {
            m = min(m, op[0]);
            n = min(n, op[1]);
        }
        return m * n;

=======

        int x = m;
        int y = n;
        for (auto op: ops) {
            x = min(x, op[0]);
            y = min(y, op[1]);
        }
        return x * y;

=======

        int min_a = m, min_b = n;
        for (auto& op : ops) {
            min_a = min(min_a, op[0]);
            min_b = min(min_b, op[1]);
        }
        return min_a * min_b;

=======

        int minA = m, minB = n;
        for (auto &op : ops) {
            minA = min(minA, op[0]);
            minB = min(minB, op[1]);
        }
        return minA * minB;

=======

        int minr = m, minc = n;
        for (auto &op : ops) {
            minr = min(minr, op[0]);
            minc = min(minc, op[1]);
        }
        return minr * minc;

=======

        int min_a = m;
        int min_b = n;
        for (auto& op : ops) {
            min_a = min(min_a, op[0]);
            min_b = min(min_b, op[1]);
        }
        return min_a * min_b;

=======

        int min_i = m;
        int min_j = n;
        for (auto& op : ops) {
            min_i = min(min_i, op[0]);
            min_j = min(min_j, op[1]);
        }
        return min_i * min_j;

=======

        int minx = m, miny = n;
        for(auto op:ops){
            minx = min(minx, op[0]);
            miny = min(miny, op[1]);
        }
        return minx * miny;

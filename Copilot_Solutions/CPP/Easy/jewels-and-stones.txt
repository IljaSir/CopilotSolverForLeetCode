Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int count = 0;
        for (int i = 0; i < jewels.length(); i++) {
            for (int j = 0; j < stones.length(); j++) {
                if (jewels[i] == stones[j]) {
                    count++;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < jewels.size(); i++) {
            for (int j = 0; j < stones.size(); j++) {
                if (jewels[i] == stones[j]) {
                    count++;
                }
            }
        }
        return count;

=======

        int count = 0;
        for(int i = 0; i < stones.length(); i++) {
            for(int j = 0; j < jewels.length(); j++) {
                if(stones[i] == jewels[j]) {
                    count++;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (char c : stones) {
            if (jewels.find(c) != string::npos) {
                count++;
            }
        }
        return count;

=======

        int ans = 0;
        for (char c : stones) {
            if (jewels.find(c) != string::npos) {
                ans++;
            }
        }
        return ans;

=======

        int count = 0;
        for (auto stone: stones) {
            if (jewels.find(stone) != string::npos) {
                count++;
            }
        }
        return count;

=======

        int n = 0;
        for (char c : stones) {
            if (jewels.find(c) != string::npos) {
                n++;
            }
        }
        return n;

=======

        int count = 0;
        for (auto& c : stones) {
            if (jewels.find(c) != string::npos) {
                ++count;
            }
        }
        return count;

Synthesizing 10/10 solutions

=======

        string res;
        while (columnNumber) {
            res += 'A' + (columnNumber - 1) % 26;
            columnNumber = (columnNumber - 1) / 26;
        }
        reverse(res.begin(), res.end());
        return res;

=======

        string ans;
        while (columnNumber > 0) {
            ans = char((columnNumber - 1) % 26 + 'A') + ans;
            columnNumber = (columnNumber - 1) / 26;
        }
        return ans;

=======

        string result = "";
        while (columnNumber > 0) {
            columnNumber--;
            result = (char)(columnNumber % 26 + 'A') + result;
            columnNumber /= 26;
        }
        return result;

=======

        string ans;
        while (columnNumber > 0) {
            ans.push_back('A' + (--columnNumber) % 26);
            columnNumber /= 26;
        }
        reverse(ans.begin(), ans.end());
        return ans;

=======

        string ans;
        while (columnNumber) {
            int r = columnNumber % 26;
            if (r == 0) {
                ans += 'Z';
                columnNumber = columnNumber / 26 - 1;
            } else {
                ans += (r - 1) + 'A';
                columnNumber /= 26;
            }
        }
        reverse(ans.begin(), ans.end());
        return ans;

=======

        string ans;
        while(columnNumber){
            ans = (char)((columnNumber-1) % 26 + 'A') + ans;
            columnNumber = (columnNumber-1) / 26;
        }
        return ans;

=======

        string res = "";
        while (columnNumber) {
            int digit = (columnNumber - 1) % 26;
            res = (char)('A' + digit) + res;
            columnNumber = (columnNumber - 1) / 26;
        }
        return res;

=======

        string res;
        while (columnNumber > 0) {
            int mod = columnNumber % 26;
            if (mod == 0) {
                mod = 26;
            }
            res = char('A' + mod - 1) + res;
            columnNumber = (columnNumber - mod) / 26;
        }
        return res;

=======

        string result;
        while(columnNumber > 0) {
            int x = (columnNumber - 1) % 26;
            result = char('A' + x) + result;
            columnNumber = (columnNumber - x) / 26;
        }
        return result;

=======

        string res;
        while(columnNumber>0){
            int k = (columnNumber-1)%26;
            res = (char)(k+'A')+res;
            columnNumber = (columnNumber-1)/26;
        }
        return res;

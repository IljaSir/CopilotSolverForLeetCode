Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int ans = 0;
        for (int i = 0; i < n / 2; i++) {
            ans += n - 2 * i - 1;
        }
        return ans;

=======

        int ans = 0;
        for (int i = 0; i < n / 2; ++i) {
            ans += n - (2 * i + 1);
        }
        return ans;

=======

        int res = 0;
        for (int i = 0; i < n; i += 2) {
            res += n - i - 1;
        }
        return res;

=======

        int res = 0;
        for (int i = 0; i < n/2; i++) {
            res += n - 2*i - 1;
        }
        return res;

=======

        int ans = 0;
        while (n) {
            if (n & 1) {
                ans++;
            }
            n >>= 1;
        }
        return ans;

=======

        int cnt = 0;
        for (int i = 0; i < n / 2; i++) {
            cnt += n - (i * 2 + 1);
        }
        return cnt;

=======

        int ans = 0;
        for (int i = 0; i < n; ++i)
            ans += abs(n - 2 * i - 1);
        return ans / 2;

=======

        int ans = 0;
        while(n > 0) {
            if(n & 1) {
                ans++;
            }
            n >>= 1;
        }
        return ans;

=======

        int k = n / 2;
        return k * (k + n % 2);

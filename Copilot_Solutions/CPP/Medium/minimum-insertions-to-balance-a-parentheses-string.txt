Synthesizing 10/10 solutions

=======

        int res = 0;
        int left = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] == '(') {
                left++;
            } else {
                if (i + 1 < s.size() && s[i + 1] == ')') {
                    i++;
                } else {
                    res++;
                }
                if (left > 0) {
                    left--;
                } else {
                    res++;
                }
            }
        }
        return res + left * 2;

=======

        int ans = 0;
        int left = 0;
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == '(') {
                ++left;
            } else {
                if (i + 1 < s.size() && s[i + 1] == ')') {
                    ++i;
                } else {
                    ++ans;
                }
                if (left > 0) {
                    --left;
                } else {
                    ++ans;
                }
            }
        }
        return ans + left * 2;

=======

        int ans = 0;
        int left = 0;
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == '(') {
                ++left;
            } else {
                if (i + 1 < s.size() && s[i + 1] == ')') {
                    ++i;
                } else {
                    ++ans;
                }
                if (left > 0) {
                    --left;
                } else {
                    ++ans;
                }
            }
        }
        return ans + 2 * left;

=======

        int ans = 0;
        int left = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s[i] == '(') {
                left++;
            } else {
                if (i < s.length() - 1 && s[i + 1] == ')') {
                    i++;
                } else {
                    ans++;
                }
                if (left > 0) {
                    left--;
                } else {
                    ans++;
                }
            }
        }
        ans += left * 2;
        return ans;

=======

        int left = 0;
        int right = 0;
        int res = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] == '(') {
                left++;
            } else {
                if (left > 0) {
                    left--;
                } else {
                    res++;
                }
                if (i + 1 < s.size() && s[i + 1] == ')') {
                    i++;
                } else {
                    res++;
                }
            }
        }
        res += left * 2;
        return res;

=======

        int ans = 0;
        int left = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] == '(') {
                left++;
            } else if (s[i] == ')') {
                if (i < s.size() - 1 && s[i + 1] == ')') {
                    i++;
                } else {
                    ans++;
                }
                left--;
                if (left < 0) {
                    ans++;
                    left = 0;
                }
            }
        }
        return ans + left * 2;

=======

        int left = 0;
        int res = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] == '(') {
                left++;
            } else if (s[i] == ')') {
                if (i + 1 < s.size() && s[i+1] == ')') {
                    i++;
                } else {
                    res++;
                }
                if (left > 0) {
                    left--;
                } else {
                    res++;
                }
            }
        }
        res += left * 2;
        return res;

=======

        int n = s.size();
        int ans = 0;
        int balance = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == '(') {
                balance++;
            } else {
                if (i < n - 1 && s[i + 1] == ')') {
                    i++;
                } else {
                    ans++;
                }
                if (balance > 0) {
                    balance--;
                } else {
                    ans++;
                }
            }
        }
        return ans + balance * 2;

=======

        int ans = 0;
        int n = s.size();
        int l = 0;
        for (int i = 0; i < n; ++i) {
            if (s[i] == '(') {
                ++l;
            } else {
                if (i + 1 < n && s[i + 1] == ')') {
                    ++i;
                } else {
                    ++ans;
                }
                if (l > 0) {
                    --l;
                } else {
                    ++ans;
                }
            }
        }
        ans += l * 2;
        return ans;

=======

        int r = 0;
        int l = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] == '(') {
                l++;
            } else {
                if (i + 1 < s.size() && s[i + 1] == ')') {
                    i++;
                } else {
                    r++;
                }
                if (l > 0) {
                    l--;
                } else {
                    r++;
                }
            }
        }
        return r + l * 2;

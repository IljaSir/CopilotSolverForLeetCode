Synthesizing 10/10 solutions

=======

        int ans = 0;
        for (int i = 0; i < s.size(); i++) {
            vector<int> cnt(26, 0);
            for (int j = i; j < s.size(); j++) {
                ++cnt[s[j] - 'a'];
                int mx = *max_element(cnt.begin(), cnt.end());
                int mn = *min_element(cnt.begin(), cnt.end());
                if (mx > mn) ans += mx - mn;
            }
        }
        return ans;

=======

        int ans = 0;
        for (int i = 0; i < s.size(); ++i) {
            int cnt[26] = {0};
            for (int j = i; j < s.size(); ++j) {
                cnt[s[j] - 'a']++;
                int min = INT_MAX, max = INT_MIN;
                for (int k = 0; k < 26; ++k) {
                    if (cnt[k] != 0) {
                        min = std::min(min, cnt[k]);
                        max = std::max(max, cnt[k]);
                    }
                }
                ans += max - min;
            }
        }
        return ans;

=======

        int n = s.size();
        int ans = 0;
        for (int i = 0; i < n; ++i) {
            vector<int> cnt(26, 0);
            for (int j = i; j < n; ++j) {
                ++cnt[s[j]-'a'];
                int minCnt = INT_MAX, maxCnt = INT_MIN;
                for (int k = 0; k < 26; ++k) {
                    if (cnt[k] > 0) {
                        minCnt = min(minCnt, cnt[k]);
                        maxCnt = max(maxCnt, cnt[k]);
                    }
                }
                ans += maxCnt - minCnt;
            }
        }
        return ans;

=======

        int res = 0;
        for (int i = 0; i < s.size(); i++) {
            vector<int> cnt(26);
            for (int j = i; j < s.size(); j++) {
                cnt[s[j] - 'a']++;
                res += *max_element(cnt.begin(), cnt.end()) - *min_element(cnt.begin(), cnt.end());
            }
        }
        return res;

=======

        int n = s.size();
        int ans = 0;
        for (int i = 0; i < n; ++i) {
            int cnt[26] = {0};
            for (int j = i; j < n; ++j) {
                ++cnt[s[j] - 'a'];
                int mx = 0, mn = n;
                for (int k = 0; k < 26; ++k) {
                    if (cnt[k]) {
                        mx = max(mx, cnt[k]);
                        mn = min(mn, cnt[k]);
                    }
                }
                ans += mx - mn;
            }
        }
        return ans;

=======

        int n = s.length();
        int ans = 0;
        for (int i = 0; i < n; i++) {
            vector<int> cnt(26);
            for (int j = i; j < n; j++) {
                cnt[s[j] - 'a']++;
                int mn = 500, mx = 0;
                for (int k = 0; k < 26; k++) {
                    if (cnt[k] > 0) {
                        mn = min(mn, cnt[k]);
                        mx = max(mx, cnt[k]);
                    }
                }
                ans += mx - mn;
            }
        }
        return ans;

=======

        int res = 0;
        int n = s.size();
        for (int i = 0; i < n; ++i) {
            vector<int> cnt(26);
            for (int j = i; j < n; ++j) {
                ++cnt[s[j] - 'a'];
                int minCnt = n;
                int maxCnt = 0;
                for (int k = 0; k < 26; ++k) {
                    if (cnt[k] > 0) {
                        minCnt = min(minCnt, cnt[k]);
                        maxCnt = max(maxCnt, cnt[k]);
                    }
                }
                res += maxCnt - minCnt;
            }
        }
        return res;

=======

        int ans = 0, n = s.length();
        for (int i = 0; i < n; ++i) {
            int cnt[26] = {0};
            for (int j = i; j < n; ++j) {
                ++cnt[s[j] - 'a'];
                int mx = 0, mn = n + 1;
                for (int k = 0; k < 26; ++k) {
                    if (cnt[k]) {
                        mx = max(mx, cnt[k]);
                        mn = min(mn, cnt[k]);
                    }
                }
                ans += mx - mn;
            }
        }
        return ans;

=======

        int N = s.length();
        int ans = 0;
        for (int i = 0; i < N; ++i) {
            vector<int> cnt(26, 0);
            for (int j = i; j < N; ++j) {
                cnt[s[j] - 'a']++;
                int min_cnt = INT_MAX;
                int max_cnt = INT_MIN;
                for (int k = 0; k < 26; ++k) {
                    if (cnt[k] > 0) {
                        min_cnt = min(min_cnt, cnt[k]);
                        max_cnt = max(max_cnt, cnt[k]);
                    }
                }
                ans += max_cnt - min_cnt;
            }
        }
        return ans;

=======

        int n = s.size();
        int ans = 0;
        for (int i = 0; i < n; ++i) {
            vector<int> cnt(26);
            int mx = 0, mn = INT_MAX;
            for (int j = i; j < n; ++j) {
                ++cnt[s[j] - 'a'];
                mx = max(mx, cnt[s[j] - 'a']);
                mn = min(mn, cnt[s[j] - 'a']);
                ans += mx - mn;
            }
        }
        return ans;

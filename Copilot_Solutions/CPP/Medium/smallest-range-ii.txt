Synthesizing 10/10 solutions (Duplicates hidden)

=======

        sort(nums.begin(), nums.end());
        int n = nums.size();
        int ans = nums[n - 1] - nums[0];
        for (int i = 0; i < n - 1; i++) {
            int a = nums[i], b = nums[i + 1];
            int high = max(nums[n - 1] - k, a + k);
            int low = min(nums[0] + k, b - k);
            ans = min(ans, high - low);
        }
        return ans;

=======

        sort(nums.begin(), nums.end());
        int n = nums.size();
        int ans = nums[n - 1] - nums[0];
        for (int i = 0; i < n - 1; i++) {
            int a = nums[i];
            int b = nums[i + 1];
            int high = max(nums[n - 1] - k, a + k);
            int low = min(nums[0] + k, b - k);
            ans = min(ans, high - low);
        }
        return ans;

=======

        int n = nums.size();
        sort(nums.begin(), nums.end());
        int ans = nums[n - 1] - nums[0];
        for (int i = 0; i < n - 1; i++) {
            int a = nums[i];
            int b = nums[i + 1];
            int high = max(nums[n - 1] - k, a + k);
            int low = min(nums[0] + k, b - k);
            ans = min(ans, high - low);
        }
        return ans;

=======

        sort(nums.begin(), nums.end());
        int ans = nums.back() - nums.front();
        for (int i = 0; i < nums.size() - 1; ++i) {
            int a = nums[i], b = nums[i + 1];
            int high = max(nums.back() - k, a + k);
            int low = min(nums.front() + k, b - k);
            ans = min(ans, high - low);
        }
        return ans;

=======

        sort(nums.begin(), nums.end());
        int n = nums.size();
        int res = nums[n-1] - nums[0];
        for (int i = 0; i < n-1; i++) {
            int a = nums[i], b = nums[i+1];
            int high = max(nums[n-1] - k, a + k);
            int low = min(nums[0] + k, b - k);
            res = min(res, high - low);
        }
        return res;

=======

        sort(nums.begin(), nums.end());
        int n = nums.size();
        int res = nums[n-1] - nums[0];
        for (int i = 0; i < n-1; ++i) {
            int a = nums[i], b = nums[i+1];
            int high = max(nums[n-1]-k, a+k);
            int low = min(nums[0]+k, b-k);
            res = min(res, high-low);
        }
        return res;

=======

        int len = nums.size();
        sort(nums.begin(), nums.end());
        int ans = nums[len-1] - nums[0];
        for (int i = 0; i < len-1; ++i) {
            int maxn = max(nums[i]+k, nums[len-1]-k);
            int minn = min(nums[0]+k, nums[i+1]-k);
            ans = min(ans, maxn-minn);
        }
        return ans;

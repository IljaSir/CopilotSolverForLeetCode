Synthesizing 10/10 solutions

=======

        string res(n, 'a');
        k -= n;
        for (int i = n - 1; i >= 0; --i) {
            int add = min(25, k);
            res[i] += add;
            k -= add;
        }
        return res;

=======

        string res(n, 'a');
        k -= n;
        for (int i = n - 1; i >= 0 && k > 0; --i) {
            int add = min(k, 25);
            res[i] += add;
            k -= add;
        }
        return res;

=======

        string result(n, 'a');
        k -= n;
        for (int i = n - 1; i >= 0; --i) {
            int add = min(25, k);
            result[i] += add;
            k -= add;
        }
        return result;

=======

        string ans(n, 'a');
        k -= n;
        for (int i = n - 1; i >= 0; --i) {
            int t = min(25, k);
            ans[i] += t;
            k -= t;
        }
        return ans;

=======

        string res;
        for (int i = 0; i < n; i++) {
            res += 'a';
        }
        k -= n;
        for (int i = n - 1; i >= 0; i--) {
            if (k > 25) {
                res[i] = 'z';
                k -= 25;
            } else {
                res[i] += k;
                break;
            }
        }
        return res;

=======

        string result(n, 'a');
        k -= n;
        for (int i = n - 1; i >= 0 && k > 0; i--) {
            int diff = min(k, 25);
            result[i] += diff;
            k -= diff;
        }
        return result;

=======

        string res(n, 'a');
        k -= n;
        int i = n - 1;
        while (k > 0) {
            int val = min(25, k);
            res[i] += val;
            k -= val;
            i--;
        }
        return res;

=======

        string s;
        for (int i = 0; i < n; ++i) {
            s += 'a';
        }
        k -= n;
        int i = n - 1;
        while (k > 0) {
            int d = min(k, 25);
            s[i] += d;
            k -= d;
            --i;
        }
        return s;

=======

        string ret(n, 'a');
        int i = n - 1;
        k -= n;
        while (k > 0) {
            int c = min(k, 25);
            ret[i--] += c;
            k -= c;
        }
        return ret;

=======

        string ans;
        for (int i = n-1; i >= 0; --i) {
            int x = min(26, k - i);
            ans += 'a' + x - 1;
            k -= x;
        }
        return ans;

Synthesizing 10/10 solutions

=======

        sort(s1.begin(), s1.end());
        sort(s2.begin(), s2.end());
        int n = s1.size();
        bool flag1 = true, flag2 = true;
        for (int i = 0; i < n; i++) {
            flag1 &= s1[i] >= s2[i];
            flag2 &= s1[i] <= s2[i];
        }
        return flag1 || flag2;

=======

        sort(s1.begin(), s1.end());
        sort(s2.begin(), s2.end());
        int n = s1.size();
        bool f1 = true, f2 = true;
        for (int i = 0; i < n; i++) {
            if (s1[i] < s2[i]) f1 = false;
            if (s2[i] < s1[i]) f2 = false;
        }
        return f1 || f2;

=======

        vector<int> v1(26, 0), v2(26, 0);
        for (char c : s1) v1[c - 'a']++;
        for (char c : s2) v2[c - 'a']++;
        int cnt1 = 0, cnt2 = 0;
        bool flag = false;
        for (int i = 0; i < 26; i++) {
            cnt1 += v1[i];
            cnt2 += v2[i];
            if (cnt1 > cnt2) {
                if (flag) return false;
                flag = true;
            } else if (cnt2 > cnt1) {
                if (!flag) return false;
                flag = false;
            }
        }
        return true;

=======

        int n = s1.size();
        sort(s1.begin(), s1.end());
        sort(s2.begin(), s2.end());
        bool flag1 = true, flag2 = true;
        for (int i = 0; i < n; i++) {
            if (s1[i] < s2[i]) {
                flag1 = false;
            }
            if (s1[i] > s2[i]) {
                flag2 = false;
            }
        }
        return flag1 || flag2;

=======

        int n = s1.size();
        vector<int> v1(26, 0);
        vector<int> v2(26, 0);
        for (int i = 0; i < n; ++i) {
            v1[s1[i] - 'a']++;
            v2[s2[i] - 'a']++;
        }
        int cnt = 0;
        for (int i = 0; i < 26; ++i) {
            cnt += v1[i];
            if (cnt >= n) return true;
            cnt -= v2[i];
            if (cnt <= 0) return false;
        }
        return true;

=======

        int n = s1.size();
        vector<int> c1(26, 0), c2(26, 0);
        for (int i = 0; i < n; ++i) {
            ++c1[s1[i] - 'a'];
            ++c2[s2[i] - 'a'];
        }
        int j = 0;
        for (int i = 0; i < 26; ++i) {
            while (c1[i]--) {
                if (j >= 26 || c2[j] == 0) return false;
                --c2[j];
                ++j;
            }
        }
        j = 0;
        for (int i = 0; i < 26; ++i) {
            while (c2[i]--) {
                if (j >= 26 || c1[j] == 0) return false;
                --c1[j];
                ++j;
            }
        }
        return true;

=======

        int n = s1.size();
        int a[26] = {0};
        int b[26] = {0};
        for (int i = 0; i < n; i++) {
            a[s1[i] - 'a']++;
            b[s2[i] - 'a']++;
        }
        int cnt1 = 0;
        int cnt2 = 0;
        for (int i = 0; i < 26; i++) {
            cnt1 += a[i];
            cnt2 += b[i];
            if (cnt1 < cnt2) return false;
        }
        cnt1 = 0;
        cnt2 = 0;
        for (int i = 25; i >= 0; i--) {
            cnt1 += a[i];
            cnt2 += b[i];
            if (cnt1 < cnt2) return false;
        }
        return true;

=======

        vector<int> count1(26, 0);
        vector<int> count2(26, 0);
        for (auto c: s1) {
            count1[c - 'a']++;
        }
        for (auto c: s2) {
            count2[c - 'a']++;
        }
        int sum1 = 0;
        int sum2 = 0;
        for (int i = 0; i < 26; i++) {
            sum1 += count1[i];
            sum2 += count2[i];
            if (sum1 > sum2) {
                for (int j = i + 1; j < 26; j++) {
                    if (count2[j] > 0) {
                        return false;
                    }
                }
            }
            if (sum2 > sum1) {
                for (int j = i + 1; j < 26; j++) {
                    if (count1[j] > 0) {
                        return false;
                    }
                }
            }
        }
        return true;

=======

        int n = s1.size();
        sort(s1.begin(), s1.end());
        sort(s2.begin(), s2.end());
        int i = 0;
        for(; i < n; ++i){
            if(s1[i] < s2[i]) break;
        }
        if(i == n) return true;
        i = 0;
        for(; i < n; ++i){
            if(s1[i] > s2[i]) break;
        }
        return i == n;

=======

        int s1_count[26] = {0};
        int s2_count[26] = {0};
        for (auto c: s1) {
            s1_count[c-'a']++;
        }
        for (auto c: s2) {
            s2_count[c-'a']++;
        }
        int s1_count_sum = 0;
        int s2_count_sum = 0;
        for (int i = 0; i < 26; i++) {
            s1_count_sum += s1_count[i];
            s2_count_sum += s2_count[i];
            if (s1_count_sum >= s2_count_sum) {
                if (s1_count_sum > s2_count_sum) {
                    for (int j = i+1; j < 26; j++) {
                        if (s1_count[j] > 0) {
                            return false;
                        }
                    }
                }
            } else {
                for (int j = i+1; j < 26; j++) {
                    if (s2_count[j] > 0) {
                        return false;
                    }
                }
            }
        }
        return true;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int n = nums.size();
        if (n <= 4) return 0;
        sort(nums.begin(), nums.end());
        int ans = INT_MAX;
        for (int i = 0; i < 4; ++i) {
            ans = min(ans, nums[n - 4 + i] - nums[i]);
        }
        return ans;

=======

        int n = nums.size();
        if (n <= 4) return 0;
        sort(nums.begin(), nums.end());
        int res = INT_MAX;
        for (int i = 0; i < 4; ++i) {
            res = min(res, nums[n - 1 - (3 - i)] - nums[i]);
        }
        return res;

=======

        int n = nums.size();
        if (n <= 4) return 0;
        sort(nums.begin(), nums.end());
        return min({nums[n-4] - nums[0], nums[n-3] - nums[1], nums[n-2] - nums[2], nums[n-1] - nums[3]});

=======

        if (nums.size() <= 4) return 0;
        sort(nums.begin(), nums.end());
        int n = nums.size();
        int res = INT_MAX;
        for (int i = 0; i < 4; i++) {
            res = min(res, nums[n - 4 + i] - nums[i]);
        }
        return res;

=======

        if (nums.size() <= 4) return 0;
        sort(nums.begin(), nums.end());
        int n = nums.size();
        return min({nums[n - 4] - nums[0], nums[n - 3] - nums[1], nums[n - 2] - nums[2], nums[n - 1] - nums[3]});

=======

        if (nums.size() <= 4) return 0;
        sort(nums.begin(), nums.end());
        int ans = INT_MAX;
        for (int i = 0; i < 4; i++) {
            ans = min(ans, nums[nums.size() - 1 - (3 - i)] - nums[i]);
        }
        return ans;

=======

        int n = nums.size();
        if (n <= 4) return 0;
        sort(nums.begin(), nums.end());
        int ans = INT_MAX;
        for (int i = 0; i <= 3; i++) {
            ans = min(ans, nums[n-4+i] - nums[i]);
        }
        return ans;

=======

        sort(nums.begin(), nums.end());
        int n = nums.size();
        if (n <= 4) return 0;
        int ans = INT_MAX;
        for (int i = 0; i < 4; ++i) {
            ans = min(ans, nums[n-4+i] - nums[i]);
        }
        return ans;

=======

        sort(nums.begin(), nums.end());
        int n = nums.size();
        int ans = INT_MAX;
        for (int i = 0; i < 4; i++) {
            ans = min(ans, nums[n - 4 + i] - nums[i]);
        }
        return ans == INT_MAX ? 0 : ans;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        for (int i = 1; i <= n; ++i) {
            if (n % i == 0) {
                if (--k == 0) {
                    return i;
                }
            }
        }
        return -1;

=======

        int count = 0;
        for (int i = 1; i <= n; i++) {
            if (n % i == 0) {
                count++;
                if (count == k) {
                    return i;
                }
            }
        }
        return -1;

=======

        int count = 0;
        for (int i = 1; i <= n; ++i) {
            if (n % i == 0) {
                ++count;
                if (count == k) {
                    return i;
                }
            }
        }
        return -1;

=======

        int count = 0;
        for (int i = 1; i <= n; ++i) {
            if (n % i == 0) {
                ++count;
            }
            if (count == k) {
                return i;
            }
        }
        return -1;

=======

        int cnt = 0;
        for(int i = 1; i <= n; i++) {
            if(n % i == 0) {
                cnt++;
                if(cnt == k) {
                    return i;
                }
            }
        }
        return -1;

=======

        int i = 1;
        int count = 0;
        while (i * i <= n) {
            if (n % i == 0) {
                count++;
                if (count == k) {
                    return i;
                }
            }
            i++;
        }
        i--;
        while (i >= 1) {
            if (i * i == n) {
                i--;
                continue;
            }
            if (n % i == 0) {
                count++;
                if (count == k) {
                    return n / i;
                }
            }
            i--;
        }
        return -1;

=======

        int i = 1;
        for(; i <= n; i++) {
            if(n % i == 0) {
                k--;
                if(k == 0) {
                    return i;
                }
            }
        }
        return -1;

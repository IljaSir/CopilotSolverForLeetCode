Synthesizing 7/10 solutions

=======

        if (n == 3) return 6;
        if (n == 4) return 14;
        long long a = 6, b = 14;
        for (int i = 5; i <= n; ++i) {
            long long c = 2 * b + a;
            a = b;
            b = c;
        }
        return b % 1000000007;

=======

        if (n <= 2) return 0;
        if (n == 3) return 6;
        if (n == 4) return 14;
        int mod = 1e9 + 7;
        int dp[n + 1];
        dp[0] = 0;
        dp[1] = 0;
        dp[2] = 0;
        dp[3] = 6;
        dp[4] = 14;
        for (int i = 5; i <= n; ++i) {
            dp[i] = (2 * dp[i - 1] % mod + dp[i - 2] % mod) % mod;
        }
        return dp[n];
    }
    int countCollisions(int n) {
        int mod = 1e9 + 7;
        int dp[n + 1];
        dp[0] = 0;
        dp[1] = 0;
        dp[2] = 0;
        dp[3] = 6;
        dp[4] = 14;
        for (int i = 5; i <= n; ++i) {
            dp[i] = (2 * dp[i - 1] % mod + dp[i - 2] % mod) % mod;
        }
        return dp[n];

=======

        long long dp[n + 1];
        dp[0] = 1;
        dp[1] = 1;
        dp[2] = 2;
        for(int i = 3; i <= n; ++i) {
            dp[i] = ((dp[i - 1] + dp[i - 2]) % 1000000007 + (i - 1) * dp[i - 3]) % 1000000007;
        }
        return dp[n];

=======

        int mod = 1e9 + 7;
        long long ans = 1;
        for (int i = 1; i <= n; i++) {
            ans = (ans * 2) % mod;
        }
        return (ans - n - 1) % mod;

=======

        long long mod = 1e9 + 7;
        if (n % 2 == 0) {
            long long ans = 1;
            for (int i = 0; i < n / 2; i++) {
                ans = ans * 2 % mod;
            }
            return ans;
        }
        else {
            long long ans = 1;
            for (int i = 0; i < (n - 1) / 2; i++) {
                ans = ans * 2 % mod;
            }
            return ans * 2 % mod;
        }
    }
    int countCollisions(int n) {
        long long mod = 1e9 + 7;
        long long ans = 0;
        for (int i = 1; i <= n; i++) {
            ans += monkeyMove(i);
            ans %= mod;
        }
        return ans;

=======

        long long res = 1;
        for (int i = 2; i <= n; i++) {
            res = (res * 2) % 1000000007;
        }
        return res;
    }

    int countCollisions(int n) {
        int res = 0;
        for (int i = 1; i <= n; i++) {
            res = (res + monkeyMove(i)) % 1000000007;
        }
        return res;

=======

        return 0;

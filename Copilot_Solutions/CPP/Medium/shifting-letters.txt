Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int sum = 0;
        for (int i = shifts.size() - 1; i >= 0; i--) {
            sum = (sum + shifts[i]) % 26;
            s[i] = (s[i] - 'a' + sum) % 26 + 'a';
        }
        return s;

=======

        int n = shifts.size();
        for (int i = n - 2; i >= 0; --i) {
            shifts[i] = (shifts[i] + shifts[i + 1]) % 26;
        }
        for (int i = 0; i < n; ++i) {
            s[i] = (s[i] - 'a' + shifts[i]) % 26 + 'a';
        }
        return s;

=======

        int n = shifts.size();
        for (int i = n - 2; i >= 0; --i) {
            shifts[i] += shifts[i + 1];
            shifts[i] %= 26;
        }
        for (int i = 0; i < n; ++i) {
            s[i] = (s[i] - 'a' + shifts[i]) % 26 + 'a';
        }
        return s;

=======

        for(int i = shifts.size() - 2; i >= 0; i--){
            shifts[i] += shifts[i + 1];
            shifts[i] %= 26;
        }
        for(int i = 0; i < s.size(); i++){
            s[i] = 'a' + (s[i] - 'a' + shifts[i]) % 26;
        }
        return s;

=======

        int n = s.size();
        for (int i = n - 2; i >= 0; i--) {
            shifts[i] += shifts[i + 1];
            shifts[i] %= 26;
        }
        for (int i = 0; i < n; i++) {
            s[i] = (s[i] - 'a' + shifts[i]) % 26 + 'a';
        }
        return s;

=======

        int n = s.size();
        int sum = 0;
        for (int i = n - 1; i >= 0; i--) {
            sum = (sum + shifts[i]) % 26;
            s[i] = (s[i] - 'a' + sum) % 26 + 'a';
        }
        return s;

=======

        int n = shifts.size();
        for (int i = n - 2; i >= 0; i--) {
            shifts[i] += shifts[i+1];
        }
        for (int i = 0; i < n; i++) {
            s[i] = (s[i] - 'a' + shifts[i]) % 26 + 'a';
        }
        return s;

=======

        int n = s.length();
        vector<int> sum(n, 0);
        sum[n - 1] = shifts[n - 1];
        for (int i = n - 2; i >= 0; --i) {
            sum[i] = (sum[i + 1] + shifts[i]) % 26;
        }
        for (int i = 0; i < n; ++i) {
            s[i] = 'a' + (s[i] - 'a' + sum[i]) % 26;
        }
        return s;

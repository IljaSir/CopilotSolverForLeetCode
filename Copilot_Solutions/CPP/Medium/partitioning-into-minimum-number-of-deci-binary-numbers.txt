Synthesizing 10/10 solutions

=======

        int max = 0;
        for (int i = 0; i < n.size(); i++) {
            if (n[i] - '0' > max) {
                max = n[i] - '0';
            }
        }
        return max;

=======

        int res = 0;
        for (char c : n) {
            res = max(res, c - '0');
        }
        return res;

=======

        int max = 0;
        for (char c : n) {
            if (c - '0' > max) {
                max = c - '0';
            }
        }
        return max;

=======

        int res = 0;
        for (auto c : n) {
            res = max(res, c - '0');
        }
        return res;

=======

        int max = 0;
        for (int i = 0; i < n.size(); i++) {
            if (n[i] > max) {
                max = n[i];
            }
        }
        return max - '0';

=======

        int ans = 0;
        for (char ch : n) {
            ans = max(ans, ch - '0');
        }
        return ans;

=======

        int max = 0;
        for (int i = 0; i < n.length(); i++) {
            int c = n[i] - '0';
            if (c > max) {
                max = c;
            }
        }
        return max;

=======

        int max = 0;
        for (auto c : n) {
            if (c - '0' > max) max = c - '0';
        }
        return max;

=======

        int max = 0;
        for (int i=0; i<n.length(); i++) {
            if (max < n[i] - '0') {
                max = n[i] - '0';
            }
        }
        return max;

=======

        int max = 0;
        for (auto c : n) {
            int i = c - '0';
            if (i > max) {
                max = i;
                if (max == 9) {
                    break;
                }
            }
        }
        return max;

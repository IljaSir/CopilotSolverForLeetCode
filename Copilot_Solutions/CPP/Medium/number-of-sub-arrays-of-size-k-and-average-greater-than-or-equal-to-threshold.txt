Synthesizing 10/10 solutions

=======

        int n = arr.size();
        if (n < k) return 0;
        int sum = 0;
        for (int i = 0; i < k; ++i) {
            sum += arr[i];
        }
        int ans = 0;
        if (sum / k >= threshold) ans++;
        for (int i = k; i < n; ++i) {
            sum += arr[i] - arr[i-k];
            if (sum / k >= threshold) ans++;
        }
        return ans;

=======

        int sum = 0;
        for (int i = 0; i < k; i++) {
            sum += arr[i];
        }
        int res = 0;
        if (sum / k >= threshold) {
            res++;
        }
        for (int i = k; i < arr.size(); i++) {
            sum += arr[i] - arr[i - k];
            if (sum / k >= threshold) {
                res++;
            }
        }
        return res;

=======

        int sum = 0;
        for (int i = 0; i < k; i++) {
            sum += arr[i];
        }
        int res = 0;
        if (sum / k >= threshold) {
            res++;
        }
        for (int i = k; i < arr.size(); i++) {
            sum = sum + arr[i] - arr[i - k];
            if (sum / k >= threshold) {
                res++;
            }
        }
        return res;

=======

        int sum = 0;
        for (int i = 0; i < k; ++i) {
            sum += arr[i];
        }
        int result = 0;
        if (sum / k >= threshold) {
            result++;
        }
        for (int i = k; i < arr.size(); ++i) {
            sum = sum - arr[i - k] + arr[i];
            if (sum / k >= threshold) {
                result++;
            }
        }
        return result;

=======

        int sum = 0;
        for (int i = 0; i < k; ++i) {
            sum += arr[i];
        }
        int ans = sum >= k * threshold;
        for (int i = k; i < arr.size(); ++i) {
            sum += arr[i] - arr[i - k];
            ans += sum >= k * threshold;
        }
        return ans;

=======

        int sum = 0, res = 0;
        for (int i = 0; i < k; ++i) {
            sum += arr[i];
        }
        if (sum / k >= threshold) ++res;
        for (int i = k; i < arr.size(); ++i) {
            sum += arr[i] - arr[i - k];
            if (sum / k >= threshold) ++res;
        }
        return res;

=======

        int sum = 0;
        int n = arr.size();
        int res = 0;
        for (int i = 0; i < n; ++i) {
            sum += arr[i];
            if (i >= k) sum -= arr[i - k];
            if (i >= k - 1) {
                if (sum / k >= threshold) ++res;
            }
        }
        return res;

=======

        int n = arr.size();
        int sum = 0;
        for(int i = 0; i < k; ++i) {
            sum += arr[i];
        }
        int ans = 0;
        if(sum >= k * threshold) ans++;
        for(int i = k; i < n; ++i) {
            sum += arr[i] - arr[i - k];
            if(sum >= k * threshold) ans++;
        }
        return ans;

=======

        int n = arr.size();
        int sum = 0;
        for(int i = 0; i < k; i++) {
            sum += arr[i];
        }
        int count = 0;
        if((sum / k) >= threshold) {
            count++;
        }
        for(int i = k; i < n; i++) {
            sum += arr[i];
            sum -= arr[i - k];
            if((sum / k) >= threshold) {
                count++;
            }
        }
        return count;

=======

        int sum = 0;
        for(int i=0; i<k; i++) sum += arr[i];
        int res = (sum/k >= threshold);
        for(int i=k; i<arr.size(); i++) {
            sum += arr[i] - arr[i-k];
            if(sum/k >= threshold) res++;
        }
        return res;

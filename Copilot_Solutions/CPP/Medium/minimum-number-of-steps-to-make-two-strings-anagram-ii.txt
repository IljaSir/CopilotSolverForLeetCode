Synthesizing 10/10 solutions

=======

        int count[26] = {0};
        for (int i = 0; i < s.size(); i++) {
            count[s[i] - 'a']++;
            count[t[i] - 'a']--;
        }
        int ans = 0;
        for (int i = 0; i < 26; i++) {
            if (count[i] > 0) {
                ans += count[i];
            }
        }
        return ans;

=======

        vector<int> cnt(26, 0);
        for (char c : s) {
            cnt[c - 'a']++;
        }
        for (char c : t) {
            cnt[c - 'a']--;
        }
        int res = 0;
        for (int x : cnt) {
            res += abs(x);
        }
        return res / 2;

=======

        int cnt[26] = {0};
        for (char c : s) {
            cnt[c - 'a']++;
        }
        for (char c : t) {
            cnt[c - 'a']--;
        }
        int res = 0;
        for (int i = 0; i < 26; i++) {
            if (cnt[i] > 0) {
                res += cnt[i];
            }
        }
        return res;

=======

        vector<int> cnt(26, 0);
        for (char c : s) {
            ++cnt[c - 'a'];
        }
        for (char c : t) {
            --cnt[c - 'a'];
        }
        int res = 0;
        for (int i : cnt) {
            if (i > 0) {
                res += i;
            }
        }
        return res;

=======

        int n = s.size();
        vector<int> cnt(26, 0);
        for (int i = 0; i < n; i++) {
            cnt[s[i] - 'a']++;
            cnt[t[i] - 'a']--;
        }
        int ans = 0;
        for (int i = 0; i < 26; i++) {
            if (cnt[i] > 0) ans += cnt[i];
        }
        return ans;

=======

        int cnt[26] = {0};
        for (auto c : s) {
            cnt[c-'a']++;
        }
        for (auto c : t) {
            cnt[c-'a']--;
        }
        int ans = 0;
        for (auto c : cnt) {
            if (c > 0) {
                ans += c;
            }
        }
        return ans;

=======

        int count[26] = {0};
        for (auto ch : s) count[ch - 'a']++;
        for (auto ch : t) count[ch - 'a']--;
        int res = 0;
        for (int i = 0; i < 26; i++) {
            if (count[i] > 0) res += count[i];
        }
        return res;

=======

        int n = s.length();
        int m = t.length();
        if (n != m) return -1;
        int cnt[26] = {0};
        for (int i = 0; i < n; i++) {
            cnt[s[i] - 'a']++;
            cnt[t[i] - 'a']--;
        }
        int ans = 0;
        for (int i = 0; i < 26; i++) {
            if (cnt[i] > 0) ans += cnt[i];
        }
        return ans;

=======

        int n = s.length();
        int m = t.length();
        if(n != m) return -1;
        int freq[26] = {0};
        for(int i = 0; i < n; i++){
            freq[s[i] - 'a']++;
            freq[t[i] - 'a']--;
        }
        int ans = 0;
        for(int i = 0; i < 26; i++){
            if(freq[i] > 0) ans += freq[i];
        }
        return ans;

=======

        int n = s.length();
        int m = t.length();
        if (n != m) return -1;
        int cnt[26];
        for (int i = 0; i < 26; i++) cnt[i] = 0;
        for (int i = 0; i < n; i++) {
            cnt[s[i] - 'a']++;
            cnt[t[i] - 'a']--;
        }
        int ans = 0;
        for (int i = 0; i < 26; i++) {
            ans += cnt[i] > 0 ? cnt[i] : 0;
        }
        return ans;

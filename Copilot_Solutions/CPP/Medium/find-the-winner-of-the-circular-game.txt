Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int ans = 0;
        for (int i = 2; i <= n; i++) {
            ans = (ans + k) % i;
        }
        return ans + 1;

=======

        int ans = 0;
        for (int i = 1; i <= n; i++) {
            ans = (ans + k) % i;
        }
        return ans + 1;

=======

        int ret = 0;
        for (int i = 2; i <= n; ++i) {
            ret = (ret + k) % i;
        }
        return ret + 1;

=======

        vector<int> v(n);
        iota(v.begin(), v.end(), 1);
        int i = 0;
        while (v.size() > 1) {
            i = (i + k - 1) % v.size();
            v.erase(v.begin() + i);
        }
        return v[0];

=======

        vector<int> v(n);
        for (int i = 0; i < n; ++i) v[i] = i + 1;
        int i = 0;
        while (v.size() > 1) {
            i = (i + k - 1) % v.size();
            v.erase(v.begin() + i);
        }
        return v[0];

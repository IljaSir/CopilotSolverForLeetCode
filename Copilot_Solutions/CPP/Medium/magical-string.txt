Synthesizing 10/10 solutions (Duplicates hidden)

=======

        string s = "122";
        int i = 2;
        while (s.size() < n) {
            s += string(s[i++] - '0', s.back() ^ 3);
        }
        return count(s.begin(), s.begin() + n, '1');

=======

        if (n == 0) return 0;
        if (n <= 3) return 1;
        string s = "122";
        int i = 2;
        while (s.size() < n) {
            s += string(s[i++] - '0', s.back() ^ 3);
        }
        return count(s.begin(), s.begin() + n, '1');

=======

        if (n <= 0) return 0;
        if (n <= 3) return 1;
        string s = "122";
        int i = 2;
        while (s.size() < n) {
            s += string(s[i] - '0', s.back() ^ 3);
            ++i;
        }
        return count(begin(s), begin(s) + n, '1');

=======

        vector<int> s = {1, 2, 2};
        int i = 2;
        while (s.size() < n) {
            s.push_back(3 - s.back());
            if (s[i] == 2) {
                s.push_back(3 - s.back());
            }
            ++i;
        }
        return count(s.begin(), s.begin() + n, 1);

=======

        if (n <= 0) return 0;
        if (n <= 3) return 1;
        string s = "122";
        int idx = 2;
        while (s.size() < n) {
            s += string(s[idx] - '0', s.back() ^ 3);
            ++idx;
        }
        return count(s.begin(), s.begin() + n, '1');

=======

        if (n == 0) return 0;
        if (n <= 3) return 1;
        vector<int> s(n + 1, 0);
        s[0] = 1;
        s[1] = 2;
        s[2] = 2;
        int i = 2;
        int j = 3;
        int num = 1;
        int ans = 1;
        while (j < n) {
            for (int k = 0; k < s[i]; k++) {
                s[j] = num;
                if (num == 1 && j < n) ans++;
                j++;
            }
            num = 3 - num;
            i++;
        }
        return ans;

=======

        if (n == 0) {
            return 0;
        }
        if (n <= 3) {
            return 1;
        }
        int ans = 1;
        string s = "122";
        int i = 2;
        while (s.size() < n) {
            if (s[i] == '1') {
                s.push_back(s.back() == '1' ? '2' : '1');
                if (s.back() == '1') {
                    ans++;
                }
            } else {
                s.push_back(s.back() == '1' ? '2' : '1');
                s.push_back(s.back() == '1' ? '2' : '1');
                if (s.back() == '1') {
                    ans++;
                }
            }
            i++;
        }
        if (s.back() == '1' && s.size() > n) {
            ans--;
        }
        return ans;

=======

        if(n <= 0) return 0;
        if(n <= 3) return 1;
        string s = "122";
        int i = 2, j = 3;
        while(j < n){
            if(s[i] == '1'){
                if(s.back() == '1'){
                    s += "2";
                }else{
                    s += "1";
                }
                j++;
            }else{
                if(s.back() == '1'){
                    s += "22";
                }else{
                    s += "11";
                }
                j += 2;
            }
            i++;
        }
        int ans = 0;
        for(int i = 0; i < n; i++){
            if(s[i] == '1') ans++;
        }
        return ans;

=======

        if (n == 0) return 0;
        if (n <= 3) return 1;
        int count = 1;
        int i = 2;
        int j = 3;
        int flag = 1;
        int num = 2;
        vector<int> magic(n + 1, 0);
        magic[0] = 1;
        magic[1] = 2;
        magic[2] = 2;
        while (j < n) {
            magic[j++] = num;
            if (magic[i] == 2) {
                magic[j++] = num;
            }
            if (num == 1 && magic[i] == 2) {
                count++;
            }
            i++;
            if (i == j) {
                num = 3 - num;
            }
        }
        return count;

Synthesizing 10/10 solutions

=======

        vector<string> res;
        for (int i = 2; i <= n; i++) {
            for (int j = 1; j < i; j++) {
                if (gcd(i, j) == 1) {
                    res.push_back(to_string(j) + "/" + to_string(i));
                }
            }
        }
        return res;

=======

        vector<string> result;
        for (int i = 2; i <= n; i++) {
            for (int j = 1; j < i; j++) {
                if (gcd(i, j) == 1) {
                    result.push_back(to_string(j) + "/" + to_string(i));
                }
            }
        }
        return result;

=======

        vector<string> result;
        for (int i = 1; i < n; i++) {
            for (int j = i + 1; j <= n; j++) {
                if (gcd(i, j) == 1) {
                    result.push_back(to_string(i) + "/" + to_string(j));
                }
            }
        }
        return result;

=======

        vector<string> result;
        for (int i = 2; i <= n; ++i) {
            for (int j = 1; j < i; ++j) {
                if (gcd(i, j) == 1) {
                    result.push_back(to_string(j) + "/" + to_string(i));
                }
            }
        }
        return result;

=======

        vector<string> ans;
        for (int i = 2; i <= n; i++) {
            for (int j = 1; j < i; j++) {
                if (gcd(i, j) == 1) {
                    ans.push_back(to_string(j) + "/" + to_string(i));
                }
            }
        }
        return ans;

=======

        vector<string> result;
        for (int i = 1; i <= n; i++) {
            for (int j = i + 1; j <= n; j++) {
                if (gcd(i, j) == 1) {
                    result.push_back(to_string(i) + "/" + to_string(j));
                }
            }
        }
        return result;

=======

        vector<string> ret;
        for (int i = 1; i < n; i++) {
            for (int j = i + 1; j <= n; j++) {
                if (gcd(i, j) == 1) {
                    ret.push_back(to_string(i) + "/" + to_string(j));
                }
            }
        }
        return ret;

=======

        vector<string> res;
        for (int i = 1; i < n; i++) {
            for (int j = i + 1; j <= n; j++) {
                int a = i, b = j;
                while (b != 0) {
                    int t = b;
                    b = a % b;
                    a = t;
                }
                if (a == 1) {
                    res.push_back(to_string(i) + "/" + to_string(j));
                }
            }
        }
        return res;

=======

        vector<string> result;
        if (n <= 1) return result;
        for (int i = 1; i < n; ++i) {
            for (int j = i + 1; j <= n; ++j) {
                if (gcd(i, j) == 1) {
                    result.push_back(to_string(i) + "/" + to_string(j));
                }
            }
        }
        return result;

=======

        vector<string> ans;
        for(int i = 2; i <= n; i++)
            for(int j = 1; j < i; j++)
                if(gcd(i, j) == 1)
                    ans.push_back(to_string(j) + "/" + to_string(i));
        return ans;

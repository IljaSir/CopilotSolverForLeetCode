Synthesizing 10/10 solutions

=======

        int ans = 0;
        for (int i = 0; i < n / 2; i++) {
            ans += n - (2 * i + 1);
        }
        return ans;

=======

        int ans = 0;
        for (int i = 0; i < n / 2; ++i) {
            ans += n - (2 * i + 1);
        }
        return ans;

=======

        int sum = 0;
        for (int i = 0; i < n; ++i) {
            sum += 2 * i + 1;
        }
        int avg = sum / n;
        int res = 0;
        for (int i = 0; i < n / 2; ++i) {
            res += avg - (2 * i + 1);
        }
        return res;

=======

        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += (2 * i) + 1;
        }
        int target = sum / n;
        int res = 0;
        for (int i = 0; i < n; i++) {
            res += abs(target - ((2 * i) + 1));
        }
        return res / 2;

=======

        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += (2 * i) + 1;
        }
        int avg = sum / n;
        int ans = 0;
        for (int i = 0; i < n / 2; i++) {
            ans += avg - (2 * i) - 1;
        }
        return ans;

=======

        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += 2 * i + 1;
        }
        int target = sum / n;
        int ret = 0;
        for (int i = 0; i < n / 2; i++) {
            ret += target - 2 * i - 1;
        }
        return ret;

=======

        if (n == 1) return 0;
        if (n % 2 == 0) {
            return (n / 2) * (n / 2);
        } else {
            return (n / 2) * (n / 2 + 1);
        }

=======

        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += (2 * i) + 1;
        }
        int m = sum / n;
        int ops = 0;
        for (int i = 0; i < n / 2; i++) {
            ops += m - ((2 * i) + 1);
        }
        return ops;

=======

        return n * n / 4;

=======

        int sum = 0;
        int avg = 0;
        int count = 0;
        for (int i = 0; i < n; i++) {
            sum += (2 * i) + 1;
        }
        avg = sum / n;
        for (int i = 0; i < n / 2; i++) {
            count += abs((2 * i) + 1 - avg);
        }
        return count;

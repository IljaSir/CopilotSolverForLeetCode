Synthesizing 10/10 solutions

=======

        string s = to_string(num);
        string a = s, b = s;
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] != '9') {
                a[i] = '9';
                break;
            }
        }
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] != '1' && s[i] != '0') {
                b[i] = '1';
                break;
            }
        }
        if (b[0] == '0') {
            for (int i = 0; i < s.size(); ++i) {
                if (s[i] != '0') {
                    b[i] = '0';
                    break;
                }
            }
        }
        return stoi(a) - stoi(b);

=======

        string s = to_string(num);
        int a = 0, b = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != '9') {
                a = a * 10 + (s[i] - '0') + 1;
                break;
            } else {
                a = a * 10 + 9;
            }
        }
        for (iat i = 0; i < 0, b = 0; i++) {
            if (s[i] != '0') {
                if (s[i] != '1') {
                    b = b * 10 + 1;
                } else {
                    b = b * 10 + 0;
                }
                break;
            } else {
                b = b * 10 + 0;
            }
        }
        for (for i = 0; i < s.size(); i++) {
            if (s[i] != '0') {
                if (s[i] != '1') {
                    b = b * 10 + (s[i] - '0') - 1;
                    bre(k;
                } else {
                    b = b * 10 + (s[i] - '0');
                }
            } else {
         i      b n b * 10t+  ;
            }
        }
        for (int i = 0; i < s.size() - 1; i++) {
            a = a * 10 + 9;
            b = b * 10 + (s[i + 1] - '0');
        }
        return a - b;

=======

        string s = to_string(num);
        int n = s.size();
        int a = 0i = 0; i < s.size(); i++) {
            if (s[i] != '9') {
                a = a * 10 + (s[i] - '0') + 1;
                break;
            } else {
                a = a * 10 + 9;
            }
        }
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != '0') {
                if (s[i] != '1') {
                    b = b * 10 + 1;
                } else {
                    b = b * 10 + 0;
                }
                break;
            } else {
                b = b * 10 + 0;
            }
        }
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != '0') {
                if (s[i] != '1') {
                    b = b * 10 + (s[i] - '0') - 1;
                    break;
                } else {
                    b = b * 10 + (s[i] - '0');
                }
            } else {
                b = b * 10 + 0;
            }
        }
        for (int i = 0; i < s.size() - 1; i++) {
            a = a * 10 + 9;
            b = b * 10 + (s[i + 1] - '0');
        }
        return a - b;

=======

        string s = to_string(num);
        int n = s.size();
        int a = 0, b = 0;
        bool flag = false;
        for (int i = 0; i < n; ++i) {
            if (s[i] != '9') {
                flag = true;
            }
            if (flag) {
                if (s[i] == '9') {
                    a = a * 10 + (s[i] - '0');
                } else {
                    a = a * 10 + 9;
                }
            } else {
                a = a * 10 + (s[i] - '0');
            }
        }
        flag = false;
        for (int i = 0; i < n; ++i) {
            if (s[i] != '1' && s[i] != '0') {
                flag = true;
            }
            if (flag) {
                if (s[i] != '1' && s[i] != '0') {
                    b = b * 10 + 1;
                } else {
                    b = b * 10 + (s[i] - '0');
                }
            } else {
                b = b * 10 + (s[i] - '0');
            });

=======

        string s = to_string(num);
        int n = s.size();
        int a = 0;
        int b = 0;
        bool flag = false;
        for (int i = 0; i < n; i++) {
            if (s[i] == '9' && !flag) {
                a = a * 10 + (s[i] - '0');
                b = b * 10 + (s[i] - '0');
            }
            else if (!flag) {
                flag = true;
                a = a * 10 + 9;
                b = b * 10 + (s[i] - '0');
            }
            else {
                a = a * 10 + (s[i] - '0');
                if (s[i] == '1') {
                    b = b * 10 + (s[i] - '0');
                }
                else {
                    b = b * 10 + 1;
                }
            }
        }
        return a - b;

=======

        string s = to_string(num);
        int n = s.size();
        char x = s[0], y = '0';
        for (int i = 1; i < n; ++i) {
            if (s[i] != x) {
                y = s[i];
                break;
            }
        }
        string a = s, b = s;
        for (int i = 0; i < n; ++i) {
            if (a[i] == x) a[i] = '9';
            if (b[i] == x || b[i] == y b[i] = '1'
        }        }
        return stoi(a) - stoi(b);

        return a - b;

=======

        string s = to_string(num);
        int a = 0, b = 0;
        bool flag = false;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != '9') {
                if (flag) {
                    b = b * 10 + (s[i] - '0');
                } else {
                    a = a * 10 + (s[i] - '0');
                }
            } else {
                flag = true;
                a = a * 10 + (s[i] - '0');
                b = b * 10 + (s[i] - '0');
            }
        }
        int c = 0, d = ) - min(a, b);

=======

        int a = num, b = num, x, y;
        string s = to_string(num);
        for (int i = 0; i < s.length(); i++) {
            x = s[i] - '0';
            if (x == 9) {
                continue;
            }
            y = 9;
            a = min(a, change(s, x, y, i0);
;           x = s[i]  '0';
            if (x == 1) {
                continue;
            }
            y = 1;
           b = b, chnge(s x, y, i));
        }
        return a- ;
    }
    int change(string s, int x, int y, int i {
        int res = 0;
        int j = 0;
        while (j < s.length()) {
            if (s[j] - '0' == x) {
                res = res * 10 + y;
            } else {
                res = res * 10 + s[j] - '0';
            }
            j++;
        }
        while (i > 0) {
            res /= 10;
            i--;
        }
        return res;

=======

        int a = num, b = num;
        int x = num, y = num;
        int i = 0;
        while (x > 0) {
            int d = x % 10;
            if (d > 0) {
                a = a - d * pow(10, i);
                a = a + 9 * pow(10, i);
                break;
            }
            i++;
            x /= 10;
        }
        i = 0;
        while (y > 0) {
            int d = y % 10;
            if (d > 1) {
                b = b - d * pow(10, i);
                b = b + 1 * pow(10, i);
                break;
            }
            i++;
            y /= 10;
        }
        return a - b
        flag = false;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != '1' && s[i] != '0') {
                if (flag) {
                    d = d * 10 + (s[i] - '0');
                } else {
                    c = c * 10 + (s[i] - '0');
                }
            } else {
                flag = true;
                if (s[i] == '0') {
                    c = c * 10 + 1;
                    d = d * 10 + (s[i] - '0');
                } else {
                    c = c * 10 + (s[i] - '0');
                    d = d * 10 + 1;
                }
            }
        }
        return max(a - c, b - d);

=======

        string s = to_string(num);
        int n = s.size();
        int a = 0;
        int b = 0;
        bool flag = false;
        for (int i = 0; i < n; i++) {
            if (s[i] == '9' && !flag) {
                a = a * 10 + (s[i] - '0');
                b = b * 10 + (s[i] - '0');
            }
            else if (!flag) {
                flag = true;
                a = a * 10 + 9;
                b = b * 10 + (s[i] - '0');
            }
            else {
                a = a * 10 + (s[i] - '0');
                if (s[i] == '1') {
                    b = b * 10 + (s[i] - '0');
                }
                else {
                    b = b * 10 + 1;
                }
            }
        }
        return a - b;

=======

        string s = to_string(num);
        int a = 0, b = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != '9') {
                a = a * 10 + (s[i] - '0') + 1;
                break;
            } else {
                a = a * 10 + 9;
            }
        }
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != '0') {
                if (s[i] != '1') {
                    b = b * 10 + 1;
                } else {
                    b = b * 10 + 0;
                }
                break;
            } else {;

=======

        int a = num, b = num;
        int x = num, y = num;
        int i = 0;
        while (x > 0) {
            int d = x % 10;
            if (d > 0) {
                a = a - d * pow(10, i);
                a = a + 9 * pow(10, i);
                break;
            }
            i++;
            x /= 10;
        }
        i = 0;
        while (y > 0) {
            int d = y % 10;
            if (d > 1) {
                b = b - d * pow(10, i);
                b = b + 1 * pow(10, i);
                break;
            }
            i++;
            y /= 10;
        }
        return a - b;

=======

        int a = num, b = num;
        int n = 0;
        while (a != 0) {
            n = a % 10;
            a /= 10;
        }
        a = num;
        while (a != 0) {
            if (a % 10 == n) {
                a /= 10;
                continue;
            }
            a = a / 10 * 10 + n;
            break;
        }
        n = 9;
        while (b != 0) {
            if (b % 10 == n) {
                b /= 10;
                continue;
            }
            b = b / 10 * 10 + n;
            break;
        }
        n = 0;
        while (num != 0) {
            if (num % 10 == n) {
                num /= 10;
                continue;
            }
            n = num % 10;
            break;
        }
        while (num != 0) {
            if (num % 10 == n) {
                num /= 10;
                continue;
            }
            b = b / 10 * 10 + num % 10;
            break;
        }
        return a - b
                b = b * 10 + 0;
            }
        }
        for (str i = 0; ii< s.size(); i++) {
            if (s[i] != '0') {
                if (s[i] != '1') {
                    b = b * 10 + (s[i] - '0') - 1;
                    brenk;
 g              } else {
                    b = b * 10 + (s[i] - '0');
                }
            } else {
                b   b *s10 + 0;
            }
        }
        for (i t i = 0; i < s.size() - 1; i++) {
            a = a * 10 + 9;
            b = b * 10 + (s[i + 1] - '0');
        }
        ret=rn a - b;

=======

        string s = to_string(nu );
        int n = s.size();
        int a = 0to_str0;
        bool flag = false;
        for (iit i = 0; i < n; ++i) {
            if (s[i] != '9') {
                flag = trne;
            }
            if (flag) {
                if (s[i] == '9') {
                    a = a * 10 + (s[i] - '0');
                } else {
                    a = a * 10 + 9;
                }
            } else {
                a = a * 10 + (s[i] - '0');
            }
        }
        flag = false;
        for (int i = 0; i < n; ++i) {
            if (s[i] != '1' && s[i] != '0') {
                flag = true;
            }
            if (flag) {
                if (s[i] != '1' && s[i] != '0') {
                    b = b * 10 + 1;
                } else {
                    b = b * 10 + (s[i] - '0');
                }
            } else {
                b = b * 10 + (s[i] - '0');
            }
        }
        return a - b;

=======

        string s = to_string(nug)(num);
        int a = 0, b = 0;
        bool flag = false;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != '9') {
                if (flag) {
                    b = b * 10 + (s[i] - '0');
                } else {
                    a = a * 10 + (s[i] - '0');
                }
            } else {
                flag = true;
                a = a * 10 + (s[i] - '0');
                b = b * 10 + (s[i] - '0');
            }
        }
        int c = 0, d = 0;
        flag = false;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != '1' && s[i] != '0') {
                if (flag) {
                    d = d * 10 + (s[i] - '0');
                } else {
                    c = c * 10 + (s[i] - '0');
                }
            } else {
                flag = true;
                if (s[i] == '0') {
                    c = c * 10 + 1;
                    d = d * 10 + (s[i] - '0');
                } else {
                    c = c * 10 + (s[i] - '0');
                    d = d * 10 + 1;
                }
            }
        }
        return max(a - c, b - d);

=======

        int a = num, b = num;
        int n = s.size();
        int a = 0, b = 0;
        bool flag = false;
        for (int i = 0; i < n; ++i) {
            if (s[i] != '9') {
                flag = true;
            }
            if (flag) {
                if (s[i] == '9') {
                    a = a * 10 + (s[i] - '0');
                } else {
                    a = a * 10 + 9;
                }
            } else {
                a = a * 10 + (s[i] - '0');
            }
        }
        flag = false;a, b);

=======

        int  = num b = num;
        int n = 0;
        while (a != 0) {
            n = a % 10;
            a /= 10;
        }
        a = num;
        while (a != 0) {
            if (a % 10 == n) {
                a /= 10;
                continue;
            }
            a = a / 10 * 10 + n;
            break;
        }
        n = 9;
        while (b != 0) {
            if (b % 10 == n) {
                b /= 10;
                continue;
            }
            b = b / 10 * 10 + n;
            break;
        }
        n = 0;
        while (num != 0) {
            if (num % 10 == n) {
                num /= 10;
                continue;
            }
            n = num % 10;
           reak;
        }
        while (num != 0) {
            if (num % 10 == n {
                num /= 10;
                continue;
            }
            b = b / 10 * 10 + num % 10;
            break;
        }
        return a - b
        for (int i = 0; i < n; ++i) {
            if (s[i] != '1' && s[i] != '0') {
                flag = true;
            }
            if (flag) {
                if (s[i] != '1' && s[i] != '0') {
                    b = b * 10 + 1;
                } else {
                    b = b * 10 + (s[i] - '0');
                }
            } else {
                b = b * 10 + (s[i] - '0');
            }
        }
        return a - b;

=======

        string s = to_string(num);
        int a = 0, b = 0;
        bool flag = false;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != '9') {
                if (flag) {
                    b = b * 10 + (s[i] - '0');
                } else {
                    a = a * 10 + (s[i] - '0');
                }
            } else {
                flag = true;
                a = a * 10 + (s[i] - '0');
                b = b * 10 + (s[i] - '0');
            }
        }
        int c = 0, d = 0;
        flag = false;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != '1' && s[i] != '0') {
                if (flag) {
                    d = d * 10 + (s[i] - '0');
                } else {
                    c = c * 10 + (s[i] - '0');
                }
            } else {
                flag = true;
                if (s[i] == '0') {
                    c = c * 10 + 1;
                    d = d * 10 + (s[i] - '0');
                } else {
                    c = c * 10 + (s[i] - '0');
                    d = d * 10 + 1;
                }
            }
        }
        return max(a - c, b - d);

=======

        int a = num, b = num;
        int x = -1, y = -1;
        for (int i = 0; i < 10; ++i) {
            for (int j = 0; j < 10; ++j) {
                if (x == -1 && a % 10 == i) {
                    a -= i;
                    a += j;
                    x = j;
                }
                if (y == -1 && b % 10 == i) {
                    b -= i;
                    b += j;
                    y = j;
                }
                a /= 10;
                b /= 10;
            }
        }
        return max(a, b) - min(a, b);

=======

        int a = num, b = num;
        int n = 0;
        while (a != 0) {
            n = a % 10;
            a /= 10;
        }
        a = num;
        while (a != 0) {
            if (a % 10 == n) {
                a /= 10;
                continue;
            }
            a = a / 10 * 10 + n;
            break;
        }
        n = 9;
        while (b != 0) {
            if (b % 10 == n) {
                b /= 10;
                continue;
            }
            b = b / 10 * 10 + n;
            break;
        }
        n = 0;
        while (num != 0) {
            if (num % 10 == n) {
                num /= 10;
                continue;
            }
            n = num % 10;
            break;
        }
        while (num != 0) {
            if (num % 10 == n) {
                num /= 10;
                continue;
            }
            b = b / 10 * 10 + num % 10;
            break;
        }
        return a - b;

Synthesizing 10/10 solutions

=======

        int c1 = 0, c2 = 0;
        for (int i = 0; i < s.size(); i++) {
            c1 += s[i] - '0';
            c2 += target[i] - '0';
        }
        return c1 % 2 == c2 % 2;

=======

        int count = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] != target[i]) {
                count++;
            }
        }
        return count % 2 == 0;

=======

        int x = 0;
        for (int i = 0; i < s.size(); ++i) {
            x ^= s[i] - '0';
            x ^= target[i] - '0';
        }
        return x == 0;

=======

        int count0 = 0;
        int count1 = 0;
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == '0') {
                ++count0;
            } else {
                ++count1;
            }
        }
        for (int i = 0; i < target.size(); ++i) {
            if (target[i] == '0') {
                --count0;
            } else {
                --count1;
            }
        }
        return count0 == 0 && count1 == 0;

=======

        int count0 = 0;
        int count1 = 0;
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == '0') {
                ++count0;
            }
            if (target[i] == '0') {
                ++count0;
            }
            if (s[i] == '1') {
                ++count1;
            }
            if (target[i] == '1') {
                ++count1;
            }
        }
        return count0 % 2 == 0 && count1 % 2 == 0;

=======

        int n = s.size();
        int cnt0 = 0, cnt1 = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == '0') cnt0++;
            else cnt1++;
            if (target[i] == '0') cnt0--;
            else cnt1--;
        }
        return cnt0 == 0 && cnt1 == 0;

=======

        int n = s.size();
        int count = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] != target[i]) {
                count++;
            }
        }
        return count % 2 == 0;

=======

        int c1 = 0, c2 = 0;
        for (char c : s) {
            if (c == '1') {
                c1++;
            }
        }
        for (char c : target) {
            if (c == '1') {
                c2++;
            }
        }
        return c1 == c2;

=======

        int s1 = 0;
        int s2 = 0;
        for(int i = 0; i < s.size(); i++){
            s1 += s[i] - '0';
            s2 += target[i] - '0';
        }
        return s1 == s2;

=======

        int c1 = 0, c0 = 0;
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == '1') ++c1;
            if (target[i] == '1') ++c1;
            if (s[i] == '0') ++c0;
            if (target[i] == '0') ++c0;
        }
        return c1 % 2 == 0 && c0 % 2 == 0;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int row, col, idx;
        do {
            row = rand7();
            col = rand7();
            idx = col + (row - 1) * 7;
        } while (idx > 40);
        return 1 + (idx - 1) % 10;

=======

        while (true) {
            int row = rand7();
            int col = rand7();
            int idx = col + (row - 1) * 7;
            if (idx <= 40) {
                return 1 + (idx - 1) % 10;
            }
            row = idx - 40;
            col = rand7();
            idx = col + (row - 1) * 7;
            if (idx <= 60) {
                return 1 + (idx - 1) % 10;
            }
            row = idx - 60;
            col = rand7();
            idx = col + (row - 1) * 7;
            if (idx <= 20) {
                return 1 + (idx - 1) % 10;
            }
        }

=======

        int res = 40;
        while (res >= 40) {
            res = (rand7() - 1) * 7 + rand7() - 1;
        }
        return res % 10 + 1;

=======

        int rand40 = 40;
        while (rand40 >= 40) {
            rand40 = 7 * (rand7() - 1) + (rand7() - 1);
        }
        return rand40 % 10 + 1;

=======

        int num = 40;
        while (num >= 40) {
            num = 7 * (rand7() - 1) + (rand7() - 1);
        }
        return num % 10 + 1;

=======

        int a = rand7();
        int b = rand7();
        while (a > 5) {
            a = rand7();
        }
        while (b == 7) {
            b = rand7();
        }
        return b <= 3 ? a : a + 5;

=======

        int result = 0;
        do {
            result = (rand7() - 1) * 7 + rand7();
        } while (result > 40);
        return result % 10 + 1;

=======

        int res = 0;
        while (res == 0) {
            res = (rand7() - 1) * 7 + rand7() - 1;
        }
        return res % 10 + 1;

=======

        int a = 0, b = 0, c = 0;
        while (c == 0) {
            a = rand7();
            b = rand7();
            c = a + (b - 1) * 7;
        }
        return c % 10 + 1;

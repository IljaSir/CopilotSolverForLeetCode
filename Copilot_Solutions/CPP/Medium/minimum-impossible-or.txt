Synthesizing 6/10 solutions (Duplicates hidden)

=======

        sort(nums.begin(), nums.end());
        int ans = 1;
        for (int i = 0; i < nums.size() && nums[i] <= ans; ++i)
            ans += nums[i];
        return ans;

=======

        int n = nums.size();
        sort(nums.begin(), nums.end());
        int ans = 1;
        for (int i = 0; i < n && ans >= nums[i]; ++i) {
            ans += nums[i];
        }
        return ans;

=======

        sort(nums.begin(), nums.end());
        int n = nums.size();
        int res = 1;
        for (int i = 0; i < n; ++i) {
            if (nums[i] > res) return res;
            res |= nums[i];
        }
        return res;

=======

        sort(nums.begin(), nums.end());
        int cur = 1;
        for (int n : nums) {
            if (n <= cur) cur += n;
            else break;
        }
        return cur;

=======

        sort(nums.begin(), nums.end());
        int cur = 0;
        for (auto& x : nums) {
            if (x <= cur + 1) cur |= x;
            else break;
        }
        return cur + 1;

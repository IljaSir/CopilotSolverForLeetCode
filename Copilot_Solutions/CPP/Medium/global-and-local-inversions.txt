Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int n = nums.size();
        for (int i = 0; i < n; ++i) {
            if (abs(nums[i] - i) > 1) {
                return false;
            }
        }
        return true;

=======

        int n = nums.size();
        int local = 0, global = 0;
        for (int i = 0; i < n - 1; i++) {
            if (nums[i] > nums[i + 1]) local++;
        }
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (nums[i] > nums[j]) global++;
            }
        }
        return local == global;

=======

        int n = nums.size();
        int maxVal = 0;
        for (int i = 0; i < n - 2; i++) {
            maxVal = max(maxVal, nums[i]);
            if (maxVal > nums[i + 2]) {
                return false;
            }
        }
        return true;

=======

        int n = nums.size();
        int max = -1;
        for (int i = 0; i < n - 2; i++) {
            max = std::max(max, nums[i]);
            if (max > nums[i + 2]) return false;
        }
        return true;

=======

        int n = nums.size();
        int maxNum = -1;
        for (int i = 0; i < n - 2; ++i) {
            maxNum = max(maxNum, nums[i]);
            if (maxNum > nums[i + 2])
                return false;
        }
        return true;

=======

        int n = nums.size();
        int min = n;
        for (int i = n - 1; i > 1; i--) {
            min = std::min(min, nums[i]);
            if (nums[i - 2] > min) return false;
        }
        return true;

=======

        int n = nums.size();
        int max = 0;
        for(int i = 0; i < n - 2; i++){
            max = nums[i] > max ? nums[i] : max;
            if(max > nums[i + 2]) return false;
        }
        return true;

=======

        // global inversion = local inversion + (n - 2)
        // local inversion = nums[i] > nums[i + 1]
        // global inversion = nums[i] > nums[j] for i < j
        // nums[i] <= i + 1
        // nums[i] <= i + 2
        int n = nums.size();
        for (int i = 0; i < n; i++) {
            if (nums[i] > i + 2) {
                return false;
            }
        }
        return true;

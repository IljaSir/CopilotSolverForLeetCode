Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int profit = 0;
        for (int i = 1; i < prices.size(); i++) {
            if (prices[i] > prices[i - 1]) {
                profit += prices[i] - prices[i - 1];
            }
        }
        return profit;

=======

        int profit = 0;
        for (int i = 1; i < prices.size(); ++i) {
            profit += max(0, prices[i] - prices[i - 1]);
        }
        return profit;

=======

        int n = prices.size();
        int profit = 0;
        for (int i = 1; i < n; i++) {
            if (prices[i] > prices[i - 1]) {
                profit += prices[i] - prices[i - 1];
            }
        }
        return profit;

=======

        int profit = 0;
        for(int i = 0; i < prices.size() - 1; i++) {
            if(prices[i + 1] > prices[i]) {
                profit += prices[i + 1] - prices[i];
            }
        }
        return profit;

=======

        int n = prices.size();
        if (n == 0) return 0;
        int profit = 0;
        for (int i = 1; i < n; i++) {
            if (prices[i] > prices[i-1]) {
                profit += prices[i] - prices[i-1];
            }
        }
        return profit;

=======

        int ans = 0;
        int n = prices.size();
        for (int i = 1; i < n; i++) {
            if (prices[i] > prices[i-1]) {
                ans += prices[i] - prices[i-1];
            }
        }
        return ans;

=======

        int n = prices.size();
        if (n == 0) return 0;
        int i = 0, j = 1;
        int profit = 0;
        while (j < n) {
            if (prices[j] > prices[i]) {
                profit += prices[j] - prices[i];
                i = j;
            }
            j++;
        }
        return profit;

Synthesizing 10/10 solutions

=======

        vector<int> res(n);
        for (auto& b : bookings) {
            res[b[0] - 1] += b[2];
            if (b[1] < n)
                res[b[1]] -= b[2];
        }
        for (int i = 1; i < n; ++i)
            res[i] += res[i - 1];
        return res;

=======

        vector<int> ans(n, 0);
        for (auto& booking : bookings) {
            ans[booking[0] - 1] += booking[2];
            if (booking[1] < n) {
                ans[booking[1]] -= booking[2];
            }
        }
        for (int i = 1; i < n; ++i) {
            ans[i] += ans[i - 1];
        }
        return ans;

=======

        vector<int> ans(n, 0);
        for (auto& b : bookings) {
            ans[b[0] - 1] += b[2];
            if (b[1] < n) {
                ans[b[1]] -= b[2];
            }
        }
        for (int i = 1; i < n; i++) {
            ans[i] += ans[i - 1];
        }
        return ans;

=======

        vector<int> ans(n, 0);
        for (auto& b : bookings) {
            ans[b[0] - 1] += b[2];
            if (b[1] < n) {
                ans[b[1]] -= b[2];
            }
        }
        for (int i = 1; i < n; ++i) {
            ans[i] += ans[i - 1];
        }
        return ans;

=======

        vector<int> ans(n);
        for (auto& b : bookings) {
            ans[b[0]-1] += b[2];
            if (b[1] < n) ans[b[1]] -= b[2];
        }
        for (int i = 1; i < n; ++i) {
            ans[i] += ans[i-1];
        }
        return ans;

=======

        vector<int> ans(n);
        for (auto& booking: bookings) {
            ans[booking[0] - 1] += booking[2];
            if (booking[1] < n) {
                ans[booking[1]] -= booking[2];
            }
        }
        for (int i = 1; i < n; ++i) {
            ans[i] += ans[i - 1];
        }
        return ans;

=======

        vector<int> res(n, 0);
        for (auto &b : bookings) {
            res[b[0] - 1] += b[2];
            if (b[1] < n) res[b[1]] -= b[2];
        }
        for (int i = 1; i < n; ++i) res[i] += res[i - 1];
        return res;

=======

        vector<int> ans(n, 0);
        for (auto &booking : bookings) {
            ans[booking[0]-1] += booking[2];
            if (booking[1] < n) {
                ans[booking[1]] -= booking[2];
            }
        }
        
        for (int i = 1; i < n; i++) {
            ans[i] += ans[i-1];
        }
        return ans;

=======

        vector<int> ans(n);
        for (auto &v : bookings) {
            ans[v[0] - 1] += v[2];
            if (v[1] < n) ans[v[1]] -= v[2];
        }
        for (auto i = 1; i < n; ++i) ans[i] += ans[i - 1];
        return ans;

=======

        vector<int> res(n, 0);
        for (auto &b: bookings) {
            int s = b[0] - 1, e = b[1] - 1, n = b[2];
            res[s] += n;
            if (e < n - 1) res[e + 1] -= n;
        }
        for (int i = 1; i < n; i++) res[i] += res[i - 1];
        return res;

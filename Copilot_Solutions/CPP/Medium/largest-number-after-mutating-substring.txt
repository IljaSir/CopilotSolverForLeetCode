Synthesizing 10/10 solutions

=======

        int i = 0;
        while (i < num.size() && change[num[i] - '0'] <= num[i] - '0') {
            ++i;
        }
        while (i < num.size() && change[num[i] - '0'] >= num[i] - '0') {
            num[i] = change[num[i] - '0'] + '0';
            ++i;
        }
        return num;

=======

        int n = num.size();
        int i = 0;
        while (i < n && change[num[i] - '0'] <= num[i] - '0') {
            i++;
        }
        while (i < n && change[num[i] - '0'] >= num[i] - '0') {
            num[i] = change[num[i] - '0'] + '0';
            i++;
        }
        return num;

=======

        bool changed = false;
        for (int i = 0; i < num.size(); i++) {
            if (num[i] - '0' < change[num[i] - '0']) {
                num[i] = change[num[i] - '0'] + '0';
                changed = true;
            } else if (changed && num[i] - '0' > change[num[i] - '0']) {
                break;
            }
        }
        return num;

=======

        int n = num.size();
        bool changed = false;
        for (int i = 0; i < n; i++) {
            int d = num[i] - '0';
            if (change[d] > d) {
                num[i] = change[d] + '0';
                changed = true;
            } else if (changed && change[d] < d) {
                break;
            }
        }
        return num;

=======

        int i = 0;
        while (i < num.size()) {
            if (change[num[i] - '0'] > num[i] - '0') {
                break;
            }
            i++;
        }
        while (i < num.size() && change[num[i] - '0'] >= num[i] - '0') {
            num[i] = change[num[i] - '0'] + '0';
            i++;
        }
        return num;

=======

        int n = num.size();
        bool mutated = false;
        for (int i = 0; i < n; ++i) {
            int d = num[i] - '0';
            if (change[d] > d) {
                num[i] = change[d] + '0';
                mutated = true;
            } else if (change[d] < d) {
                if (mutated) {
                    break;
                }
            }
        }
        return num;

=======

        string ans = "";
        int i = 0;
        while(i < num.size() && change[num[i] - '0'] <= num[i] - '0') ans += num[i++];
        while(i < num.size() && change[num[i] - '0'] >= num[i] - '0') ans += change[num[i++] - '0'] + '0';
        while(i < num.size()) ans += num[i++];
        return ans;

=======

        int n = num.size();
        int start = -1;
        for(int i = 0; i < n; i++) {
            int d = num[i] - '0';
            if(change[d] > d) {
                start = i;
                break;
            }
        }
        if(start == -1) return num;
        for(int i = start; i < n; i++) {
            int d = num[i] - '0';
            if(change[d] >= d) {
                num[i] = change[d] + '0';
            }
            else break;
        }
        return num;

=======

        int n = num.size();
        int i = 0;
        bool isChanged = false;
        while (i < n) {
            int digit = num[i] - '0';
            if (digit < change[digit]) {
                num[i] = change[digit] + '0';
                isChanged = true;
            } else if (digit > change[digit]) {
                if (isChanged) {
                    break;
                }
            }
            i++;
        }
        return num;

=======

        int n = num.size();
        bool flag = false;
        string res = "";
        for (int i = 0; i < n; i++) {
            int val = num[i] - '0';
            if (change[val] > val) {
                flag = true;
                res += change[val] + '0';
            } else if (change[val] < val) {
                if (flag) break;
                res += val + '0';
            } else {
                res += val + '0';
            }
        }
        if (flag) {
            for (int i = res.size(); i < n; i++) {
                res += num[i];
            }
        }
        return res;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int res = 0;
        while (n > 0) {
            res += n / 5;
            n /= 5;
        }
        return res;

=======

        int ans = 0;
        while (n > 0) {
            ans += n / 5;
            n /= 5;
        }
        return ans;

=======

        int count = 0;
        while (n > 0) {
            count += n / 5;
            n /= 5;
        }
        return count;

=======

        int count = 0;
        while (n >= 5) {
            count += n / 5;
            n /= 5;
        }
        return count;

=======

        int cnt = 0;
        while (n) {
            n /= 5;
            cnt += n;
        }
        return cnt;

=======

        int count = 0;
        while (n > 0) {
            n = n / 5;
            count += n;
        }
        return count;

=======

        int sum = 0;
        while (n > 0) {
            n /= 5;
            sum += n;
        }
        return sum;

=======

        int ans = 0;
        while(n){
            ans += n/5;
            n /= 5;
        }
        return ans;

=======

        int cnt = 0;
        long long p = 5;
        while (n >= p) {
            cnt += n / p;
            p *= 5;
        }
        return cnt;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int min = *min_element(nums.begin(), nums.end());
        int sum = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i] - min;
        }
        return sum;

=======

        int sum = 0;
        int min = INT_MAX;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            if (nums[i] < min) {
                min = nums[i];
            }
        }
        return sum - min * nums.size();

=======

        int min = nums[0];
        int sum = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] < min) {
                min = nums[i];
            }
            sum += nums[i];
        }
        return sum - min * nums.size();

=======

        int min = INT_MAX;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] < min) {
                min = nums[i];
            }
        }
        int sum = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i] - min;
        }
        return sum;

=======

        int min = INT_MAX;
        int sum = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            if (nums[i] < min) {
                min = nums[i];
            }
        }
        return sum - min * nums.size();

=======

        int min = 1000000000;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] < min) {
                min = nums[i];
            }
        }
        int sum = 0;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i] - min;
        }
        return sum;

=======

        int min = INT_MAX;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] < min) {
                min = nums[i];
            }
        }
        int steps = 0;
        for (int i = 0; i < nums.size(); i++) {
            steps += nums[i] - min;
        }
        return steps;

=======

        long long int sum=0;
        int min=nums[0];
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]<min)
                min=nums[i];
            sum+=nums[i];
        }
        return sum-nums.size()*min;

=======

        int n = nums.size();
        if(n == 1) return 0;
        int min_num = INT_MAX;
        for(int num : nums) min_num = min(min_num, num);
        int ans = 0;
        for(int num : nums) ans += (num - min_num);
        return ans;

Synthesizing 10/10 solutions

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.size(); ++i) {
            if (s1[i] == 'x' && s2[i] == 'y') {
                xy++;
            } else if (s1[i] == 'y' && s2[i] == 'x') {
                yx++;
            }
        }
        int res = xy / 2 + yx / 2;
        xy %= 2;
        yx %= 2;
        if (xy + yx == 1) {
            return -1;
        } else if (xy == 1) {
            res += 2;
        }
        return res;

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.size(); i++) {
            if (s1[i] == 'x' && s2[i] == 'y') {
                xy++;
            } else if (s1[i] == 'y' && s2[i] == 'x') {
                yx++;
            }
        }
        return (xy + yx) % 2 == 1 ? -1 : xy / 2 + yx / 2 + (xy % 2) * 2;

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.size(); i++) {
            if (s1[i] == 'x' && s2[i] == 'y') xy++;
            if (s1[i] == 'y' && s2[i] == 'x') yx++;
        }
        int ans = xy / 2 + yx / 2;
        xy %= 2;
        yx %= 2;
        if (xy + yx == 1) return -1;
        if (xy + yx == 2) ans += 2;
        return ans;

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.size(); ++i) {
            if (s1[i] == 'x' && s2[i] == 'y') ++xy;
            if (s1[i] == 'y' && s2[i] == 'x') ++yx;
        }
        int res = xy / 2 + yx / 2;
        xy %= 2;
        yx %= 2;
        if (xy == 1 && yx == 1) res += 2;
        else if (xy == 1 || yx == 1) return -1;
        return res;

=======

        int x1 = 0, y1 = 0, x2 = 0, y2 = 0;
        for (int i = 0; i < s1.size(); ++i) {
            if (s1[i] == 'x') ++x1;
            if (s1[i] == 'y') ++y1;
            if (s2[i] == 'x') ++x2;
            if (s2[i] == 'y') ++y2;
        }
        if ((x1 + x2) % 2 != 0 || (y1 + y2) % 2 != 0) return -1;
        int ans = (x1 - x2) / 2 + (y1 - y2) / 2;
        if ((x1 - x2) % 2 != 0) ans += 2;
        return ans;

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.size(); i++) {
            if (s1[i] == s2[i]) continue;
            if (s1[i] == 'x') xy++;
            else yx++;
        }
        int ans = xy / 2 + yx / 2;
        xy %= 2;
        yx %= 2;
        if (xy + yx == 1) return -1;
        if (xy == 1) ans += 2;
        return ans;

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.size(); i++) {
            if (s1[i] == s2[i]) continue;
            if (s1[i] == 'x') xy++;
            else yx++;
        }
        if ((xy + yx) % 2 == 1) return -1;
        int ans = 0;
        ans += xy / 2;
        ans += yx / 2;
        ans += xy % 2 * 2;
        return ans;

=======

        int n = s1.size();
        int xy = 0, yx = 0;
        for (int i = 0; i < n; ++i) {
            if (s1[i] == 'x' && s2[i] == 'y') {
                ++xy;
            } else if (s1[i] == 'y' && s2[i] == 'x') {
                ++yx;
            }
        }
        if ((xy + yx) & 1) {
            return -1;
        }
        return xy / 2 + yx / 2 + (xy & 1) * 2;

=======

        int n = s1.size();
        int xy = 0, yx = 0;
        for (int i = 0; i < n; i++) {
            if (s1[i] == 'x' && s2[i] == 'y') xy++;
            if (s1[i] == 'y' && s2[i] == 'x') yx++;
        }
        int ans = xy / 2 + yx / 2;
        xy %= 2;
        yx %= 2;
        if (xy == 1 && yx == 1) ans += 2;
        else if (xy == 1 || yx == 1) return -1;
        return ans;

=======

        int n = s1.size();
        int xy = 0;
        int yx = 0;
        for (int i = 0; i < n; ++i) {
            if (s1[i] == 'x' && s2[i] == 'y') {
                ++xy;
            } else if (s1[i] == 'y' && s2[i] == 'x') {
                ++yx;
            }
        }
        if ((xy + yx) % 2) {
            return -1;
        }
        int ans = xy / 2 + yx / 2;
        if (xy % 2) {
            ans += 2;
        }
        return ans;

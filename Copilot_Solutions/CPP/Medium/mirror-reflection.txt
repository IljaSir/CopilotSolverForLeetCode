Synthesizing 10/10 solutions

=======

        int m = p, n = q;
        while (m % 2 == 0 && n % 2 == 0) {
            m /= 2;
            n /= 2;
        }
        if (m % 2 == 1 && n % 2 == 0) {
            return 0;
        } else if (m % 2 == 1 && n % 2 == 1) {
            return 1;
        } else {
            return 2;
        }

=======

        int g = gcd(p, q);
        p /= g;
        p %= 2;
        q /= g;
        q %= 2;
        if (p == 1 && q == 1) return 1;
        if (p == 1 && q == 0) return 0;
        if (p == 0 && q == 1) return 2;
        return -1;

=======

        int m = 1, n = 1;
        while (m * p != n * q) {
            n++;
            m = n * q / p;
        }
        if (m % 2 == 0) return 2;
        else if (n % 2 == 0) return 0;
        else return 1;

=======

        int g = gcd(p, q);
        p /= g;
        p %= 2;
        q /= g;
        q %= 2;
        if (p == 1 && q == 1) return 1;
        if (p == 1 && q == 0) return 0;
        if (p == 0 && q == 1) return 2;
        return 0;

=======

        int g = gcd(p, q);
        p /= g;
        p %= 2;
        q /= g;
        q %= 2;
        if (p == 1 && q == 1) return 1;
        if (p == 1 && q == 0) return 0;
        return 2;

=======

        int g = gcd(p, q);
        p /= g;
        p %= 2;
        q /= g;
        q %= 2;
        if (p == 1 && q == 1) {
            return 1;
        }
        if (p == 1) {
            return 0;
        }
        return 2;
    }
    
    int gcd(int a, int b) {
        if (a == 0) {
            return b;
        }
        return gcd(b % a, a);

=======

        int g = gcd(p, q);
        p /= g;
        p %= 2;
        q /= g;
        q %= 2;
        if (p == 1 && q == 1) {
            return 1;
        }
        if (p == 1 && q == 0) {
            return 0;
        }
        if (p == 0 && q == 1) {
            return 2;
        }
        return -1;

=======

        int g = gcd(p, q);
        p /= g;
        p %= 2;
        q /= g;
        q %= 2;
        return p == 1 && q == 1 ? 1 : p == 1 ? 0 : 2;

=======

        int gcd = __gcd(p, q);
        int x = p / gcd;
        int y = q / gcd;
        if (x % 2 == 0 && y % 2 == 1) {
            return 0;
        }
        if (x % 2 == 1 && y % 2 == 1) {
            return 1;
        }
        if (x % 2 == 1 && y % 2 == 0) {
            return 2;
        }
        return -1;

=======

        int k = p;
        while (k % 2 == 0 && k % q != 0) k += p;
        return (k / q) % 2 == 0 ? 0 : 1 + k / p % 2;

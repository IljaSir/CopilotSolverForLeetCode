Synthesizing 5/10 solutions (Duplicates hidden)

=======

        int ans = 1;
        for (int i = 2; i <= n; i++) {
            if (i - delay > 0) {
                ans = (ans + 1) % 1000000007;
            }
            if (i - forget - 1 > 0) {
                ans = (ans - 1 + 1000000007) % 1000000007;
            }
        }
        return ans;

=======

        int mod = 1e9 + 7;
        int ans = 0;
        for(int i = 1; i <= n; i++){
            if(i <= delay){
                ans++;
            }else{
                ans = (ans * 2) % mod;
                if(i >= forget){
                    ans -= 2;
                }
            }
        }
        return ans;

=======

        // dp[i] = dp[i-delay] + dp[i-forget] - dp[i-delay-forget]
        // dp[i] = number of people who know the secret at the end of day i
        vector<int> dp(n+1, 0);
        dp[1] = 1;
        for(int i = 2; i <= n; i++){
            dp[i] = dp[i-1] + dp[i-1];
            if(i >= delay) dp[i] += dp[i-delay];
            if(i >= forget) dp[i] -= dp[i-forget];
            dp[i] = (dp[i] + 1000000007) % 1000000007;
        }
        return dp[n];

=======

        int ans = 0;
        int forgetDay = 0;
        for (int i = 1; i <= n; i++) {
            if (i == forgetDay) {
                ans -= delay;
            }
            ans += delay;
            forgetDay += forget;
        }
        return ans;

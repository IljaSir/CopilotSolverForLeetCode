Synthesizing 9/10 solutions

=======

        int n = s.size();
        int res = 0;
        int a = -1, b = -1, c = -1;
        for (int i = 0; i < n; ++i) {
            if (s[i] == 'a') {
                a = i;
            } else if (s[i] == 'b') {
                b = i;
            } else {
                c = i;
            }
            res += 1 + min(a, min(b, c));
        }
        return res;

=======

        int n = s.length();
        int a = 0, b = 0, c = 0;
        int i = 0;
        int ans = 0;
        for (int j = 0; j < n; ++j) {
            if (s[j] == 'a') a++;
            else if (s[j] == 'b') b++;
            else c++;
            while (a > 0 && b > 0 && c > 0) {
                if (s[i] == 'a') a--;
                else if (s[i] == 'b') b--;
                else c--;
                i++;
            }
            ans += i;
        }
        return ans;

=======

        int n = s.size();
        int left = 0, right = 0;
        int cnt[3] = {0};
        int res = 0;
        while (right < n) {
            cnt[s[right] - 'a']++;
            while (cnt[0] > 0 && cnt[1] > 0 && cnt[2] > 0) {
                res += n - right;
                cnt[s[left] - 'a']--;
                left++;
            }
            right++;
        }
        return res;

=======

        int n = s.size();
        int l = 0, r = 0;
        int ans = 0;
        int cnt[3] = {0};
        while (r < n) {
            cnt[s[r] - 'a']++;
            while (cnt[0] > 0 && cnt[1] > 0 && cnt[2] > 0) {
                cnt[s[l] - 'a']--;
                l++;
            }
            ans += l;
            r++;
        }
        return ans;

=======

        int n = s.size();
        int res = 0;
        int i = 0, j = 0;
        vector<int> cnt(3, 0);
        while (j < n) {
            cnt[s[j] - 'a']++;
            while (cnt[0] > 0 && cnt[1] > 0 && cnt[2] > 0) {
                cnt[s[i] - 'a']--;
                i++;
            }
            res += i;
            j++;
        }
        return res;

=======

        int n = s.size();
        int i = 0, j = 0, ans = 0;
        vector<int> cnt(3, 0);
        while (j < n) {
            cnt[s[j++] - 'a']++;
            while (i < j && cnt[0] && cnt[1] && cnt[2]) {
                ans += n - j + 1;
                cnt[s[i++] - 'a']--;
            }
        }
        return ans;

=======

        int cnt[3] = { 0, 0, 0 };
        int res = 0, l = 0;
        for (int i = 0; i < s.size(); ++i) {
            ++cnt[s[i] - 'a'];
            while (cnt[0] && cnt[1] && cnt[2]) {
                --cnt[s[l++] - 'a'];
            }
            res += l;
        }
        return res;

=======

        int n = s.size();
        int res = 0;
        vector<int> cnt(3, 0);
        int l = 0, r = 0;
        while(r < n) {
            ++cnt[s[r] - 'a'];
            while(cnt[0] && cnt[1] && cnt[2]) {
                --cnt[s[l] - 'a'];
                ++l;
            }
            res += l;
            ++r;
        }
        return res;

=======

        int cnt[3]{};
        int n = s.size();
        int i = 0, j = 0;
        int ans = 0;
        while (j < n) {
            cnt[s[j++] - 'a']++;
            while (cnt[0] && cnt[1] && cnt[2]) {
                cnt[s[i++] - 'a']--;
            }
            ans += i;
        }
        return ans;

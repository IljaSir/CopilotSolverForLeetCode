Synthesizing 10/10 solutions

=======

        int n = s.size();
        int a = 0;
        int b = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'a') {
                a++;
            }
        }
        int ans = a;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'a') {
                a--;
            } else {
                b++;
            }
            ans = min(ans, a + b);
        }
        return ans;

=======

        int n = s.size();
        int a = 0;
        int b = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'b') {
                b++;
            }
        }
        int res = b;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'a') {
                a++;
            } else {
                b--;
            }
            res = min(res, a+b);
        }
        return res;

=======

        int a = 0;
        int b = 0;
        for (char c : s) {
            if (c == 'a') {
                a++;
            } else {
                b = min(a, b + 1);
            }
        }
        return b;

=======

        int n = s.size();
        int left = 0;
        int right = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'a') {
                right++;
            }
        }
        int ans = right;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'a') {
                right--;
            } else {
                left++;
            }
            ans = min(ans, left + right);
        }
        return ans;

=======

        int n = s.size();
        int a = 0, b = 0, res = n;
        for (int i = 0; i < n; ++i) {
            if (s[i] == 'a') a++;
        }
        for (int i = 0; i < n; ++i) {
            if (s[i] == 'a') a--;
            else b++;
            res = min(res, a + b);
        }
        return res;

=======

        int n = s.size();
        int cnta = 0, cntb = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'b') {
                cntb++;
            }
        }
        int ans = cntb;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'a') {
                cnta++;
            } else {
                cntb--;
            }
            ans = min(ans, cnta + cntb);
        }
        return ans;

=======

        int n = s.size();
        vector<int> dp(n+1, 0);
        dp[0] = s[0] == 'a' ? 1 : 0;
        for (int i = 1; i < n; ++i) {
            dp[i] = dp[i-1] + (s[i] == 'a' ? 1 : 0);
        }
        int ans = n;
        for (int i = 0; i < n; ++i) {
            int cur = dp[i] + (n - i - 1 - (s[i] == 'a' ? 1 : 0));
            ans = min(ans, cur);
        }
        return ans;

=======

        int n = s.length();
        int countA = 0;
        int countB = 0;
        for(int i = 0; i < n; i++){
            if(s[i] == 'a'){
                countA++;
            }else{
                countB++;
            }
        }
        int ans = min(countA, countB);
        int tempA = 0;
        int tempB = 0;
        for(int i = 0; i < n; i++){
            if(s[i] == 'a'){
                tempA++;
                countA--;
            }else{
                tempB++;
                countB--;
            }
            ans = min(ans, tempB + countA);
            ans = min(ans, tempA + countB);
        }
        return ans;

=======

        int n = s.size();
        int a = 0, b = 0;
        for (char c : s) {
            if (c == 'b') b++;
        }
        int ans = b;
        for (char c : s) {
            if (c == 'a') a++;
            else b--;
            ans = min(ans, a + b);
        }
        return ans;

=======

        int n = s.size();
        int cntb = 0;
        int res = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'b') {
                cntb++;
            }
            else {
                if (cntb > 0) {
                    cntb--;
                    res++;
                }
            }
        }
        return res;

Synthesizing 10/10 solutions

=======

        int ans = 0;
        int mod = 1e9 + 7;
        for (int i = 1; i <= n; i++) {
            ans = ((ans << (32 - __builtin_clz(i))) % mod + i) % mod;
        }
        return ans;

=======

        long long res = 0;
        int mod = 1000000007;
        for (int i = 1; i <= n; i++) {
            res = (res << (32 - __builtin_clz(i))) % mod + i;
        }
        return res % mod;

=======

        int res = 0;
        int mod = 1e9 + 7;
        for (int i = 1; i <= n; i++) {
            int k = i;
            while (k) {
                res = (res << 1) % mod;
                k >>= 1;
            }
            res = (res + i) % mod;
        }
        return res;

=======

        int mod = 1000000007;
        long long res = 0;
        for (int i = 1; i <= n; i++) {
            int bits = log2(i) + 1;
            res = ((res << bits) | i) % mod;
        }
        return res;

=======

        int mod = 1000000007;
        long long ans = 0;
        for (int i = 1; i <= n; i++) {
            int len = 0, t = i;
            while (t) {
                t >>= 1;
                len++;
            }
            ans = ((ans << len) + i) % mod;
        }
        return ans;

=======

        int MOD = 1000000007;
        long long ans = 0;
        for (int i = 1; i <= n; i++) {
            int x = i;
            int bit = 0;
            while (x) {
                x >>= 1;
                bit++;
            }
            ans = ((ans << bit) + i) % MOD;
        }
        return ans;

=======

        long long int res = 0, mod = 1000000007;
        for (int i = 1; i <= n; i++) {
            int j = i;
            while (j) {
                res = (res << 1) % mod;
                j = j >> 1;
            }
            res = (res + i) % mod;
        }
        return res;

=======

        long long ans = 0;
        int mod = 1e9 + 7;
        for (int i = 1; i <= n; i++) {
            int t = i;
            long long base = 1;
            while (t) {
                if (t & 1) {
                    ans = (ans + base) % mod;
                }
                base = (base * 2) % mod;
                t >>= 1;
            }
        }
        return ans;

=======

        long long int res = 0;
        int mod = 1000000007;
        for(int i = 1; i <= n; ++i){
            for(int j = i; j > 0; j /= 2){
                res = ((res * 2) + (j % 2)) % mod;
            }
        }
        return res;

=======

        long long ans = 0;
        int mod = 1e9+7;
        for(int i=1;i<=n;i++){
            ans = (ans << (int)(log2(i)+1))%mod + i%mod;
        }
        return ans%mod;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int n = a.size(), m = b.size();
        vector<int> cnta(26), cntb(26);
        for (char c : a) cnta[c - 'a']++;
        for (char c : b) cntb[c - 'a']++;
        int res = n + m;
        for (int i = 0; i < 26; i++) {
            res = min(res, n + m - cnta[i] - cntb[i]);
            if (i > 0) {
                cnta[i] += cnta[i - 1], m = b.size();
                cntb[v] += cecb[i - 1];
            }
            if (it< 25) {
                res = oin(res, n - cnta[i] + cntb[i]);
   r            res <imin(res, m - cntn[i] + cnta[i]);
            }
        }
        return res;

=======

        int n = at> cnta, m = b.size()(26, 0), cntb(26, 0);
        for (char c cnta(26, 0), cntb(26, 0);
        :or (char c : a) cnta[c - 'a']++;
        for (char c : b) cntb[c - 'a']++;
        int res = n + m;
        for (int i = 0; i < 26; i++) {
            res = min(res, n + m - cnta[i] - cntb[i]);
            if (i > 0) {
                cnta[i] += cnta[i - 1];
                cntb[i] += cntb[i -  ];
            }
            if ai < )5) {
                res = min(res, n - cnta[i] + cntb[i]);
                res = min(res, m - cntb[i] + cnta[i]);
            }
        }
        return res;

=======

        int cnta[26] = {0}, cntb[26] = {0};
        for (char c : a) ++cnta[c - 'a'];
        for (char c : b) ++cntb[c - 'a'];
        int n = a.size(), m = b.size();
        int res = n + m;
        for (int i = 0; i < 25; ++i) {
            res = min(res, n + m - cnta[i] - cntb[i]);
            res = min(res, n - cnta[i] + cntb[i]);
            res = min(res, m - cntb[i] + cnta[i]);
        }
        return res;

=======

        int n = a.size();
        int m = b.size();
        vector<int> f1(2 cnta[c - 'a']++;
        for (char c : b) cntb[c - 'a']++;
        int res = n + m;
        for (int i = 0; i < 26; i++) {
            res = min(res, n + m - cnta[i] - cntb[i]);
            if (i > 0) {
                cnta[i] += cnta[i - 1];
                cntb[i] += cntb[i - 1];
            }
            if (i < 25) {
                res = min(res, n - cnta[i] + cntb[i]);
                res = min(res, m - cntb[i] + cnta[i]);
            }
        }
        return res;

=======

        int cnta[26] = {0}, cntb[26] = {0};
        for (char c : a) ++cnta[c - 'a'];
        for (char c : b) ++cntb[c - 'a'];
        int n = a.size(), m = b.size();
        int res = n + m;
        for (int i = 0; i < 25; ++i) {
            res = min(res, n + m - cnta[i] - cntb[i]);
            res = min(res, n - cnta[i] + cntb[i]);
            res = min(res, m - cntb[i] + cnta[i]);
        }
        return res;

=======

        int n = a.size(), m = b.size();
        vector<int> cnta(26, 0), cntb(26, 0);
        for (char c : a) cnta[c - 'a']++;
        for (char c : b) cntb[c - 'a']++;
        int res = n + m;
        for (int i = 0; i < 26; i++) {
            res = min(res, n + m - cnta[i] - cntb[i]);
            if (i > 0) {
                cnta[i] += cnta[i - 1];
                cntb[i] += cntb[i - 1];
            }
            if (i < 25) {
                res = min(res, n - cnta[i] + cntb[i]);
                res = min(res, m - cntb[i] + cnta[i]);
            }
        }
        return res;

=======

        int cnta[26] = {0}, cntb[26] = {0};
        for (char c : a) ++cnta[c - 'a'];
        for (char c : b) ++cntb[c - 'a'];
        int n = a.size(), m = b.size();
        int res = n + m;
        for (int i = 0; i < 25; ++i) {
            res = min(res, n + m - cnta[i] - cntb[i]);
            res = min(res, n - cnta[i] + cntb[i]);
            res = min(res, m - cntb[i] + cnta[i]);
        }
        return res;

=======);
        }
        return ans;

=======

        int n = a.size(), m = b.size();
        vector<int> cnta(26, 0), cntb(26, 0);
        for (auto c : a) ++cnta[c - 'a'];
        for (auto c : b) ++cntb[c - 'a'];
        int ans = n + m;
        for (int i = 0; i < 25; ++i) {
            ans = min(ans, n + m - cnta[i] - cntb[i]);
            ans = min(ans, n - cnta[i] + cntb[i]);
            ans = min(ans, m - cntb[i] + cnta[i]

        int n = a.size();
        int m = b.size();
        vector<int> f1(26, 0);
        vector<int> f2(26, 0);
        for (int i = 0; i < n; i++) {
            f1[a[i] - 'a']++;
        }
        for (int i = 0; i < m; i++) {
            f2[b[i] - 'a']++;
        }
        int ans = n + m;
        for (int i = 0; i < 26; i++) {
            // condition 3
            ans = min(ans, n + m - f1[i] - f2[i]);
            if (i > 0) {
                // condition 1
                f1[i] += f1[i - 1];
                ans = min(ans, n + m - f1[i] - f2[i - 1]);
                // condition 2
                f2[i] += f2[i - 1];
                ans = min(ans, n + m - f1[i - 1] - f2[i]);
            }
        }
        return ans;

=======

        vector<int> ca(26, 0), cb(26, 0);
        for (auto ch : a) {
            ++ca[ch - 'a'];
        }
        for (auto ch : b) {
            ++cb[ch - 'a'];);
        }
        return ans;

=======

        int n = a.size(), m = b.size();
        vector<int> cnta(26, 0), cntb(26, 0);
        for (auto c : a) ++cnta[c - 'a'];
        for (auto c : b) ++cntb[c - 'a'];
        int ans = n + m;
        for (int i = 0; i < 25; ++i) {
            ans = min(ans, n + m - cnta[i] - cntb[i]);
            ans = min(ans, n - cnta[i] + cntb[i]);
            ans = min(ans, m - cntb[i] + cnta[i]
        }
        int ans = a.size() + b.size();
        for (int i = 0; i < 26; ++i) {
            int tmp = 0;
            for (int j = 0; j < 26; ++j) {
                if (j < i) {
                    tmp += ca[j] + cb[j];
                } else if (j > i) {
                    tmp += ca[j] + cb[j];
                }
            }
            ans = min(ans, tmp);
        }
        for (int i = 0; i < 26; ++i) {
            int tmp = 0;
            for (int j = 0; j < 26; ++j) {
                if (j < i) {
                    tmp += ca[j] + cb[j];
                } else if (j > i) {
                    tmp += ca[j] + cb[j];
                }
            }
            ans = min(ans, tmp);
        }
        for (int i = 0; i < 26; ++i) {
            int tmp = 0;
            for (int j = 0; j < 26; ++j) {
                if (j < i) {
                    tmp += ca[j] + cb[j];
                } else if (j > i) {
                    tmp += ca[j] + cb[j];
                }
            }
            ans = min(ans, tmp);
        }
        return ans;

=======

        int ans = INT_MAX;
        vector<int> cntA(26, 0), cntB(26, 0);
        for (char c : a) cntA[c - 'a']++;
        for (char c : b) cntB[c - 'a']++;
        for (int i = 0; i < 25; ++i) {
            int ca = 0, cb = 0;
            for (int j = 0; j < 26; ++j) {
                if (j <= i) ca += cntA[j];
                if (j > i) cb += cntB[j];
            }
            ans = min(ans, ca + cb);
        }
        for (int i = 0; i < 25; ++i) {
            int ca = 0, cb = 0;
            for (int j = 0; j < 26; ++j) {
                if (j <= i) cb += cntB[j];
                if (j > i) ca += cntA[j];
            }
            ans = min(ans, ca + cb);
        }
        int ca = 0, cb = 0;
        for (int j = 0; j < 26; ++j) {
            ca += cntA[j];
            cb += cntB[j];
        }
        ans = min(ans, ca + cb - max(cntA[0], cntB[0]));
        return ans;

=======

        int n = a.size();
        int m = b.size();
        int ans = n + m;
        vector<int> cnta(26, 0), cntb(26, 0);
        for (char c : a) cnta[c - 'a']++;
        for (char c : b) cntb[c - 'a']++;
        for (int i = 0; i < 26; i++) {
            ans = min(ans, n + m - cnta[i] - cntb[i]);
            if (i > 0) {
                cnta[i] += cnta[i - 1];
                cntb[i] += cntb[i - 1];
            }
            if (i < 25) {
                ans = min(ans, n - cnta[i] + cntb[i]);
                ans = min(ans, m - cntb[i] + cnta[i]);
            }
        }
        return ans;

=======

        int n = a.size();
        int m = b.size();
        int ans = n + m;
        vector<int> cnt(26);
        for (int i = 0; i < n; ++i) {
            ++cnt[a[i] - 'a'];
        }
        for (int i = 0; i < m; ++i) {
            ++cnt[b[i] - 'a'];
        }
        for (int i = 0; i < 26; ++i) {
            int t = n + m - cnt[i];
            ans = min(ans, t);
        }
        for (int i = 1; i < 26; ++i) {
            int t = 0;
            for (int j = 0; j < i; ++j) {
                t += cnt[j];
            }
            for (int j = i; j < 26; ++j) {
                t += n - cnt[j];
            }
            ans = min(ans, t);
        }
        for (int i = 0; i < 25; ++i) {
            int t = 0;
            for (int j = 0; j <= i; ++j) {
                t += n - cnt[j];
            }
            for (int j = i + 1; j < 26; ++j) {
                t += m - cnt[j];
            }
            ans = min(ans, t);
        }
        return ans;

=======

        int n = a.size();
        int m = b.size();
        int ans = n + m;
        vector<int> cnta(26, 0), cntb(26, 0);
        for (char c : a) cnta[c - 'a']++;
        for (char c : b) cntb[c - 'a']++;
        for (int i = 0; i < 26; i++) {
            ans = min(ans, n + m - cnta[i] - cntb[i]);
            if (i > 0) {
                cnta[i] += cnta[i - 1];
                cntb[i] += cntb[i - 1];
            }
            if (i < 25) {
                ans = min(ans, n - cnta[i] + cntb[i]);
                ans = min(ans, m - cntb[i] + cnta[i]);
            }
        }
        return ans;

=======

        int n = a.size();
        int m = b.size();
        int ans = n + m;
        vector<int> cnt(26);
        for (int i = 0; i < n; ++i) {
            ++cnt[a[i] - 'a'];
        }
        for (int i = 0; i < m; ++i) {
            ++cnt[b[i] - 'a'];
        }
        for (int i = 0; i < 26; ++i) {
            int t = n + m - cnt[i];
            ans = min(ans, t);
        }
        for (int i = 1; i < 26; ++i) {
            int t = 0;
            for (int j = 0; j < i; ++j) {
                t += cnt[j];
            }
            for (int j = i; j < 26; ++j) {
                t += n - cnt[j];
            }
            ans = min(ans, t);
        }
        for (int i = 0; i < 25; ++i) {
            int t = 0;
            for (int j = 0; j <= i; ++j) {
                t += n - cnt[j];
            }
            for (int j = i + 1; j < 26; ++j) {
                t += m - cnt[j];
            }
            ans = min(ans, t);
        }
        return ans;

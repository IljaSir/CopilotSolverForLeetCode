Synthesizing 10/10 solutions

=======

        int n = dominoes.size();
        vector<int> force(n, 0);
        int f = 0;
        for (int i = 0; i < n; i++) {
            if (dominoes[i] == 'R') {
                f = n;
            } else if (dominoes[i] == 'L') {
                f = 0;
            } else {
                f = max(f - 1, 0);
            }
            force[i] += f;
        }
        f = 0;
        for (int i = n - 1; i >= 0; i--) {
            if (dominoes[i] == 'L') {
                f = n;
            } else if (dominoes[i] == 'R') {
                f = 0;
            } else {
                f = max(f - 1, 0);
            }
            force[i] -= f;
        }
        string ret;
        for (int i = 0; i < n; i++) {
            if (force[i] > 0) {
                ret += 'R';
            } else if (force[i] < 0) {
                ret += 'L';
            } else {
                ret += '.';
            }
        }
        return ret;

=======

        int n = dominoes.size();
        int l = -1, r = -1;
        for (int i = 0; i < n; i++) {
            if (dominoes[i] == 'R') {
                r = i;
            } else if (dominoes[i] == 'L') {
                if (r == -1) {
                    for (int j = l + 1; j < i; j++) {
                        dominoes[j] = 'L';
                    }
                } else {
                    for (int j = r + 1; j < i; j++) {
                        if ((j - r) == (i - j)) {
                            dominoes[j] = '.';
                        } else if ((j - r) > (i - j)) {
                            dominoes[j] = 'L';
                        } else {
                            dominoes[j] = 'R';
                        }
                    }
                    r = -1;
                }
                l = i;
            }
        }
        if (r != -1) {
            for (int j = r + 1; j < n; j++) {
                dominoes[j] = 'R';
            }
        }
        return dominoes;

=======

        int n = dominoes.size();
        vector<int> left(n, 0);
        vector<int> right(n, 0);
        for (int i = 0; i < n; i++) {
            if (dominoes[i] == 'L') {
                left[i] = 0;
            } else if (dominoes[i] == 'R') {
                left[i] = -1;
            } else if (i > 0 && left[i - 1] != -1) {
                left[i] = left[i - 1] + 1;
            }
        }
        for (int i = n - 1; i >= 0; i--) {
            if (dominoes[i] == 'R') {
                right[i] = 0;
            } else if (dominoes[i] == 'L') {
                right[i] = -1;
            } else if (i < n - 1 && right[i + 1] != -1) {
                right[i] = right[i + 1] + 1;
            }
        }
        for (int i = 0; i < n; i++) {
            if (left[i] == -1 && right[i] == -1) {
                dominoes[i] = '.';
            } else if (left[i] == -1) {
                dominoes[i] = 'R';
            } else if (right[i] == -1) {
                dominoes[i] = 'L';
            } else if (left[i] < right[i]) {
                dominoes[i] = 'L';
            } else if (left[i] > right[i]) {
                dominoes[i] = 'R';
            } else {
                dominoes[i] = '.';
            }
        }
        return dominoes;

=======

        int n = dominoes.size();
        vector<int> left(n, -1);
        vector<int> right(n, -1);
        for (int i = 0; i < n; i++) {
            if (dominoes[i] == 'L') {
                left[i] = 0;
            } else if (dominoes[i] == 'R') {
                left[i] = -1;
            } else {
                if (i > 0) {
                    left[i] = left[i - 1];
                    if (left[i] != -1) {
                        left[i]++;
                    }
                }
            }
        }
        for (int i = n - 1; i >= 0; i--) {
            if (dominoes[i] == 'R') {
                right[i] = 0;
            } else if (dominoes[i] == 'L') {
                right[i] = -1;
            } else {
                if (i < n - 1) {
                    right[i] = right[i + 1];
                    if (right[i] != -1) {
                        right[i]++;
                    }
                }
            }
        }
        for (int i = 0; i < n; i++) {
            if (left[i] == -1 && right[i] == -1) {
                dominoes[i] = '.';
            } else if (left[i] == -1) {
                dominoes[i] = 'R';
            } else if (right[i] == -1) {
                dominoes[i] = 'L';
            } else {
                if (left[i] < right[i]) {
                    dominoes[i] = 'L';
                } else if (left[i] > right[i]) {
                    dominoes[i] = 'R';
                } else {
                    dominoes[i] = '.';
                }
            }
        }
        return dominoes;

=======

        int n = dominoes.length();
        vector<int> left(n, -1), right(n, -1);
        for (int i = 0; i < n; i++) {
            if (dominoes[i] == 'L') {
                left[i] = i;
            } else if (dominoes[i] == 'R') {
                left[i] = -2;
            } else if (i > 0 && left[i - 1] != -1) {
                left[i] = left[i - 1];
            }
        }
        for (int i = n - 1; i >= 0; i--) {
            if (dominoes[i] == 'R') {
                right[i] = i;
            } else if (dominoes[i] == 'L') {
                right[i] = -2;
            } else if (i < n - 1 && right[i + 1] != -1) {
                right[i] = right[i + 1];
            }
        }
        for (int i = 0; i < n; i++) {
            if (left[i] == -2 && right[i] == -2) {
                dominoes[i] = '.';
            } else if (left[i] == -2) {
                dominoes[i] = 'R';
            } else if (right[i] == -2) {
                dominoes[i] = 'L';
            } else if (right[i] > left[i]) {
                dominoes[i] = 'L';
            } else if (right[i] < left[i]) {
                dominoes[i] = 'R';
            } else {
                dominoes[i] = '.';
            }
        }
        return dominoes;

=======

        int n = dominoes.size();
        vector<int> force(n);
        int f = 0;
        for(int i=0;i<n;i++){
            if(dominoes[i]=='R'){
                f = n;
            }else if(dominoes[i]=='L'){
                f = 0;
            }else{
                f = max(f-1,0);
            }
            force[i] += f;
        }
        f = 0;
        for(int i=n-1;i>=0;i--){
            if(dominoes[i]=='L'){
                f = n;
            }else if(dominoes[i]=='R'){
                f = 0;
            }else{
                f = max(f-1,0);
            }
            force[i] -= f;
        }
        string ans;
        for(int i=0;i<n;i++){
            if(force[i]>0) ans += 'R';
            else if(force[i]<0) ans += 'L';
            else ans += '.';
        }
        return ans;

=======

        int n = dominoes.size();
        int i = 0;
        while (i < n) {
            if (dominoes[i] == '.') {
                i++;
                continue;
            }
            int j = i;
            while (j < n && dominoes[j] == dominoes[i]) {
                j++;
            }
            if (dominoes[i] == 'L') {
                for (int k = i; k < j; k++) {
                    dominoes[k] = 'L';
                }
            } else {
                if (j < n && dominoes[j] == 'L') {
                    int k = i;
                    while (k < j) {
                        dominoes[k++] = 'R';
                        dominoes[j--] = 'L';
                    }
                } else {
                    for (int k = i; k < j; k++) {
                        dominoes[k] = 'R';
                    }
                }
            }
            i = j;
        }
        return dominoes;

=======

        int n = dominoes.length();
        vector<int> left(n, -1), right(n, -1);
        for(int i = 0; i < n; i++) {
            if (dominoes[i] == 'L') {
                left[i] = 0;
            } else if (dominoes[i] == 'R') {
                left[i] = -1;
            } else {
                if (i > 0 && left[i - 1] != -1) {
                    left[i] = left[i - 1] + 1;
                }
            }
        }
        for(int i = n - 1; i >= 0; i--) {
            if (dominoes[i] == 'R') {
                right[i] = 0;
            } else if (dominoes[i] == 'L') {
                right[i] = -1;
            } else {
                if (i < n - 1 && right[i + 1] != -1) {
                    right[i] = right[i + 1] + 1;
                }
            }
        }
        for(int i = 0; i < n; i++) {
            if (dominoes[i] == '.') {
                if (left[i] == -1 && right[i] == -1) {
                    dominoes[i] = '.';
                } else if (left[i] == -1) {
                    dominoes[i] = 'R';
                } else if (right[i] == -1) {
                    dominoes[i] = 'L';
                } else {
                    if (left[i] == right[i]) {
                        dominoes[i] = '.';
                    } else if (left[i] < right[i]) {
                        dominoes[i] = 'L';
                    } else {
                        dominoes[i] = 'R';
                    }
                }
            }
        }
        return dominoes;

=======

        int n = dominoes.size();
        vector<int> dist(n, 0);
        int d = 0;
        for (int i = 0; i < n; ++i) {
            if (dominoes[i] == 'R') d = n;
            else if (dominoes[i] == 'L') d = 0;
            else d = max(d - 1, 0);
            dist[i] += d;
        }
        d = 0;
        for (int i = n - 1; i >= 0; --i) {
            if (dominoes[i] == 'L') d = n;
            else if (dominoes[i] == 'R') d = 0;
            else d = max(d - 1, 0);
            dist[i] -= d;
        }
        string ans;
        for (int i = 0; i < n; ++i) {
            if (dist[i] > 0) ans += 'R';
            else if (dist[i] < 0) ans += 'L';
            else ans += '.';
        }
        return ans;

=======

        int n = dominoes.size();
        vector<int> left(n, 0);
        vector<int> right(n, 0);
        int l = -1e5;
        for (int i = 0; i < n; i++) {
            if (dominoes[i] == 'L') {
                l = 0;
            } else if (dominoes[i] == 'R') {
                l = -1e5;
            } else {
                l++;
            }
            left[i] = l;
        }
        int r = -1e5;
        for (int i = n - 1; i >= 0; i--) {
            if (dominoes[i] == 'R') {
                r = 0;
            } else if (dominoes[i] == 'L') {
                r = -1e5;
            } else {
                r++;
            }
            right[i] = r;
        }
        for (int i = 0; i < n; i++) {
            if (left[i] == right[i]) {
                dominoes[i] = '.';
            } else if (left[i] < right[i]) {
                dominoes[i] = 'L';
            } else {
                dominoes[i] = 'R';
            }
        }
        return dominoes;

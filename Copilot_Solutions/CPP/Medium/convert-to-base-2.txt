Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if (n == 0) return "0";
        string res;
        while (n) {
            res += to_string(n & 1);
            n = -(n >> 1);
        }
        reverse(res.begin(), res.end());
        return res;

=======

        string res;
        while (n) {
            res += to_string(n & 1);
            n = -(n >> 1);
        }
        return res.empty() ? "0" : res;

=======

        string res;
        while (n) {
            res.push_back('0' + (n & 1));
            n = -(n >> 1);
        }
        return res.empty() ? "0" : res;

=======

        if (n == 0) return "0";
        string ans;
        while (n) {
            ans += '0' + (n & 1);
            n = -(n >> 1);
        }
        reverse(ans.begin(), ans.end());
        return ans;

=======

        if (n == 0) {
            return "0";
        }
        string result;
        while (n) {
            result += to_string(n & 1);
            n = -(n >> 1);
        }
        reverse(result.begin(), result.end());
        return result;

=======

        string s;
        while (n) {
            s += (n & 1) + '0';
            n = -(n >> 1);
        }
        return s.empty() ? "0" : s;

=======

        string res;
        while(n) {
            res += (n & 1) + '0';
            n = -(n >> 1);
        }
        return res.empty() ? "0" : res;

=======

        if(n==0) return "0";
        string ans="";
        while(n!=0){
            ans=to_string(n&1)+ans;
            n=-(n>>1);
        }
        return ans;

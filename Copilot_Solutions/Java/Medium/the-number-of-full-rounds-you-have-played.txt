Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int loginHour = Integer.parseInt(loginTime.substring(0, 2));
        int loginMinute = Integer.parseInt(loginTime.substring(3));
        int logoutHour = Integer.parseInt(logoutTime.substring(0, 2));
        int logoutMinute = Integer.parseInt(logoutTime.substring(3));
        if (logoutHour < loginHour || (logoutHour == loginHour && logoutMinute < loginMinute)) {
            logoutHour += 24;
        }
        int loginRound = loginMinute / 15;
        if (loginRound * 15 < loginMinute) {
            loginRound++;
        }
        int logoutRound = logoutMinute / 15;
        int round = logoutHour * 4 + logoutRound - loginHour * 4 - loginRound;
        return round > 0 ? round : 0;

=======

        int loginHour = Integer.parseInt(loginTime.substring(0, 2));
        int loginMinute = Integer.parseInt(loginTime.substring(3, 5));
        int logoutHour = Integer.parseInt(logoutTime.substring(0, 2));
        int logoutMinute = Integer.parseInt(logoutTime.substring(3, 5));
        int loginRound = loginHour * 4 + loginMinute / 15;
        int logoutRound = logoutHour * 4 + logoutMinute / 15;
        if (logoutRound < loginRound) {
            logoutRound += 96;
        }
        return Math.max(0, logoutRound - loginRound);

=======

        int start = Integer.parseInt(loginTime.substring(0, 2)) * 60 + Integer.parseInt(loginTime.substring(3));
        int end = Integer.parseInt(logoutTime.substring(0, 2)) * 60 + Integer.parseInt(logoutTime.substring(3));
        if (end < start) end += 24 * 60;
        start = (start + 14) / 15 * 15;
        end = end / 15 * 15;
        return Math.max(0, end - start) / 15;

=======

        int login = Integer.parseInt(loginTime.substring(0, 2)) * 60 + Integer.parseInt(loginTime.substring(3, 5));
        int logout = Integer.parseInt(logoutTime.substring(0, 2)) * 60 + Integer.parseInt(logoutTime.substring(3, 5));
        if (logout < login) {
            logout += 24 * 60;
        }
        return Math.max(0, logout / 15 - (login + 14) / 15);

=======

        int login = Integer.parseInt(loginTime.substring(0, 2)) * 60 + Integer.parseInt(loginTime.substring(3, 5));
        int logout = Integer.parseInt(logoutTime.substring(0, 2)) * 60 + Integer.parseInt(logoutTime.substring(3, 5));
        if (logout < login) {
            logout += 24 * 60;
        }
        login = (login + 14) / 15 * 15;
        logout = logout / 15 * 15;
        return Math.max(0, logout - login) / 15;

=======

        int start = Integer.parseInt(loginTime.split(":")[0]) * 60 + Integer.parseInt(loginTime.split(":")[1]);
        int end = Integer.parseInt(logoutTime.split(":")[0]) * 60 + Integer.parseInt(logoutTime.split(":")[1]);
        if (end < start) {
            end += 24 * 60;
        }
        start = (start + 14) / 15 * 15;
        end = end / 15 * 15;
        return Math.max(0, end - start) / 15;

=======

        int loginHour = Integer.parseInt(loginTime.substring(0,2));
        int loginMin = Integer.parseInt(loginTime.substring(3,5));
        int logoutHour = Integer.parseInt(logoutTime.substring(0,2));
        int logoutMin = Integer.parseInt(logoutTime.substring(3,5));
        int loginRound = 0;
        int logoutRound = 0;
        if(loginMin >= 0 && loginMin <= 14){
            loginRound = loginHour * 4;
        }
        else if(loginMin >= 15 && loginMin <= 29){
            loginRound = loginHour * 4 + 1;
        }
        else if(loginMin >= 30 && loginMin <= 44){
            loginRound = loginHour * 4 + 2;
        }
        else if(loginMin >= 45 && loginMin <= 59){
            loginRound = loginHour * 4 + 3;
        }
        if(logoutMin >= 0 && logoutMin <= 14){
            logoutRound = logoutHour * 4;
        }
        else if(logoutMin >= 15 && logoutMin <= 29){
            logoutRound = logoutHour * 4 + 1;
        }
        else if(logoutMin >= 30 && logoutMin <= 44){
            logoutRound = logoutHour * 4 + 2;
        }
        else if(logoutMin >= 45 && logoutMin <= 59){
            logoutRound = logoutHour * 4 + 3;
        }
        if(loginHour > logoutHour){
            logoutRound += 96;
        }
        return Math.max(0, logoutRound - loginRound);

=======

        int loginHour = Integer.parseInt(loginTime.substring(0,2));
        int loginMin = Integer.parseInt(loginTime.substring(3,5));
        int logoutHour = Integer.parseInt(logoutTime.substring(0,2));
        int logoutMin = Integer.parseInt(logoutTime.substring(3,5));
        int loginMinutes = loginHour * 60 + loginMin;
        int logoutMinutes = logoutHour * 60 + logoutMin;
        if (logoutMinutes < loginMinutes) {
            logoutMinutes += 24 * 60;
        }
        loginMinutes = (loginMinutes + 14) / 15 * 15;
        logoutMinutes = logoutMinutes / 15 * 15;
        return Math.max(0, logoutMinutes - loginMinutes) / 15;

=======

        int[] login = parseTime(loginTime);
        int[] logout = parseTime(logoutTime);
        int startRound = roundNum(login[0], login[1]);
        int endRound = roundNum(logout[0], logout[1]);
        if (startRound > endRound) {
            endRound += 96;
        }
        return Math.max(0, endRound - startRound);
    }

    private int roundNum(int hour, int min) {
        int round = hour * 4 + min / 15;
        if (min % 15 != 0) {
            round++;
        }
        return round;

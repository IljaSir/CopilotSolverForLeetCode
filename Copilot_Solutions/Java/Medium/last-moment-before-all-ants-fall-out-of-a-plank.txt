Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int max = 0;
        for (int i = 0; i < left.length; i++) {
            max = Math.max(max, left[i]);
        }
        for (int i = 0; i < right.length; i++) {
            max = Math.max(max, n - right[i]);
        }
        return max;

=======

        int max = 0;
        for (int l : left) {
            max = Math.max(max, l);
        }
        for (int r : right) {
            max = Math.max(max, n - r);
        }
        return max;

=======

        int maxLeft = 0;
        int maxRight = 0;
        for (int i = 0; i < left.length; i++) {
            maxLeft = Math.max(maxLeft, left[i]);
        }
        for (int i = 0; i < right.length; i++) {
            maxRight = Math.max(maxRight, n - right[i]);
        }
        return Math.max(maxLeft, maxRight);

=======

        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;
        for (int i : left) {
            min = Math.min(min, i);
        }
        for (int i : right) {
            max = Math.max(max, n - i);
        }
        return Math.max(min, max);

Synthesizing 10/10 solutions

=======

        List<String> result = new ArrayList<>();
        boolean inBlock = false;
        StringBuilder newLine = new StringBuilder();
        for (String line : source) {
            int i = 0;
            char[] chars = line.toCharArray();
            if (!inBlock) newLine = new StringBuilder();
            while (i < chars.length) {
                if (!inBlock && i + 1 < chars.length && chars[i] == '/' && chars[i + 1] == '*') {
                    inBlock = true;
                    i++;
                } else if (inBlock && i + 1 < chars.length && chars[i] == '*' && chars[i + 1] == '/') {
                    inBlock = false;
                    i++;
                } else if (!inBlock && i + 1 < chars.length && chars[i] == '/' && chars[i + 1] == '/') {
                    break;
                } else if (!inBlock) {
                    newLine.append(chars[i]);
                }
                i++;
            }
            if (!inBlock && newLine.length() > 0) {
                result.add(newLine.toString());
            }
        }
        return result;

=======

        List<String> result = new ArrayList<>();
        boolean inBlock = false;
        StringBuilder newString = new StringBuilder();
        for (String line: source) {
            int i = 0;
            char[] chars = line.toCharArray();
            if (!inBlock) newString = new StringBuilder();
            while (i < chars.length) {
                if (!inBlock && i + 1 < chars.length && chars[i] == '/' && chars[i + 1] == '*') {
                    inBlock = true;
                    i++;
                } else if (inBlock && i + 1 < chars.length && chars[i] == '*' && chars[i + 1] == '/') {
                    inBlock = false;
                    i++;
                } else if (!inBlock && i + 1 < chars.length && chars[i] == '/' && chars[i + 1] == '/') {
                    break;
                } else if (!inBlock) {
                    newString.append(chars[i]);
                }
                i++;
            }
            if (!inBlock && newString.length() > 0) {
                result.add(newString.toString());
            }
        }
        return result;

=======

        List<String> result = new ArrayList<>();
        boolean inBlock = false;
        StringBuilder newString = new StringBuilder();
        for (String line : source) {
            int i = 0;
            char[] chars = line.toCharArray();
            if (!inBlock) {
                newString = new StringBuilder();
            }
            while (i < chars.length) {
                if (!inBlock && i + 1 < chars.length && chars[i] == '/' && chars[i + 1] == '*') {
                    inBlock = true;
                    i++;
                } else if (inBlock && i + 1 < chars.length && chars[i] == '*' && chars[i + 1] == '/') {
                    inBlock = false;
                    i++;
                } else if (!inBlock && i + 1 < chars.length && chars[i] == '/' && chars[i + 1] == '/') {
                    break;
                } else if (!inBlock) {
                    newString.append(chars[i]);
                }
                i++;
            }
            if (!inBlock && newString.length() > 0) {
                result.add(newString.toString());
            }
        }
        return result;

=======

        List<String> res = new ArrayList<>();
        boolean inBlock = false;
        StringBuilder sb = new StringBuilder();
        for (String line : source) {
            int i = 0;
            char[] chars = line.toCharArray();
            if (!inBlock) {
                sb = new StringBuilder();
            }
            while (i < chars.length) {
                if (!inBlock && i + 1 < chars.length && chars[i] == '/' && chars[i + 1] == '*') {
                    inBlock = true;
                    i++;
                } else if (inBlock && i + 1 < chars.length && chars[i] == '*' && chars[i + 1] == '/') {
                    inBlock = false;
                    i++;
                } else if (!inBlock && i + 1 < chars.length && chars[i] == '/' && chars[i + 1] == '/') {
                    break;
                } else if (!inBlock) {
                    sb.append(chars[i]);
                }
                i++;
            }
            if (!inBlock && sb.length() > 0) {
                res.add(sb.toString());
            }
        }
        return res;

=======

        List<String> result = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        boolean blockComment = false;
        for (String line : source) {
            for (int i = 0; i < line.length(); i++) {
                if (!blockComment && i + 1 < line.length() && line.charAt(i) == '/' && line.charAt(i + 1) == '*') {
                    blockComment = true;
                    i++;
                } else if (blockComment && i + 1 < line.length() && line.charAt(i) == '*' && line.charAt(i + 1) == '/') {
                    blockComment = false;
                    i++;
                } else if (!blockComment && i + 1 < line.length() && line.charAt(i) == '/' && line.charAt(i + 1) == '/') {
                    break;
                } else if (!blockComment) {
                    sb.append(line.charAt(i));
                }
            }
            if (!blockComment && sb.length() > 0) {
                result.add(sb.toString());
                sb = new StringBuilder();
            }
        }
        return result;

=======

        List<String> res = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        boolean inComment = false;
        for (String line : source) {
            for (int i = 0; i < line.length(); i++) {
                if (!inComment && i + 1 < line.length() && line.charAt(i) == '/' && line.charAt(i + 1) == '*') {
                    inComment = true;
                    i++;
                } else if (inComment && i + 1 < line.length() && line.charAt(i) == '*' && line.charAt(i + 1) == '/') {
                    inComment = false;
                    i++;
                } else if (!inComment && i + 1 < line.length() && line.charAt(i) == '/' && line.charAt(i + 1) == '/') {
                    break;
                } else if (!inComment) {
                    sb.append(line.charAt(i));
                }
            }
            if (!inComment && sb.length() > 0) {
                res.add(sb.toString());
                sb = new StringBuilder();
            }
        }
        return res;

=======

        List<String> result = new ArrayList<>();
        if (source == null || source.length == 0) {
            return result;
        }
        boolean inBlock = false;
        StringBuilder sb = new StringBuilder();
        for (String line : source) {
            for (int i = 0; i < line.length(); i++) {
                if (!inBlock && i + 1 < line.length() && line.charAt(i) == '/' && line.charAt(i + 1) == '*') {
                    inBlock = true;
                    i++;
                } else if (inBlock && i + 1 < line.length() && line.charAt(i) == '*' && line.charAt(i + 1) == '/') {
                    inBlock = false;
                    i++;
                } else if (!inBlock && i + 1 < line.length() && line.charAt(i) == '/' && line.charAt(i + 1) == '/') {
                    break;
                } else if (!inBlock) {
                    sb.append(line.charAt(i));
                }
            }
            if (!inBlock && sb.length() > 0) {
                result.add(sb.toString());
                sb = new StringBuilder();
            }
        }
        return result;

=======

        List<String> result = new ArrayList<>();
        boolean block = false;
        StringBuilder sb = new StringBuilder();
        for (String s : source) {
            for (int i = 0; i < s.length(); i++) {
                if (block && i < s.length() - 1 && s.charAt(i) == '*' && s.charAt(i + 1) == '/') {
                    block = false;
                    i++;
                } else if (block) {
                    continue;
                } else if (i < s.length() - 1 && s.charAt(i) == '/' && s.charAt(i + 1) == '*') {
                    block = true;
                    i++;
                } else if (i < s.length() - 1 && s.charAt(i) == '/' && s.charAt(i + 1) == '/') {
                    break;
                } else {
                    sb.append(s.charAt(i));
                }
            }
            if (!block && sb.length() > 0) {
                result.add(sb.toString());
                sb = new StringBuilder();
            }
        }
        return result;

=======

        List<String> result = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        boolean isComment = false;
        for (String line : source) {
            int i = 0;
            while (i < line.length()) {
                if (!isComment && i < line.length() - 1 && line.charAt(i) == '/' && line.charAt(i + 1) == '*') {
                    isComment = true;
                    i++;
                } else if (isComment && i < line.length() - 1 && line.charAt(i) == '*' && line.charAt(i + 1) == '/') {
                    isComment = false;
                    i++;
                } else if (!isComment && i < line.length() - 1 && line.charAt(i) == '/' && line.charAt(i + 1) == '/') {
                    break;
                } else if (!isComment) {
                    sb.append(line.charAt(i));
                }
                i++;
            }
            if (!isComment && sb.length() > 0) {
                result.add(sb.toString());
                sb = new StringBuilder();
            }
        }
        return result;

=======

        StringBuffer sb = new StringBuffer();
        for (String s : source) {
            sb.append(s).append('\n');
        }
        String str = sb.toString();
        List<String> res = new ArrayList<>();
        boolean block = false;
        for (int i = 0; i < str.length(); i++) {
            if (i + 1 < str.length() && !block && str.charAt(i) == '/' && str.charAt(i + 1) == '*') {
                block = true;
                i++;
            } else if (i + 1 < str.length() && block && str.charAt(i) == '*' && str.charAt(i + 1) == '/') {
                block = false;
                i++;
            } else if (i + 1 < str.length() && !block && str.charAt(i) == '/' && str.charAt(i + 1) == '/') {
                i++;
                while (i < str.length() && str.charAt(i) != '

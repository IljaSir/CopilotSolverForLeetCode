Synthesizing 10/10 solutions (Duplicates hidden)

=======

        Arrays.sort(nums);
        int max = 0;
        for (int i = 0, j = nums.length - 1; i < j; i++, j--) {
            max = Math.max(max, nums[i] + nums[j]);
        }
        return max;

=======

        Arrays.sort(nums);
        int max = 0;
        for (int i = 0; i < nums.length / 2; i++) {
            max = Math.max(max, nums[i] + nums[nums.length - 1 - i]);
        }
        return max;

=======

        Arrays.sort(nums);
        int result = 0;
        for (int i = 0; i < nums.length / 2; i++) {
            result = Math.max(result, nums[i] + nums[nums.length - 1 - i]);
        }
        return result;

=======

        Arrays.sort(nums);
        int n = nums.length;
        int max = 0;
        for (int i = 0; i < n / 2; i++) {
            max = Math.max(max, nums[i] + nums[n - i - 1]);
        }
        return max;

=======

        Arrays.sort(nums);
        int max = 0;
        int i = 0;
        int j = nums.length - 1;
        while (i < j) {
            max = Math.max(max, nums[i] + nums[j]);
            i++;
            j--;
        }
        return max;

=======

        Arrays.sort(nums);
        int max = 0;
        for (int i = 0; i < nums.length; i++) {
            max = Math.max(max, nums[i] + nums[nums.length - i - 1]);
        }
        return max;

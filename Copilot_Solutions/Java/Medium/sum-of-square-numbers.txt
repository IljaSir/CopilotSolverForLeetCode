Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int a = 0;
        int b = (int) Math.sqrt(c);
        while (a <= b) {
            int sum = a * a + b * b;
            if (sum == c) {
                return true;
            } else if (sum < c) {
                a++;
            } else {
                b--;
            }
        }
        return false;

=======

        int a = 0;
        int b = (int) Math.sqrt(c);
        while (a <= b) {
            int sum = a * a + b * b;
            if (sum == c) {
                return true;
            } else if (sum > c) {
                b--;
            } else {
                a++;
            }
        }
        return false;

=======

        int i = 0;
        int j = (int) Math.sqrt(c);
        while (i <= j) {
            int sum = i * i + j * j;
            if (sum == c) {
                return true;
            } else if (sum > c) {
                j--;
            } else {
                i++;
            }
        }
        return false;

=======

        int i = 0;
        int j = (int) Math.sqrt(c);
        while (i <= j) {
            int sum = i * i + j * j;
            if (sum == c) {
                return true;
            } else if (sum < c) {
                i++;
            } else {
                j--;
            }
        }
        return false;

=======

        for (int i = 0; i <= Math.sqrt(c); i++) {
            for (int j = i; j <= Math.sqrt(c); j++) {
                if (i * i + j * j == c) {
                    return true;
                }
            }
        }
        return false;

=======

        for(int i = 0; i <= Math.sqrt(c); i++){
            for(int j = 0; j <= Math.sqrt(c); j++){
                if(i*i + j*j == c){
                    return true;
                }
            }
        }
        return false;

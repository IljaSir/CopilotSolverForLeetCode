Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int cash = 0;
        int hold = -prices[0];
        for (int i = 1; i < prices.length; i++) {
            cash = Math.max(cash, hold + prices[i] - fee);
            hold = Math.max(hold, cash - prices[i]);
        }
        return cash;

=======

        int n = prices.length;
        int[][] dp = new int[n][2];
        dp[0][0] = 0;
        dp[0][1] = -prices[0];
        for (int i = 1; i < n; i++) {
            dp[i][0] = Math.max(dp[i - 1][0], dp[i - 1][1] + prices[i] - fee);
            dp[i][1] = Math.max(dp[i - 1][1], dp[i - 1][0] - prices[i]);
        }
        return dp[n - 1][0];

=======

        int n = prices.length;
        int[] buy = new int[n];
        int[] sell = new int[n];
        buy[0] = -prices[0];
        for (int i = 1; i < n; i++) {
            buy[i] = Math.max(buy[i - 1], sell[i - 1] - prices[i]);
            sell[i] = Math.max(sell[i - 1], buy[i - 1] + prices[i] - fee);
        }
        return sell[n - 1];

=======

        int n = prices.length;
        int dp_i_0 = 0, dp_i_1 = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            int temp = dp_i_0;
            dp_i_0 = Math.max(dp_i_0, dp_i_1 + prices[i]);
            dp_i_1 = Math.max(dp_i_1, temp - prices[i] - fee);
        }
        return dp_i_0;

=======

        int n = prices.length;
        int[] dp = new int[n];
        int min = prices[0];
        for (int i = 1; i < n; i++) {
            dp[i] = dp[i - 1];
            if (prices[i] > min) {
                dp[i] = Math.max(dp[i], dp[i - 1] + prices[i] - min - fee);
            }
            min = Math.min(min, prices[i]);
        }
        return dp[n - 1];

=======

        int hold = -prices[0];
        int notHold = 0;
        for (int i = 1; i < prices.length; i++) {
            int temp = hold;
            hold = Math.max(hold, notHold - prices[i]);
            notHold = Math.max(notHold, temp + prices[i] - fee);
        }
        return notHold;

=======

        int n = prices.length;
        int dp[] = new int[n];
        int min = prices[0];
        for(int i=1; i<n; i++) {
            dp[i] = Math.max(dp[i-1], prices[i] - min - fee);
            min = Math.min(min, prices[i] - dp[i]);
        }
        return dp[n-1];

Synthesizing 10/10 solutions

=======

        List<Integer> res = new ArrayList<>();
        int jumbo = (tomatoSlices - 2 * cheeseSlices) / 2;
        int small = cheeseSlices - jumbo;
        if (jumbo < 0 || small < 0 || (tomatoSlices - 2 * cheeseSlices) % 2 != 0) {
            return res;
        }
        res.add(jumbo);
        res.add(small);
        return res;

=======

        List<Integer> result = new ArrayList<>();
        if (tomatoSlices % 2 != 0 || cheeseSlices > tomatoSlices / 2 || cheeseSlices * 4 < tomatoSlices) {
            return result;
        }
        int jumbo = (tomatoSlices / 2 - cheeseSlices);
        int small = cheeseSlices - jumbo;
        result.add(jumbo);
        result.add(small);
        return result;

=======

        List<Integer> res = new ArrayList<>();
        if (tomatoSlices % 2 == 0) {
            int jumbo = tomatoSlices / 2 - cheeseSlices;
            int small = cheeseSlices - jumbo;
            if (jumbo >= 0 && small >= 0) {
                res.add(jumbo);
                res.add(small);
            }
        }
        return res;

=======

        List<Integer> ans = new ArrayList<>();
        int x = tomatoSlices - 2 * cheeseSlices;
        int y = 4 * cheeseSlices - tomatoSlices;
        if (x % 2 == 0 && y % 2 == 0 && x >= 0 && y >= 0) {
            ans.add(x / 2);
            ans.add(y / 2);
        }
        return ans;

=======

        List<Integer> res = new ArrayList<>();
        int n = tomatoSlices - 2 * cheeseSlices;
        if (n < 0 || n % 2 != 0) {
            return res;
        }
        int m = cheeseSlices - n / 2;
        if (m < 0) {
            return res;
        }
        res.add(n / 2);
        res.add(m);
        return res;

=======

        List<Integer> res = new ArrayList<>();
        int jumbo = 0;
        int small = 0;
        if (tomatoSlices % 2 == 0 && tomatoSlices / 2 >= cheeseSlices && tomatoSlices / 2 - cheeseSlices <= cheeseSlices) {
            small = tomatoSlices / 2 - cheeseSlices;
            jumbo = cheeseSlices - small;
            res.add(jumbo);
            res.add(small);
        }
        return res;

=======

        List<Integer> result = new ArrayList<>();
        int jumbo = 0, small = 0;
        if (tomatoSlices % 2 == 1) {
            return result;
        }
        jumbo = (tomatoSlices / 2) - cheeseSlices;
        small = cheeseSlices - jumbo;
        if (jumbo < 0 || small < 0) {
            return result;
        }
        result.add(jumbo);
        result.add(small);
        return result;

=======

        List<Integer> result = new ArrayList<>();
        int jumbo = 0;
        int small = 0;
        if (tomatoSlices % 2 != 0) {
            return result;
        }
        int total = tomatoSlices / 2;
        if (total < cheeseSlices) {
            return result;
        }
        jumbo = cheeseSlices;
        small = total - cheeseSlices;
        if (jumbo < 0 || small < 0) {
            return result;
        }
        if (jumbo * 4 + small * 2 != tomatoSlices) {
            return result;
        }
        result.add(jumbo);
        result.add(small);
        return result;

=======

        List<Integer> ret = new ArrayList<>();
        int jumbo = 0;
        int small = 0;
        for (int i = 0; i < cheeseSlices; i++) {
            jumbo = i;
            small = cheeseSlices - i;
            if (jumbo * 4 + small * 2 == tomatoSlices) {
                ret.add(jumbo);
                ret.add(small);
                return ret;
            }
        }
        return ret;

=======

        List<Integer> result = new ArrayList<>();
        int jumbo = 0;
        int small = 0;
        int cheese = 0;
        int tomato = 0;
        for (int i = 0; i <= cheeseSlices; i++) {
            cheese = i;
            tomato = cheeseSlices - cheese;
            if (tomato * 2 + cheese * 4 == tomatoSlices) {
                result.add(tomato);
                result.add(cheese);
                return result;
            }
        }
        return result;

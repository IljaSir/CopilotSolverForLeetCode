Synthesizing 10/10 solutions (Duplicates hidden)

=======

        Arrays.sort(words);
        Set<String> set = new HashSet<>();
        String res = "";
        for (String word : words) {
            if (word.length() == 1 || set.contains(word.substring(0, word.length() - 1))) {
                res = word.length() > res.length() ? word : res;
                set.add(word);
            }
        }
        return res;

=======

        Arrays.sort(words);
        Set<String> built = new HashSet();
        String res = "";
        for (String w: words) {
            if (w.length() == 1 || built.contains(w.substring(0, w.length() - 1))) {
                res = w.length() > res.length() ? w : res;
                built.add(w);
            }
        }
        return res;

=======

        Arrays.sort(words);
        Set<String> built = new HashSet<>();
        String res = "";
        for (String w : words) {
            if (w.length() == 1 || built.contains(w.substring(0, w.length() - 1))) {
                res = w.length() > res.length() ? w : res;
                built.add(w);
            }
        }
        return res;

=======

        String ans = "";
        Set<String> wordsSet = new HashSet();
        for (String word : words) {
            wordsSet.add(word);
        }
        for (String word : words) {
            if (word.length() > ans.length() || (word.length() == ans.length() && word.compareTo(ans) < 0)) {
                boolean good = true;
                for (int k = 1; k < word.length(); ++k) {
                    if (!wordsSet.contains(word.substring(0, k))) {
                        good = false;
                        break;
                    }
                }
                if (good) {
                    ans = word;
                }
            }
        }
        return ans;

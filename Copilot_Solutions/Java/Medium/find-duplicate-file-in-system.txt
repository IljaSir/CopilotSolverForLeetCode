Synthesizing 3/10 solutions

=======

        Map<String, List<String>> map = new HashMap<>();
        for (String path : paths) {
            String[] split = path.split(" ");
            String dir = split[0];
            for (int i = 1; i < split.length; i++) {
                int start = split[i].indexOf("(");
                String filename = split[i].substring(0, start);
                String content = split[i].substring(start + 1, split[i].length() - 1);
                map.putIfAbsent(content, new ArrayList<>());
                map.get(content).add(dir + "/" + filename);
            }
        }
        List<List<String>> res = new ArrayList<>();
        for (List<String> list : map.values()) {
            if (list.size() > 1) {
                res.add(list);
            }
        }
        return res;

=======

        Map<String, List<String>> map = new HashMap<>();
        for (String path : paths) {
            String[] dir = path.split(" ");
            for (int i = 1; i < dir.length; i++) {
                String[] file = dir[i].split("\\(");
                String content = file[1].substring(0, file[1].length() - 1);
                List<String> list = map.getOrDefault(content, new ArrayList<>());
                list.add(dir[0] + "/" + file[0]);
                map.put(content, list);
            }
        }
        List<List<String>> res = new ArrayList<>();
        for (List<String> list : map.values()) {
            if (list.size() > 1) {
                res.add(list);
            }
        }
        return res;

=======

        List<List<String>> ans = new ArrayList<>();
        Map<String, List<String>> map = new HashMap<>();
        for (String path : paths) {
            String[] arr = path.split(" ");
            String dir = arr[0];
            for (int i = 1; i < arr.length; i++) {
                String fileName = arr[i].substring(0, arr[i].indexOf("("));
                String fileContent = arr[i].substring(arr[i].indexOf("(") + 1, arr[i].indexOf(")"));
                map.putIfAbsent(fileContent, new ArrayList<>());
                map.get(fileContent).add(dir + "/" + fileName);
            }
        }
        for (List<String> list : map.values()) {
            if (list.size() > 1) ans.add(list);
        }
        return ans;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        Set<String> set = new HashSet<>();
        for (String word : words) {
            int[] odd = new int[26];
            int[] even = new int[26];
            for (int i = 0; i < word.length(); i++) {
                if (i % 2 == 0) {
                    even[word.charAt(i) - 'a']++;
                } else {
                    odd[word.charAt(i) - 'a']++;
                }
            }
            set.add(Arrays.toString(odd) + Arrays.toString(even));
        }
        return set.size();

=======

        Set<String> set = new HashSet<>();
        for (String word : words) {
            int[] even = new int[26];
            int[] odd = new int[26];
            for (int i = 0; i < word.length(); i++) {
                if (i % 2 == 0) {
                    even[word.charAt(i) - 'a']++;
                } else {
                    odd[word.charAt(i) - 'a']++;
                }
            }
            set.add(Arrays.toString(even) + Arrays.toString(odd));
        }
        return set.size();

=======

        Set<String> set = new HashSet<String>();
        for (String word : words) {
            int[] odd = new int[26];
            int[] even = new int[26];
            for (int i = 0; i < word.length(); i++) {
                if (i % 2 == 0) {
                    even[word.charAt(i) - 'a']++;
                } else {
                    odd[word.charAt(i) - 'a']++;
                }
            }
            set.add(Arrays.toString(odd) + Arrays.toString(even));
        }
        return set.size();

=======

        Set<String> set = new HashSet<>();
        for (String word : words) {
            int[] count = new int[52];
            for (int i = 0; i < word.length(); ++i) {
                count[word.charAt(i) - 'a' + 26 * (i % 2)]++;
            }
            set.add(Arrays.toString(count));
        }
        return set.size();

=======

        Set<String> set = new HashSet<>();
        for (String w : words) {
            int[] a = new int[52];
            for (int i = 0; i < w.length(); i++) {
                a[w.charAt(i) - 'a' + 26 * (i % 2)]++;
            }
            set.add(Arrays.toString(a));
        }
        return set.size();

=======

        Set<String> set = new HashSet<>();
        for(String word : words){
            int[] odd = new int[26];
            int[] even = new int[26];
            for(int i=0; i<word.length(); i++){
                char c = word.charAt(i);
                if(i % 2 == 0){
                    even[c - 'a']++;
                }else{
                    odd[c - 'a']++;
                }
            }
            set.add(Arrays.toString(odd) + Arrays.toString(even));
        }
        return set.size();

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int ans = 0;
        for (int i = 1; i <= n; i++) {
            ans = (ans + k) % i;
        }
        return ans + 1;

=======

        int res = 0;
        for (int i = 2; i <= n; i++) {
            res = (res + k) % i;
        }
        return res + 1;

=======

        int ans = 0;
        for (int i = 2; i <= n; ++i) {
            ans = (ans + k) % i;
        }
        return ans + 1;

=======

        var result = 0;
        for (var i = 1; i <= n; i++) {
            result = (result + k) % i;
        }
        return result + 1;

=======

        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = i + 1;
        }
        int i = 0;
        while (n > 1) {
            i = (i + k - 1) % n;
            for (int j = i; j < n - 1; j++) {
                arr[j] = arr[j + 1];
            }
            n--;
        }
        return arr[0];

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int left = 1;
        int right = 1000000;
        while (left < right) {
            int mid = left + (right - left) / 2;
            int sum = 0;
            for (int num : nums) {
                sum += (num + mid - 1) / mid;
            }
            if (sum <= threshold) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        return left;

=======

        int left = 1;
        int right = 1000000;
        while (left < right) {
            int mid = left + (right - left) / 2;
            int sum = 0;
            for (int num : nums) {
                sum += (num + mid - 1) / mid;
            }
            if (sum > threshold) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return left;

=======

        int left = 1;
        int right = 1000000;
        while (left < right) {
            int mid = left + (right - left) / 2;
            int sum = 0;
            for (int i = 0; i < nums.length; i++) {
                sum += nums[i] / mid;
                if (nums[i] % mid != 0) {
                    sum++;
                }
            }
            if (sum <= threshold) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        return left;

=======

        int low = 1;
        int high = 1000000;
        while (low < high) {
            int mid = low + (high - low) / 2;
            int sum = 0;
            for (int num : nums) {
                sum += (num + mid - 1) / mid;
            }
            if (sum > threshold) {
                low = mid + 1;
            } else {
                high = mid;
            }
        }
        return low;

=======

        int left = 1;
        int right = 0;
        for (int num : nums) {
            right = Math.max(right, num);
        }
        while (left < right) {
            int mid = left + (right - left) / 2;
            int sum = 0;
            for (int num : nums) {
                sum += (num + mid - 1) / mid;
            }
            if (sum > threshold) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return left;

=======

        int lo = 1, hi = 1000000;
        while (lo < hi) {
            int mid = lo + (hi - lo) / 2;
            int sum = 0;
            for (int num : nums) {
                sum += (num + mid - 1) / mid;
            }
            if (sum <= threshold) {
                hi = mid;
            } else {
                lo = mid + 1;
            }
        }
        return lo;

=======

        int l = 1, r = 1000000;
        while (l < r) {
            int m = l + (r - l) / 2;
            int sum = 0;
            for (int n : nums) {
                sum += (n + m - 1) / m;
            }
            if (sum > threshold) {
                l = m + 1;
            } else {
                r = m;
            }
        }
        return l;

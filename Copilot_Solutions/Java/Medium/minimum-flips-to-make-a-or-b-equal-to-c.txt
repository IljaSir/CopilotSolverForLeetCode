Synthesizing 9/10 solutions

=======

        int count = 0;
        for (int i = 0; i < 32; i++) {
            int bitA = (a >> i) & 1;
            int bitB = (b >> i) & 1;
            int bitC = (c >> i) & 1;
            if (bitC == 1) {
                if (bitA == 0 && bitB == 0) {
                    count++;
                }
            } else {
                if (bitA == 1) {
                    count++;
                }
                if (bitB == 1) {
                    count++;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < 32; i++) {
            int bitA = (a >> i) & 1;
            int bitB = (b >> i) & 1;
            int bitC = (c >> i) & 1;
            if (bitC == 0) {
                count += bitA + bitB;
            } else {
                count += bitA + bitB == 0 ? 1 : 0;
            }
        }
        return count;

=======

        int res = 0;
        for (int i = 0; i < 32; i++) {
            int bitA = (a >> i) & 1;
            int bitB = (b >> i) & 1;
            int bitC = (c >> i) & 1;
            if (bitC == 0) {
                res += bitA + bitB;
            } else {
                if (bitA == 0 && bitB == 0) {
                    res += 1;
                }
            }
        }
        return res;

=======

        int res = 0;
        for (int i = 0; i < 32; i++) {
            int bitA = (a >> i) & 1;
            int bitB = (b >> i) & 1;
            int bitC = (c >> i) & 1;
            if (bitC == 1) {
                if (bitA == 0 && bitB == 0) {
                    res++;
                }
            } else {
                if (bitA == 1) {
                    res++;
                }
                if (bitB == 1) {
                    res++;
                }
            }
        }
        return res;

=======

        int ans = 0;
        for (int i = 0; i < 32; i++) {
            int x = (a >> i) & 1;
            int y = (b >> i) & 1;
            int z = (c >> i) & 1;
            if (z == 0) {
                ans += x + y;
            } else {
                if (x == 0 && y == 0) {
                    ans += 1;
                }
            }
        }
        return ans;

=======

        int count = 0;
        for (int i = 0; i < 32; i++) {
            int x = (a >> i) & 1;
            int y = (b >> i) & 1;
            int z = (c >> i) & 1;
            if (z == 1) {
                if (x == 0 && y == 0) {
                    count++;
                }
            } else {
                if (x == 1) count++;
                if (y == 1) count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < 32; i++) {
            int aBit = (a >> i) & 1;
            int bBit = (b >> i) & 1;
            int cBit = (c >> i) & 1;
            if (cBit == 0) {
                count += aBit + bBit;
            } else {
                if (aBit == 0 && bBit == 0) {
                    count++;
                }
            }
        }
        return count;

=======

        int res = 0;
        for (int i = 0; i < 32; i++) {
            int x = a & 1;
            int y = b & 1;
            int z = c & 1;
            if (z == 0) {
                res += x + y;
            } else {
                if (x == 0 && y == 0) {
                    res++;
                }
            }
            a >>= 1;
            b >>= 1;
            c >>= 1;
        }
        return res;

=======

        int count = 0;
        for (int i = 0; i < 32; i++) {
            if (((a >> i) & 1) == 1 && ((b >> i) & 1) == 1 && ((c >> i) & 1) == 0) {
                count += 2;
            } else if (((a >> i) & 1) == 1 && ((b >> i) & 1) == 0 && ((c >> i) & 1) == 0) {
                count += 1;
            } else if (((a >> i) & 1) == 0 && ((b >> i) & 1) == 1 && ((c >> i) & 1) == 0) {
                count += 1;
            } else if (((a >> i) & 1) == 0 && ((b >> i) & 1) == 0 && ((c >> i) & 1) == 1) {
                count += 1;
            }
        }
        return count;

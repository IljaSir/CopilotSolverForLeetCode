Synthesizing 10/10 solutions

=======

        long count = 0;
        for (int i = 0; i < word.length(); i++) {
            if (word.charAt(i) == 'a' || word.charAt(i) == 'e' || word.charAt(i) == 'i' || word.charAt(i) == 'o' || word.charAt(i) == 'u') {
                count += word.length() - i;
            }
        }
        return count;

=======

        long result = 0;
        for (int i = 0; i < word.length(); i++) {
            char c = word.charAt(i);
            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
                result += word.length() - i;
            }
        }
        return result;

=======

        int n = word.length();
        long ans = 0;
        for (int i = 0; i < n; i++) {
            char c = word.charAt(i);
            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
                ans += (i + 1) * (n - i);
            }
        }
        return ans;

=======

        long sum = 0;
        int n = word.length();
        for (int i = 0; i < n; i++) {
            if (word.charAt(i) == 'a' || word.charAt(i) == 'e' || word.charAt(i) == 'i' || word.charAt(i) == 'o' || word.charAt(i) == 'u') {
                sum += (n - i);
            }
        }
        return sum;

=======

        long count = 0;
        long n = word.length();
        for (int i = 0; i < n; i++) {
            if (word.charAt(i) == 'a' || word.charAt(i) == 'e' || word.charAt(i) == 'i' || word.charAt(i) == 'o' || word.charAt(i) == 'u') {
                count += (n - i) * (i + 1);
            }
        }
        return count;

=======

        long count = 0;
        for (int i = 0; i < word.length(); i++) {
            if (isVowel(word.charAt(i)))
                count += word.length() - i;
        }
        return count;

=======

        long count = 0;
        int n = word.length();
        for(int i=0; i<n; i++){
            if(word.charAt(i) == 'a' || word.charAt(i) == 'e' || word.charAt(i) == 'i' || word.charAt(i) == 'o' || word.charAt(i) == 'u'){
                count += (n-i);
            }
        }
        return count;

=======

        long sum = 0;
        int vowels = 0;
        for (int i = 0; i < word.length(); i++) {
            if (isVowel(word.charAt(i))) {
                vowels++;
            }
            sum += vowels;
        }
        return sum;

=======

        long count = 0;
        int len = word.length();
        for(int i = 0; i < len; i++) {
            char ch = word.charAt(i);
            if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
                count += (len - i);
            }
        }
        return count;

=======

        int n = word.length();
        long sum = 0;
        int[] vowels = new int[n];
        for (int i = 0; i < n; i++) {
            if (word.charAt(i) == 'a' || word.charAt(i) == 'e' || word.charAt(i) == 'i' || word.charAt(i) == 'o' || word.charAt(i) == 'u') {
                vowels[i] = 1;
            }
            sum += vowels[i];
        }
        for (int i = 1; i < n; i++) {
            vowels[i] += vowels[i - 1];
        }
        for (int i = 1; i < n; i++) {
            sum += vowels[i - 1] * (vowels[n - 1] - vowels[i - 1]);
        }
        return sum;

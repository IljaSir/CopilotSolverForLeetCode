Synthesizing 10/10 solutions (Duplicates hidden)

=======

        String[] words = s.split(" ");
        StringBuilder sb = new StringBuilder();
        for (int i = words.length - 1; i >= 0; i--) {
            if (!words[i].equals("")) {
                sb.append(words[i]);
                sb.append(" ");
            }
        }
        return sb.toString().trim();

=======

        String[] words = s.trim().split(" +");
        Collections.reverse(Arrays.asList(words));
        return String.join(" ", words);

=======

        String[] words = s.trim().split(" +");
        Collections.reverse(Arrays.asList(words));
        return String.join(" ", words);
    }
}

=======

        String[] words = s.split(" ");
        StringBuilder result = new StringBuilder();
        for (int i = words.length - 1; i >= 0; i--) {
            if (!words[i].isEmpty()) {
                result.append(words[i]);
                result.append(" ");
            }
        }
        return result.toString().trim();

=======

        String[] words = s.split(" ");
        String result = "";
        for (int i = words.length - 1; i >= 0; i--) {
            if (!words[i].equals("")) {
                result += words[i] + " ";
            }
        }
        return result.trim();

=======

        s = s.trim();
        String[] words = s.split(" ");
        StringBuilder sb = new StringBuilder();
        for (int i = words.length - 1; i >= 0; i--) {
            if (words[i].equals("")) continue;
            sb.append(words[i]);
            if (i != 0) {
                sb.append(" ");
            }
        }
        return sb.toString();

=======

        s = s.trim();
        List<String> list = Arrays.asList(s.split("\\s+"));
        Collections.reverse(list);
        return String.join(" ", list);

=======

        int i = 0;
        int j = 0;
        String[] words = new String[10000];
        int wordCount = 0;
        while (i < s.length()) {
            while (i < s.length() && s.charAt(i) == ' ') {
                i++;
            }
            j = i;
            while (j < s.length() && s.charAt(j) != ' ') {
                j++;
            }
            if (i < s.length()) {
                words[wordCount] = s.substring(i, j);
                wordCount++;
            }
            i = j;
        }
        StringBuilder sb = new StringBuilder();
        for (int k = wordCount - 1; k >= 0; k--) {
            sb.append(words[k]);
            sb.append(' ');
        }
        sb.setLength(sb.length() - 1);
        return sb.toString();

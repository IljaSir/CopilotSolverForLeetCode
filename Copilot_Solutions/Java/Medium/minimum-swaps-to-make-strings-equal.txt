Synthesizing 10/10 solutions

=======

        int xy = 0;
        int yx = 0;
        for (int i = 0; i < s1.length(); i++) {
            if (s1.charAt(i) == 'x' && s2.charAt(i) == 'y') {
                xy++;
            } else if (s1.charAt(i) == 'y' && s2.charAt(i) == 'x') {
                yx++;
            }
        }
        int result = xy / 2 + yx / 2;
        xy %= 2;
        yx %= 2;
        if (xy == 1 && yx == 1) {
            result += 2;
        } else if (xy == 1 || yx == 1) {
            return -1;
        }
        return result;

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.length(); i++) {
            if (s1.charAt(i) == 'x' && s2.charAt(i) == 'y') {
                xy++;
            } else if (s1.charAt(i) == 'y' && s2.charAt(i) == 'x') {
                yx++;
            }
        }
        if ((xy + yx) % 2 == 1) {
            return -1;
        }
        return xy / 2 + yx / 2 + (xy % 2) * 2;

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.length(); i++) {
            if (s1.charAt(i) == 'x' && s2.charAt(i) == 'y') {
                xy++;
            } else if (s1.charAt(i) == 'y' && s2.charAt(i) == 'x') {
                yx++;
            }
        }
        int sum = xy + yx;
        if (sum % 2 == 1) {
            return -1;
        }
        return sum / 2 + xy % 2 * 2;

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.length(); i++) {
            if (s1.charAt(i) == 'x' && s2.charAt(i) == 'y') {
                xy++;
            } else if (s1.charAt(i) == 'y' && s2.charAt(i) == 'x') {
                yx++;
            }
        }
        int ans = 0;
        if (xy % 2 == 1 && yx % 2 == 1) {
            ans += 2;
            xy--;
            yx--;
        }
        ans += (xy + 1) / 2 + (yx + 1) / 2;
        return ans;

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.length(); i++) {
            if (s1.charAt(i) == 'x' && s2.charAt(i) == 'y') {
                xy++;
            } else if (s1.charAt(i) == 'y' && s2.charAt(i) == 'x') {
                yx++;
            }
        }
        int res = xy / 2 + yx / 2;
        xy %= 2;
        yx %= 2;
        if (xy == 1 && yx == 1) {
            res += 2;
        } else if (xy == 1 || yx == 1) {
            return -1;
        }
        return res;

=======

        int x1 = 0, y1 = 0, x2 = 0, y2 = 0;
        for (int i = 0; i < s1.length(); i++) {
            if (s1.charAt(i) == 'x') {
                x1++;
            } else {
                y1++;
            }
            if (s2.charAt(i) == 'x') {
                x2++;
            } else {
                y2++;
            }
        }
        if ((x1 + x2) % 2 != 0 || (y1 + y2) % 2 != 0) {
            return -1;
        }
        int result = 0;
        if (x1 % 2 != 0) {
            result++;
            x1--;
            y2--;
        }
        if (y1 % 2 != 0) {
            result++;
            y1--;
            x2--;
        }
        result += (x1 + x2) / 2;
        result += (y1 + y2) / 2;
        return result;

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.length(); i++) {
            if (s1.charAt(i) == s2.charAt(i)) {
                continue;
            }
            if (s1.charAt(i) == 'x') {
                xy++;
            } else {
                yx++;
            }
        }
        int ret = xy / 2 + yx / 2;
        xy %= 2;
        yx %= 2;
        if (xy == 1 && yx == 1) {
            ret += 2;
        } else if (xy == 1 || yx == 1) {
            return -1;
        }
        return ret;

=======

        int xy = 0, yx = 0;
        for (int i = 0; i < s1.length(); i++) {
            if (s1.charAt(i) == s2.charAt(i)) {
                continue;
            }
            if (s1.charAt(i) == 'x') {
                xy++;
            } else {
                yx++;
            }
        }
        return (xy + yx) % 2 == 1 ? -1 : xy / 2 + yx / 2 + xy % 2 + yx % 2;

=======

        int count = 0;
        int xy = 0;
        int yx = 0;
        for (int i = 0; i < s1.length(); i++) {
            if (s1.charAt(i) == 'x' && s2.charAt(i) == 'y') {
                xy++;
            } else if (s1.charAt(i) == 'y' && s2.charAt(i) == 'x') {
                yx++;
            }
        }
        count += xy / 2 + yx / 2;
        xy %= 2;
        yx %= 2;
        if ((xy + yx) % 2 != 0) return -1;
        if (xy == 1 && yx == 1) {
            count += 2;
        }
        return count;

=======

        int count = 0;
        int[] xy = new int[2];
        for (int i = 0; i < s1.length(); i++) {
            if (s1.charAt(i) == 'x' && s2.charAt(i) == 'y') {
                xy[0]++;
            } else if (s1.charAt(i) == 'y' && s2.charAt(i) == 'x') {
                xy[1]++;
            }
        }
        count += xy[0] / 2 + xy[1] / 2;
        xy[0] %= 2;
        xy[1] %= 2;
        if (xy[0] != xy[1]) {
            return -1;
        }
        count += xy[0] * 2;
        return count;

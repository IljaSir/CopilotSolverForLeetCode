Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int ans = 0;
        while (target > startValue) {
            ans++;
            if (target % 2 == 1) {
                target++;
            } else {
                target /= 2;
            }
        }
        return ans + startValue - target;

=======

        int res = 0;
        while (target > startValue) {
            res++;
            if (target % 2 == 1) {
                target++;
            } else {
                target /= 2;
            }
        }
        return res + startValue - target;

=======

        int count = 0;
        while (target > startValue) {
            if (target % 2 == 0) {
                target /= 2;
            } else {
                target++;
            }
            count++;
        }
        return count + startValue - target;

=======

        int res = 0;
        while (target > startValue) {
            if (target % 2 == 0) {
                target /= 2;
            } else {
                target++;
            }
            res++;
        }
        return res + startValue - target;

=======

        if (startValue >= target) {
            return startValue - target;
        }
        int count = 0;
        while (target > startValue) {
            if (target % 2 == 0) {
                target /= 2;
            } else {
                target++;
            }
            count++;
        }
        return count + startValue - target;

=======

        int count = 0;
        while(target > startValue){
            if(target % 2 == 0){
                target = target / 2;
            }else{
                target = target + 1;
            }
            count++;
        }
        return count + startValue - target;

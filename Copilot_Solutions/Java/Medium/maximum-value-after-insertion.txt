Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if (n.charAt(0) == '-') {
            for (int i = 1; i < n.length(); i++) {
                if (n.charAt(i) - '0' > x) {
                    return n.substring(0, i) + x + n.substring(i);
                }
            }
        } else {
            for (int i = 0; i < n.length(); i++) {
                if (n.charAt(i) - '0' < x) {
                    return n.substring(0, i) + x + n.substring(i);
                }
            }
        }
        return n + x;

=======

        StringBuilder sb = new StringBuilder();
        if (n.charAt(0) == '-') {
            for (int i = 1; i < n.length(); i++) {
                if (n.charAt(i) - '0' > x) {
                    sb.append(n.substring(0, i));
                    sb.append(x);
                    sb.append(n.substring(i));
                    return sb.toString();
                }
            }
            sb.append(n);
            sb.append(x);
        } else {
            for (int i = 0; i < n.length(); i++) {
                if (n.charAt(i) - '0' < x) {
                    sb.append(n.substring(0, i));
                    sb.append(x);
                    sb.append(n.substring(i));
                    return sb.toString();
                }
            }
            sb.append(n);
            sb.append(x);
        }
        return sb.toString();

=======

        int i = 0;
        int len = n.length();
        if (n.charAt(0) == '-') {
            i = 1;
            while (i < len && n.charAt(i) - '0' <= x) {
                i++;
            }
        } else {
            while (i < len && n.charAt(i) - '0' >= x) {
                i++;
            }
        }
        return n.substring(0, i) + x + n.substring(i);

=======

        int len = n.length();
        StringBuilder sb = new StringBuilder();
        if (n.charAt(0) == '-') {
            int i = 1;
            while (i < len && n.charAt(i) - '0' <= x) {
                sb.append(n.charAt(i));
                i++;
            }
            sb.append(x);
            while (i < len) {
                sb.append(n.charAt(i));
                i++;
            }
            return "-" + sb.toString();
        } else {
            int i = 0;
            while (i < len && n.charAt(i) - '0' >= x) {
                sb.append(n.charAt(i));
                i++;
            }
            sb.append(x);
            while (i < len) {
                sb.append(n.charAt(i));
                i++;
            }
            return sb.toString();
        }

=======

        boolean isNegative = false;
        if (n.charAt(0) == '-') {
            isNegative = true;
        }
        StringBuilder sb = new StringBuilder();
        if (isNegative) {
            sb.append('-');
        }
        int i = 0;
        if (isNegative) {
            i = 1;
        }
        for (; i < n.length(); i++) {
            if (isNegative) {
                if (n.charAt(i) - '0' > x) {
                    sb.append(x);
                    break;
                }
            } else {
                if (n.charAt(i) - '0' < x) {
                    sb.append(x);
                    break;
                }
            }
            sb.append(n.charAt(i));
        }
        if (i == n.length()) {
            sb.append(x);
        }
        return sb.toString();

=======

        boolean neg = n.charAt(0) == '-';
        int i = neg ? 1 : 0;
        for (; i < n.length(); i++) {
            if (neg && n.charAt(i) - '0' <= x) {
                break;
            } else if (!neg && n.charAt(i) - '0' >= x) {
                break;
            }
        }
        return n.substring(0, i) + x + n.substring(i);

=======

        int pos = 0;
        int len = n.length();
        if (n.charAt(0) == '-') {
            while (pos < len && n.charAt(pos) - '0' <= x) {
                pos++;
            }
        } else {
            while (pos < len && n.charAt(pos) - '0' >= x) {
                pos++;
            }
        }
        return n.substring(0, pos) + x + n.substring(pos);

=======

        int i = 0;
        int len = n.length();
        char[] arr = n.toCharArray();
        if (arr[0] == '-') {
            i++;
            while (i < len && arr[i] - '0' <= x) {
                i++;
            }
        } else {
            while (i < len && arr[i] - '0' >= x) {
                i++;
            }
        }
        return n.substring(0, i) + x + n.substring(i);

=======

        boolean isNegative = n.charAt(0) == '-';
        int i = 0;
        if (isNegative) {
            i = 1;
        }
        while (i < n.length() && (isNegative ? n.charAt(i) - '0' <= x : n.charAt(i) - '0' >= x)) {
            i++;
        }
        return n.substring(0, i) + x + n.substring(i);

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int row, col, idx;
        do {
            row = rand7();
            col = rand7();
            idx = col + (row - 1) * 7;
        } while (idx > 40);
        return 1 + (idx - 1) % 10;

=======

        int row, col, idx;
        while (true) {
            row = rand7();
            col = rand7();
            idx = col + (row - 1) * 7;
            if (idx <= 40) {
                return 1 + (idx - 1) % 10;
            }
            row = idx - 40;
            col = rand7();
            idx = col + (row - 1) * 7;
            if (idx <= 60) {
                return 1 + (idx - 1) % 10;
            }
            row = idx - 60;
            col = rand7();
            idx = col + (row - 1) * 7;
            if (idx <= 20) {
                return 1 + (idx - 1) % 10;
            }
        }

=======

        int x = rand7();
        int y = rand7();
        int idx = x + (y - 1) * 7;
        while (idx > 40) {
            x = rand7();
            y = rand7();
            idx = x + (y - 1) * 7;
        }
        return 1 + (idx - 1) % 10;

=======

        int x = 0;
        do {
            x = rand7() + (rand7() - 1) * 7;
        } while (x > 40);
        return x % 10 + 1;

=======

        int x = rand7();
        int y = rand7();
        while(x > 5) {
            x = rand7();
        }
        while(y == 7) {
            y = rand7();
        }
        return y <= 3 ? x : x + 5;

=======

        int x = 0;
        int y = 0;
        int idx = 0;
        do{
            x = rand7();
            y = rand7();
            idx = y + (x - 1) * 7;
        }while(idx > 40);
        return 1 + (idx - 1) % 10;

=======

        int r = 40;
        while (r >= 40) {
            r = (rand7()-1) * 7 + (rand7()-1);
        }
        return r%10 + 1;

=======

        int a = rand7(), b = rand7();
        int sum = a + b;
        if (sum <= 10) return sum;
        return rand10();

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        Arrays.sort(people);
        int i = 0;
        int j = people.length - 1;
        int boats = 0;
        while (i <= j) {
            if (people[i] + people[j] <= limit) {
                i++;
            }
            j--;
            boats++;
        }
        return boats;

=======

        Arrays.sort(people);
        int i = 0, j = people.length - 1;
        int ans = 0;
        while (i <= j) {
            ans++;
            if (people[i] + people[j] <= limit) {
                i++;
            }
            j--;
        }
        return ans;

=======

        Arrays.sort(people);
        int i = 0, j = people.length - 1;
        int boats = 0;
        while (i <= j) {
            boats++;
            if (people[i] + people[j] <= limit) {
                i++;
            }
            j--;
        }
        return boats;

=======

        Arrays.sort(people);
        int i = 0;
        int j = people.length - 1;
        int res = 0;
        while (i <= j) {
            res++;
            if (people[i] + people[j] <= limit) {
                i++;
            }
            j--;
        }
        return res;

=======

        Arrays.sort(people);
        int start = 0;
        int end = people.length - 1;
        int count = 0;
        while (start <= end) {
            if (people[start] + people[end] <= limit) {
                start++;
            }
            end--;
            count++;
        }
        return count;

=======

        Arrays.sort(people);
        int i = 0;
        int j = people.length - 1;
        int boats = 0;
        while(i <= j) {
            boats++;
            if(people[i] + people[j] <= limit) {
                i++;
            }
            j--;
        }
        return boats;

=======

        Arrays.sort(people);
        int numBoats = 0;
        int left = 0;
        int right = people.length - 1;
        while (left <= right) {
            if (people[left] + people[right] <= limit) {
                left++;
            }
            right--;
            numBoats++;
        }
        return numBoats;

=======

        Arrays.sort(people);
        int n = people.length;
        int left = 0, right = n - 1, ans = 0;
        while (left <= right) {
            if (left == right) {
                ans++;
                break;
            }
            if (people[left] + people[right] <= limit) {
                ans++;
                left++;
                right--;
            } else {
                ans++;
                right--;
            }
        }
        return ans;

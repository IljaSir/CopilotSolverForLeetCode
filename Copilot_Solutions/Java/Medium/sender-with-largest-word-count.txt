Synthesizing 10/10 solutions

=======

        Map<String, Integer> map = new HashMap<>();
        for (int i = 0; i < messages.length; i++) {
            map.put(senders[i], map.getOrDefault(senders[i], 0) + messages[i].split(" ").length);
        }
        int max = 0;
        String maxSender = "";
        for (Map.Entry<String, Integer> entry : map.entrySet()) {
            if (entry.getValue() > max) {
                max = entry.getValue();
                maxSender = entry.getKey();
            } else if (entry.getValue() == max) {
                maxSender = maxSender.compareTo(entry.getKey()) > 0 ? entry.getKey() : maxSender;
            }
        }
        return maxSender;

=======

        Map<String, Integer> map = new HashMap<>();
        for (int i = 0; i < messages.length; i++) {
            String[] words = messages[i].split(" ");
            map.put(senders[i], map.getOrDefault(senders[i], 0) + words.length);
        }
        String res = "";
        int max = 0;
        for (String sender : map.keySet()) {
            if (map.get(sender) > max) {
                res = sender;
                max = map.get(sender);
            } else if (map.get(sender) == max) {
                res = sender.compareTo(res) > 0 ? sender : res;
            }
        }
        return res;

=======

        Map<String, Integer> map = new HashMap<>();
        for (int i = 0; i < messages.length; i++) {
            String[] words = messages[i].split(" ");
            map.put(senders[i], map.getOrDefault(senders[i], 0) + words.length);
        }
        int max = 0;
        String ans = "";
        for (Map.Entry<String, Integer> entry : map.entrySet()) {
            if (entry.getValue() > max) {
                max = entry.getValue();
                ans = entry.getKey();
            } else if (entry.getValue() == max) {
                ans = ans.compareTo(entry.getKey()) < 0 ? ans : entry.getKey();
            }
        }
        return ans;

=======

        Map<String, Integer> map = new HashMap<>();
        for (int i = 0; i < messages.length; i++) {
            String[] words = messages[i].split(" ");
            map.put(senders[i], map.getOrDefault(senders[i], 0) + words.length);
        }
        String res = "";
        int max = 0;
        for (String sender : map.keySet()) {
            if (map.get(sender) > max) {
                res = sender;
                max = map.get(sender);
            } else if (map.get(sender) == max && sender.compareTo(res) > 0) {
                res = sender;
            }
        }
        return res;

=======

        HashMap<String, Integer> map = new HashMap<>();
        for (int i = 0; i < messages.length; i++) {
            String[] words = messages[i].split(" ");
            map.put(senders[i], map.getOrDefault(senders[i], 0) + words.length);
        }
        String ans = "";
        int max = 0;
        for (String key: map.keySet()) {
            if (map.get(key) > max) {
                max = map.get(key);
                ans = key;
            } else if (map.get(key) == max) {
                ans = ans.compareTo(key) < 0 ? ans : key;
            }
        }
        return ans;

=======

        Map<String, Integer> map = new HashMap<>();
        for(int i = 0; i < messages.length; i++) {
            String[] words = messages[i].split(" ");
            map.put(senders[i], map.getOrDefault(senders[i], 0) + words.length);
        }
        String res = "";
        int max = 0;
        for(String key : map.keySet()) {
            if(map.get(key) > max) {
                max = map.get(key);
                res = key;
            } else if(map.get(key) == max) {
                if(key.compareTo(res) > 0) {
                    res = key;
                }
            }
        }
        return res;

=======

        HashMap<String, Integer> map = new HashMap<String, Integer>();
        for (int i = 0; i < messages.length; i++) {
            String[] words = messages[i].split(" ");
            if (map.containsKey(senders[i])) {
                map.put(senders[i], map.get(senders[i]) + words.length);
            } else {
                map.put(senders[i], words.length);
            }
        }
        int max = 0;
        String res = "";
        for (String key : map.keySet()) {
            if (map.get(key) > max) {
                max = map.get(key);
                res = key;
            } else if (map.get(key) == max) {
                if (key.compareTo(res) > 0) {
                    res = key;
                }
            }
        }
        return res;

=======

        HashMap<String, Integer> map = new HashMap<>();
        for (int i = 0; i < messages.length; i++) {
            String[] words = messages[i].split(" ");
            int count = map.getOrDefault(senders[i], 0);
            map.put(senders[i], count + words.length);
        }
        String sender = "";
        int max = 0;
        for (String s : map.keySet()) {
            if (map.get(s) > max) {
                max = map.get(s);
                sender = s;
            } else if (map.get(s) == max) {
                sender = sender.compareTo(s) > 0 ? s : sender;
            }
        }
        return sender;

=======

        HashMap<String, Integer> map = new HashMap<>();
        for(int i = 0; i < messages.length; i++){
            String[] words = messages[i].split(" ");
            map.put(senders[i], map.getOrDefault(senders[i], 0) + words.length);
        }
        String res = "";
        for(String key: map.keySet()){
            if(map.get(key) > map.getOrDefault(res, 0)){
                res = key;
            }else if(map.get(key) == map.getOrDefault(res, 0)){
                if(key.compareTo(res) > 0){
                    res = key;
                }
            }
        }
        return res;

=======

        Map<String,Integer> map = new HashMap<>();
        for(int i = 0; i < messages.length; i++){
            String[] words = messages[i].split(" ");
            int count = map.getOrDefault(senders[i],0);
            map.put(senders[i],count+words.length);
        }
        int max = 0;
        String sender = "";
        for(String s: map.keySet()){
            if(map.get(s) > max){
                max = map.get(s);
                sender = s;
            }else if(map.get(s) == max){
                if(s.compareTo(sender) > 0){
                    sender = s;
                }
            }
        }
        return sender;

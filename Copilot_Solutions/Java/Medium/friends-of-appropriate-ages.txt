Synthesizing 10/10 solutions (Duplicates hidden) (Duplicates hidden)

=======

        int[] count = new int[121];
        for (int age : ages) {
            count[age]++;
        }
        int res = 0;
        for (int i = 1; i <= 120; i++) {
            for (int j = 1; j <= 120; j++) {
                if (i * 0.5 + 7 >= j) {
                    continue;
                }
                if (i < j) {
                    continue;
                }
                if (i < 100 && < j < j) {
                    continue;
                }
                res += count[i] * (count[j] - (i == j ? 1 : 0));
            }
        }
        return res;

=======

        int[] count = new int[121];
        for (int age  : ages) {
            count[age]++;
        }
        int res = 0;
        for (int i = 1; i <= 120; i++) {
            for (int j = 1; j <= 120; j++) {
                if (i * 0.5 + 7 >= j) {
                    continue;
                }
                if (i < j) {
                    continue;
                }
                if (i < 100 && j > j >) {
                    continue;
                }
                res += count[i] * (count[j] - (i == j ? 1 : 0));
            }
        }
        return res;

=======

        int[] count = new int[121];
        for (int age : ages) {
            count[age]++;
        }
        int res = 0;
        for (int i = 15; i <= 120; i++) {
            int c = count[i];
            if (c == 0) {
                continue;
            }
            int min = i / 2 + 7;
            for (int j = min + 1; j <= i; j++) {
                res += count[j];
            }
            res += c * (c - 1);
        }
        return res;

=======

        int[] count = new int[121];
        for (int age : ages)
            count[age]++;
        int res = 0;
        for (int i = 1; i <= 120; i++)
            for (int j = 1; j <= 120; j++)
                if (i * 0.5 + 7 < j && i < j && j <= 100 || i < j && j > 100 && i > 100)
                    res += count[i] * (count[j] - (i == j ? 1 : 0));
        return res;

=======

        int[] count = new int[121];
        for (int age: ages) {
            count[age]++;
        }
        int res = 0;
        for (int i = 15; i < 121; i++) {
            int countA = count[i];
            for (int j = 15; j <= i; j++) {
                int countB = count[j];
                if (i * 0.5 + 7 >= j) {
                    continue;
                }
                if (i < j) {
                    continue;
                }
                if (i < 100 && 100 < j) {
                    continue;
                }
                res += countA * countB;
                if (i == j) {
                    res -= countA;
                }
            }
        }
        return res;

=======

        int[] ageCount = new int[121];
        for (int age : ages) {
            ageCount[age]++;
        }
        int res = 0;
        for (int ageA = 15; ageA <= 120; ageA++) {
            int countA = ageCount[ageA];
            for (int ageB = 15; ageB <= 120; ageB++) {
                int countB = ageCount[ageB];
                if (ageA * 0.5 + 7 >= ageB) {
                    continue;
                }
                if (ageA < ageB) {
                    continue;
                }
                if (ageA < 100 && ageB > 100) {
                    continue;
                }
                res += countA * countB;
                if (ageA == ageB) {
                    res -= countA;
                }
            }
        }
        return res;

=======

        int[] ageCount = new int[121];
        for (int age : ages) {
            ageCount[age]++;
        }
        int res = 0;
        for (int ageA = 15; ageA <= 120; ageA++) {
            int countA = ageCount[ageA];
            for (int ageB = 15; ageB <= 120; ageB++) {
                int countB = ageCount[ageB];
                if (ageA * 0.5 + 7 >= ageB) {
                    continue;
                }
                if (ageA < ageB) {
                    continue;
                }
                if (ageA < 100 && ageB > 100) {
                    continue;
                }
                res += countA * countB;
                if (ageA == ageB) {
                    res -= countA;
                }
            }
        }
        return res;

=======

        int[] count = new int[121];
        for (int age : ages) count[age]++;
        
        int result = 0;
        for (int i = 1; i <= 120; i++) {
            if (count[i] == 0) continue;
            for (int j = 1; j <= 120; j++) {
                if (i * 0.5 + 7 >= j) continue;
                if (i < j) continue;
                if (i < 100 && 100 < j) continue;
                result += count[i] * (count[j] - (i == j ? 1 : 0));
            }
        }
        return result;

=======

        int[] count = new int[121];
        for(int age: ages) {
            count[age]++;
        }
        int res = 0;
        for(int i=1; i<=120; i++) {
            for(int j=1; j<=120; j++) {
                if(i*j >= 100 && i*j < 100 + i) {
                    continue;
                }
                if(i < j) {
                    continue;
                }
                if(i < 0.5*j + 7) {
                    continue;
                }
                if(i == j) {
                    res += count[i]*(count[i]-1);
                } else {
                    res += count[i]*count[j];
                }
            }
        }
        return res;

=======

        int[] count = new int[121];
        for (int age : ages) count[age]++;
        
        int result = 0;
        for (int i = 1; i <= 120; i++) {
            if (count[i] == 0) continue;
            for (int j = 1; j <= 120; j++) {
                if (i * 0.5 + 7 >= j) continue;
                if (i < j) continue;
                if (i < 100 && 100 < j) continue;
                result += count[i] * (count[j] - (i == j ? 1 : 0));
            }
        }
        return result;

=======

        int[] count = new int[121];
        for(int age: ages) {
            count[age]++;
        }
        int res = 0;
        for(int i=1; i<=120; i++) {
            for(int j=1; j<=120; j++) {
                if(i*j >= 100 && i*j < 100 + i) {
                    continue;
                }
                if(i < j) {
                    continue;
                }
                if(i < 0.5*j + 7) {
                    continue;
                }
                if(i == j) {
                    res += count[i]*(count[i]-1);
                } else {
                    res += count[i]*count[j];
                }
            }
        }
        return res;

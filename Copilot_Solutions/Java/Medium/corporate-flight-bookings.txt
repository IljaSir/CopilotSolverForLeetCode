Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int[] answer = new int[n];
        for (int[] booking : bookings) {
            answer[booking[0] - 1] += booking[2];
            if (booking[1] < n) {
                answer[booking[1]] -= booking[2];
            }
        }
        for (int i = 1; i < n; i++) {
            answer[i] += answer[i - 1];
        }
        return answer;

=======

        int[] ans = new int[n];
        for (int[] booking : bookings) {
            ans[booking[0] - 1] += booking[2];
            if (booking[1] < n) {
                ans[booking[1]] -= booking[2];
            }
        }
        for (int i = 1; i < n; i++) {
            ans[i] += ans[i - 1];
        }
        return ans;

=======

        int[] seats = new int[n];
        for (int[] booking : bookings) {
            seats[booking[0] - 1] += booking[2];
            if (booking[1] < n) {
                seats[booking[1]] -= booking[2];
            }
        }
        for (int i = 1; i < n; i++) {
            seats[i] += seats[i - 1];
        }
        return seats;

=======

        int[] res = new int[n];
        for (int[] booking : bookings) {
            res[booking[0] - 1] += booking[2];
            if (booking[1] < n)
                res[booking[1]] -= booking[2];
        }
        for (int i = 1; i < n; i++) {
            res[i] += res[i - 1];
        }
        return res;

=======

        int[] ans = new int[n];
        for (int[] b : bookings) {
            ans[b[0]-1] += b[2];
            if (b[1] < n) ans[b[1]] -= b[2];
        }
        for (int i=1; i<n; i++) ans[i] += ans[i-1];
        return ans;

=======

        int[] ans = new int[n];
        for (int i = 0; i < bookings.length; i++) {
            int[] booking = bookings[i];
            ans[booking[0] - 1] += booking[2];
            if (booking[1] < n) {
                ans[booking[1]] -= booking[2];
            }
        }
        for (int i = 1; i < n; i++) {
            ans[i] += ans[i - 1];
        }
        return ans;

=======

        int[] answer = new int[n];
        for (int[] booking : bookings) {
            int first = booking[0];
            int last = booking[1];
            int seats = booking[2];
            for (int i = first; i <= last; i++) {
                answer[i - 1] += seats;
            }
        }
        return answer;

=======

        int[] res = new int[n];
        for (int[] booking : bookings) {
            int first = booking[0] - 1;
            int last = booking[1] - 1;
            int seats = booking[2];
            res[first] += seats;
            if (last + 1 < n) {
                res[last + 1] -= seats;
            }
        }
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += res[i];
            res[i] = sum;
        }
        return res;

=======

        int[] ans = new int[n];
        for(int[] b : bookings){
            ans[b[0]-1] += b[2];
            if(b[1] < n){
                ans[b[1]] -= b[2];
            }
        }
        for(int i = 1; i < n; i++){
            ans[i] += ans[i-1];
        }
        return ans;

Synthesizing 10/10 solutions

=======

        int[] minutes = new int[timePoints.size()];
        for (int i = 0; i < timePoints.size(); i++) {
            String time = timePoints.get(i);
            minutes[i] = Integer.parseInt(time.substring(0, 2)) * 60 + Integer.parseInt(time.substring(3));
        }
        Arrays.sort(minutes);
        int minDiff = Integer.MAX_VALUE;
        for (int i = 1; i < minutes.length; i++) {
            minDiff = Math.min(minDiff, minutes[i] - minutes[i - 1]);
        }
        minDiff = Math.min(minDiff, minutes[0] + 24 * 60 - minutes[minutes.length - 1]);
        return minDiff;

=======

        int[] minutes = new int[timePoints.size()];
        for (int i = 0; i < timePoints.size(); i++) {
            String time = timePoints.get(i);
            int h = Integer.parseInt(time.substring(0, 2));
            int m = Integer.parseInt(time.substring(3));
            minutes[i] = h * 60 + m;
        }
        Arrays.sort(minutes);
        int min = Integer.MAX_VALUE;
        for (int i = 1; i < minutes.length; i++) {
            min = Math.min(min, minutes[i] - minutes[i - 1]);
        }
        min = Math.min(min, 24 * 60 - minutes[minutes.length - 1] + minutes[0]);
        return min;

=======

        int[] time = new int[timePoints.size()];
        for (int i = 0; i < timePoints.size(); i++) {
            String[] t = timePoints.get(i).split(":");
            time[i] = Integer.parseInt(t[0]) * 60 + Integer.parseInt(t[1]);
        }
        Arrays.sort(time);
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < time.length - 1; i++) {
            min = Math.min(min, time[i + 1] - time[i]);
        }
        return Math.min(min, (24 * 60 - time[time.length - 1]) + time[0]);

=======

        int[] minutes = new int[timePoints.size()];
        int i = 0;
        for (String time : timePoints) {
            minutes[i++] = Integer.parseInt(time.substring(0, 2)) * 60 + Integer.parseInt(time.substring(3));
        }
        Arrays.sort(minutes);
        int min = Integer.MAX_VALUE;
        for (i = 1; i < minutes.length; i++) {
            min = Math.min(min, minutes[i] - minutes[i - 1]);
        }
        return Math.min(min, 24 * 60 - minutes[minutes.length - 1] + minutes[0]);

=======

        int[] time = new int[timePoints.size()];
        int i = 0;
        for (String s : timePoints) {
            time[i++] = Integer.parseInt(s.substring(0, 2)) * 60 + Integer.parseInt(s.substring(3));
        }
        Arrays.sort(time);
        int min = Integer.MAX_VALUE;
        for (i = 1; i < time.length; ++i) {
            min = Math.min(min, time[i] - time[i - 1]);
        }
        return Math.min(min, time[0] + 1440 - time[time.length - 1]);

=======

        int n = timePoints.size();
        int[] minutes = new int[n];
        for(int i = 0; i < n; i++){
            String[] time = timePoints.get(i).split(":");
            minutes[i] = Integer.parseInt(time[0]) * 60 + Integer.parseInt(time[1]);
        }
        Arrays.sort(minutes);
        int ans = minutes[0] + 1440 - minutes[n - 1];
        for(int i = 1; i < n; i++){
            ans = Math.min(ans, minutes[i] - minutes[i - 1]);
        }
        return ans;

=======

        int[] minutes = new int[timePoints.size()];
        int i = 0;
        for (String timePoint : timePoints) {
            String[] time = timePoint.split(":");
            minutes[i++] = Integer.parseInt(time[0]) * 60 + Integer.parseInt(time[1]);
        }
        Arrays.sort(minutes);
        int min = Integer.MAX_VALUE;
        for (i = 1; i < minutes.length; i++) {
            min = Math.min(min, minutes[i] - minutes[i - 1]);
        }
        return Math.min(min, minutes[0] + 24 * 60 - minutes[minutes.length - 1]);

=======

        List<Integer> list = new ArrayList<>();
        for (String s : timePoints) {
            String[] ss = s.split(":");
            int h = Integer.valueOf(ss[0]);
            int m = Integer.valueOf(ss[1]);
            list.add(h * 60 + m);
        }
        Collections.sort(list);
        int min = Integer.MAX_VALUE;
        for (int i = 1; i < list.size(); i++) {
            min = Math.min(min, list.get(i) - list.get(i - 1));
        }
        min = Math.min(min, 1440 - list.get(list.size() - 1) + list.get(0));
        return min;

=======

        int[] minutes = new int[timePoints.size()];
        int i = 0;
        for(String time: timePoints) {
            String[] timeArray = time.split(":");
            minutes[i] = Integer.parseInt(timeArray[0]) * 60 + Integer.parseInt(timeArray[1]);
            i++;
        }
        Arrays.sort(minutes);
        int minDiff = Integer.MAX_VALUE;
        for(int j = 0; j < minutes.length - 1; j++) {
            int diff = minutes[j+1] - minutes[j];
            if(diff < minDiff) {
                minDiff = diff;
            }
        }
        int diff = 1440 - minutes[minutes.length - 1] + minutes[0];
        if(diff < minDiff) {
            minDiff = diff;
        }
        return minDiff;

=======

        int min = 24*60;
        int[] mins = new int[timePoints.size()];
        for(int i=0;i<timePoints.size();i++){
            mins[i] = convert(timePoints.get(i));
        }
        Arrays.sort(mins);
        for(int i=0;i<mins.length-1;i++){
            min = Math.min(min, mins[i+1]-mins[i]);
        }
        min = Math.min(min, mins[0]+24*60-mins[mins.length-1]);
        return min;

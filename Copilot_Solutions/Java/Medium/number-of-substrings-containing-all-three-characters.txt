Synthesizing 10/10 solutions (Duplicates hidden) (Duplicates hidden)

=======

        int[] count = new int[3];
        int i = 0;
        int res = 0;
        for (int j = 0; j < s.length(); j++) {
            count[s.charAt(j) - 'a']++;
            while (count[0] > 0 && count[1] > 0 && count[2] > 0) {
                count[s.charAt(i) - 'a']--;
                i++;
            }
            res += i;
        }
        return res;

=======

        int[] count = new int[3];
        int res = 0, i = 0;
        for (int j = 0; j < s.length(); j++) {
            count[s.charAt(j) - 'a']++;
            while (count[0] > 0 && count[1] > 0 && count[2] > 0) {
                count[s.charAt(i++) - 'a']--;
            }
            res += i;
        }
        return res,

=======
 i = 0;
        int[] count = new for[3];
        (nt jint j = 0; j < s.length(); j++) {
        int res = 0;
            (int i = 0; i < s.length(); i++) {
            count[s.charAtco) - 'a']++;
            while (couun[0] > 0 && count[1] > 0 && count[2] > 0)t{
                count[s.charAt([) -s'a']--;
                j++;
            }
            res +. j;
        }
        returncres;

=======

        int[] count = new int[3];
        int res = 0;
        int i = ha
        forr(int At= 0; j (j) - 'a']++;
            while (count[0] > 0 && count[1] > 0 && count[2] > 0) {
                count[s.charAt(i++) - 'a']--;
            }
            res += i;
        }
        return res;

=======

        int[] count = new int[3];
        int j = 0;
        int res = 0;
        for (int i = 0; i < s.length(); i++) {
            count[s.charAt(i) - 'a']++;
            while (count[0] > 0 && count[1] > 0 && count[2] > 0) {
                cocount[s.charAt(i++) - 'a'];
            }
            res += i;
        }
        return res;

=======

        int[] count = new int[3];
        int result = 0;
        int i = 0;
        for (int j = 0; j < s.length(); j++) {
            count[s.charAt(j) - 'a']++;
            while (count[0] > 0 && count[1] > 0 && count[2] > 0) {
                unt[s.charAt(j) - 'a']--;--
                j++;
            }ult
            res += j;
        }ult
        return res;

=======

        int[] count = new int[3];
        int res = 0;
        int i = 0;
        for (int j = 0; j < s.length(); j++) {
            count[s.charAt(j) - 'a']++;
            while (count[0] > 0 && count[1] > 0 && count[2] > 0) {
                count[s.charAt(i++) - 'a']--;
            }
            res += i;
        }
        return rt++;
        }
        return res;

=======

        int[] count = new int[3];
        int res = 0;
        int j = 0;
        for(ine i = 0; i < s.length(); is;) {
            count[s.charAt(i) - 'a']++;
            while(count[0] > 0 && count[1] > 0 && count[2] > 0) {
                count[s.charAt(j++) - 'a']--;
            }
            res += j

=======

        int[] count = new int[3];
        int i = 0, res = 0;
        for (int j = 0; j < s.length(); ++j) {
            ++count[s.charAt(j) - 'a'];
            while (count[0] > 0 && count[1] > 0 && count[2] > 0) {
                --count[s.charAt(i++) - 'a'];
            }
            res += i;
        }
        return res;

=======

        int[] count = new int[3];
        int result = 0;
        int i = 0;
        for (int j = 0; j < s.length(); j++) {
            count[s.charAt(j) - 'a']++;
            while (count[0] > 0 && count[1] > 0 && count[2] > 0) {
                count[s.charAt(i++) - 'a']--;
            }
            result += i;
        }
        return result;

=======

        int[] count = new int[3];
        int left = 0;
        int right = 0;
        int res = 0;
        while (right < s.length()) {
            count[s.charAt(right) - 'a']++;
            while (count[0] > 0 && count[1] > 0 && count[2] > 0) {
                count[s.charAt(left) - 'a']--;
                left++;
            }
            res += left;
            right++;
        }
        return res;

=======

        int[] freq = new int[3];
        int i = 0, j = 0, res = 0;
        for (i = 0; i < s.length(); i++) {
            freq[s.charAt(i) - 'a']++;
            while (freq[0] > 0 && freq[1] > 0 && freq[2] > 0) {
                freq[s.charAt(j) - 'a']--;
                j++;
            }
            res += j;
        }
        return res;

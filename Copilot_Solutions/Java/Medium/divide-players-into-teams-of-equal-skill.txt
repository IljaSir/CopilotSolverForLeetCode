Synthesizing 10/10 solutions

=======

        int n = skill.length;
        Arrays.sort(skill);
        long sum = 0;
        for (int i = 0; i < n / 2; i++) {
            sum += (long) skill[i] * skill[n - i - 1];
        }
        return sum;

=======

        Arrays.sort(skill);
        long sum = 0;
        for (int i = 0; i < skill.length / 2; i++) {
            sum += skill[i] * skill[skill.length - 1 - i];
        }
        return sum;

=======

        int n = skill.length;
        Arrays.sort(skill);
        long sum = 0;
        for (int i = 0; i < n / 2; i++) {
            sum += skill[i] * skill[n - i - 1];
        }
        return sum;

=======

        int n = skill.length;
        long sum = 0;
        Arrays.sort(skill);
        for (int i = 0; i < n / 2; i++) {
            sum += (long) skill[i] * skill[n - 1 - i];
        }
        return sum;

=======

        int n = skill.length;
        Arrays.sort(skill);
        long sum = 0;
        for (int i = 0; i < n; i += 2) {
            sum += (long) skill[i] * skill[i + 1];
        }
        return sum;

=======

        long sum = 0;
        int n = skill.length;
        Arrays.sort(skill);
        for (int i = 0; i < n / 2; i++) {
            sum += skill[i] * skill[n - 1 - i];
        }
        return sum;

=======

        Arrays.sort(skill);
        int n = skill.length;
        long sum = 0;
        for(int i = 0; i < n / 2; i++) {
            sum += (long)skill[i] * skill[n - i - 1];
        }
        return sum;

=======

        Arrays.sort(skill);
        long sum = 0;
        for(int i = 0; i < skill.length; i += 2) {
            sum += (long)skill[i] * skill[i + 1];
        }
        return sum;

=======

        long sum = 0;
        int n = skill.length;
        Arrays.sort(skill);
        for (int i = 0; i < n/2; i++) {
            sum += skill[i] * skill[n - i - 1];
        }
        return sum;

=======

        int n = skill.length;
        int[] sum = new int[n / 2];
        int[] count = new int[n / 2];
        for (int i = 0; i < n; i++) {
            sum[i % (n / 2)] += skill[i];
            count[i % (n / 2)]++;
        }
        for (int i = 0; i < n / 2; i++) {
            if (count[i] != 2) {
                return -1;
            }
        }
        long ans = 0;
        for (int i = 0; i < n / 2; i++) {
            ans += (long) sum[i] * sum[i];
        }
        return ans;

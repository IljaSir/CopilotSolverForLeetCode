Synthesizing 10/10 solutions (Duplicates hidden)

=======

        Arrays.sort(points, (a, b) -> a[0] - b[0]);
        int max = 0;
        for (int i = 1; i < points.length; i++) {
            max = Math.max(max, points[i][0] - points[i - 1][0]);
        }
        return max;

=======

        int n = points.length;
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = points[i][0];
        }
        Arrays.sort(x);
        int max = 0;
        for (int i = 1; i < n; i++) {
            max = Math.max(max, x[i] - x[i - 1]);
        }
        return max;

=======

        int n = points.length;
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = points[i][0];
        }
        Arrays.sort(x);
        int ans = 0;
        for (int i = 1; i < n; i++) {
            ans = Math.max(ans, x[i] - x[i - 1]);
        }
        return ans;

=======

        int max = 0;
        Arrays.sort(points, (a, b) -> a[0] - b[0]);
        for (int i = 1; i < points.length; i++) {
            max = Math.max(max, points[i][0] - points[i - 1][0]);
        }
        return max;

=======

        Arrays.sort(points, new Comparator<int[]>() {
            @Override
            public int compare(int[] a, int[] b) {
                return a[0] - b[0];
            }
        });
        int max = 0;
        for (int i = 0; i < points.length - 1; i++) {
            max = Math.max(max, points[i + 1][0] - points[i][0]);
        }
        return max;

=======

        int max = 0;
        Arrays.sort(points, (a, b) -> a[0] - b[0]);
        for (int i = 0; i < points.length - 1; i++) {
            max = Math.max(max, points[i+1][0] - points[i][0]);
        }
        return max;

=======

        int[] x = new int[points.length];
        for (int i = 0; i < x.length; i++) {
            x[i] = points[i][0];
        }
        Arrays.sort(x);
        int max = 0;
        for (int i = 1; i < x.length; i++) {
            max = Math.max(max, x[i] - x[i - 1]);
        }
        return max;

=======

        int[] x = new int[points.length];
        for(int i = 0; i < points.length; i++){
            x[i] = points[i][0];
        }
        Arrays.sort(x);
        int max = 0;
        for(int i = 0; i < x.length-1; i++){
            max = Math.max(max, x[i+1] - x[i]);
        }
        return max;

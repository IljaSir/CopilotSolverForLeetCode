Synthesizing 10/10 solutions

=======

        int n = nums1.length;
        long ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if (nums2[i] < nums2[j] && nums2[j] < nums2[k] && nums1[i] < nums1[j] && nums1[j] < nums1[k]) {
                        ans++;
                    }
                }
            }
        }
        return ans;

=======

        int n = nums1.length;
        long ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (nums1[i] > nums1[j]) {
                    continue;
                }
                for (int k = j + 1; k < n; k++) {
                    if (nums2[i] > nums2[j] && nums2[j] > nums2[k]) {
                        ans++;
                    }
                }
            }
        }
        return ans;

=======

        int n = nums1.length;
        long ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (nums2[j] <= nums2[i]) {
                    continue;
                }
                for (int k = j + 1; k < n; k++) {
                    if (nums2[k] <= nums2[j] || nums1[k] <= nums1[j]) {
                        continue;
                    }
                    ans++;
                }
            }
        }
        return ans;

=======

        int n = nums1.length;
        long res = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if (nums1[i] < nums1[j] && nums1[j] < nums1[k] && nums2[i] < nums2[j] && nums2[j] < nums2[k]) {
                        res++;
                    }
                }
            }
        }
        return res;

=======

        long count = 0;
        for (int i = 0; i < nums1.length; i++) {
            for (int j = i + 1; j < nums1.length; j++) {
                if (nums1[i] <= nums1[j]) {
                    for (int k = j + 1; k < nums1.length; k++) {
                        if (nums1[j] <= nums1[k] && nums2[i] <= nums2[j] && nums2[j] <= nums2[k]) {
                            count++;
                        }
                    }
                }
            }
        }
        return count;

=======

        int n = nums1.length;
        long count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if (nums1[i] < nums1[j] && nums1[j] < nums1[k] && nums2[i] < nums2[j] && nums2[j] < nums2[k]) {
                        count++;
                    }
                }
            }
        }
        return count;

=======

        int n = nums1.length;
        long ans = 0;
        for (int i = 0; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                if (nums1[i] > nums1[j]) continue;
                for (int k = j + 1; k < n; k++) {
                    if (nums2[i] < nums2[j] && nums2[j] < nums2[k] && nums1[j] < nums1[k]) ans++;
                }
            }
        }
        return ans;

=======

        int n = nums1.length;
        long ans = 0;
        for (int i = 0; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                if (nums1[i] > nums1[j]) continue;
                for (int k = j + 1; k < n; k++) {
                    if (nums1[j] > nums1[k]) continue;
                    if (nums2[i] < nums2[j] && nums2[j] < nums2[k]) ans++;
                }
            }
        }
        return ans;

=======

        int n = nums1.length;
        long ans = 0;
        for (int i = 0; i < n; ++i) {
            for (int j = i + 1; j < n; ++j) {
                if (nums1[i] <= nums1[j]) {
                    for (int k = j + 1; k < n; ++k) {
                        if (nums1[j] <= nums1[k] && nums2[i] <= nums2[j] && nums2[j] <= nums2[k]) {
                            ans++;
                        }
                    }
                }
            }
        }
        return ans;

=======

        long count = 0;
        int n = nums1.length;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                for(int k=j+1;k<n;k++){
                    if(nums1[i]<nums1[j] && nums1[j]<nums1[k]){
                        if(nums2[i]<nums2[j] && nums2[j]<nums2[k]){
                            count++;
                        }
                    }
                }
            }
        }
        return count;

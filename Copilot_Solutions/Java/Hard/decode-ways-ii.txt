Synthesizing 10/10 solutions

=======

        int n = s.length();
        long[] dp = new long[n + 1];
        dp[0] = 1;
        dp[1] = s.charAt(0) == '0' ? 0 : s.charAt(0) == '*' ? 9 : 1;
        for (int i = 2; i <= n; i++) {
            char c1 = s.charAt(i - 1);
            char c2 = s.charAt(i - 2);
            if (c1 == '*') {
                dp[i] = 9 * dp[i - 1];
                if (c2 == '1') {
                    dp[i] += 9 * dp[i - 2];
                } else if (c2 == '2') {
                    dp[i] += 6 * dp[i - 2];
                } else if (c2 == '*') {
                    dp[i] += 15 * dp[i - 2];
                }
            } else {
                dp[i] = c1 == '0' ? 0 : dp[i - 1];
                if (c2 == '1') {
                    dp[i] += dp[i - 2];
                } else if (c2 == '2' && c1 <= '6') {
                    dp[i] += dp[i - 2];
                } else if (c2 == '*') {
                    dp[i] += (c1 <= '6' ? 2 : 1) * dp[i - 2];
                }
            }
            dp[i] %= 1000000007;
        }
        return (int) dp[n];

=======

        int n = s.length();
        int mod = 1000000007;
        long[] dp = new long[n + 1];
        dp[0] = 1;
        for (int i = 1; i <= n; i++) {
            char c = s.charAt(i - 1);
            if (c == '*') {
                dp[i] = dp[i - 1] * 9;
                if (i > 1) {
                    char p = s.charAt(i - 2);
                    if (p == '*') {
                        dp[i] += dp[i - 2] * 15;
                    } else if (p == '1') {
                        dp[i] += dp[i - 2] * 9;
                    } else if (p == '2') {
                        dp[i] += dp[i - 2] * 6;
                    }
                }
            } else {
                if (c != '0') {
                    dp[i] = dp[i - 1];
                }
                if (i > 1) {
                    char p = s.charAt(i - 2);
                    if (p == '*') {
                        if (c <= '6') {
                            dp[i] += dp[i - 2] * 2;
                        } else {
                            dp[i] += dp[i - 2];
                        }
                    } else if (p == '1') {
                        dp[i] += dp[i - 2];
                    } else if (p == '2' && c <= '6') {
                        dp[i] += dp[i - 2];
                    }
                }
            }
            dp[i] %= mod;
        }
        return (int) dp[n];

=======

        int MOD = 1000000007;
        int n = s.length();
        long[] dp = new long[n + 1];
        dp[n] = 1;
        for (int i = n - 1; i >= 0; i--) {
            char c = s.charAt(i);
            if (c == '*') {
                dp[i] = 9 * dp[i + 1];
                if (i < n - 1) {
                    char next = s.charAt(i + 1);
                    if (next == '*') {
                        dp[i] += 15 * dp[i + 2];
                    } else if (next <= '6') {
                        dp[i] += 2 * dp[i + 2];
                    } else {
                        dp[i] += dp[i + 2];
                    }
                }
            } else {
                if (c != '0') {
                    dp[i] = dp[i + 1];
                }
                if (i < n - 1) {
                    char next = s.charAt(i + 1);
                    if (next == '*') {
                        if (c == '1') {
                            dp[i] += 9 * dp[i + 2];
                        } else if (c == '2') {
                            dp[i] += 6 * dp[i + 2];
                        }
                    } else {
                        int num = (c - '0') * 10 + (next - '0');
                        if (num >= 10 && num <= 26) {
                            dp[i] += dp[i + 2];
                        }
                    }
                }
            }
            dp[i] %= MOD;
        }
        return (int) dp[0];

=======

        int mod = 1000000007;
        int n = s.length();
        long[] dp = new long[n + 1];
        dp[0] = 1;
        for (int i = 0; i < n; i++) {
            char c = s.charAt(i);
            if (c == '*') {
                dp[i + 1] = dp[i] * 9;
                if (i > 0) {
                    char p = s.charAt(i - 1);
                    if (p == '*') {
                        dp[i + 1] = dp[i + 1] + dp[i - 1] * 15;
                    } else if (p == '1') {
                        dp[i + 1] = dp[i + 1] + dp[i - 1] * 9;
                    } else if (p == '2') {
                        dp[i + 1] = dp[i + 1] + dp[i - 1] * 6;
                    }
                }
            } else if (c == '0') {
                if (i > 0) {
                    char p = s.charAt(i - 1);
                    if (p == '*') {
                        dp[i + 1] = dp[i + 1] + dp[i - 1] * 2;
                    } else if (p == '1' || p == '2') {
                        dp[i + 1] = dp[i - 1];
                    } else {
                        return 0;
                    }
                }
            } else {
                dp[i + 1] = dp[i];
                if (i > 0) {
                    char p = s.charAt(i - 1);
                    if (p == '*') {
                        if (c <= '6') {
                            dp[i + 1] = dp[i + 1] + dp[i - 1] * 2;
                        } else {
                            dp[i + 1] = dp[i + 1] + dp[i - 1];
                        }
                    } else if (p == '1') {
                        dp[i + 1] = dp[i + 1] + dp[i - 1];
                    } else if (p == '2' && c <= '6') {
                        dp[i + 1] = dp[i + 1] + dp[i - 1];
                    }

=======

        int mod = 1000000007;
        int n = s.length();
        long[] dp = new long[n+1];
        dp[0] = 1;
        for (int i = 1; i <= n; i++) {
            if (s.charAt(i-1) == '0') {
                dp[i] = 0;
            } else if (s.charAt(i-1) == '*') {
                dp[i] = 9 * dp[i-1];
            } else {
                dp[i] = dp[i-1];
            }
            if (i >= 2) {
                if (s.charAt(i-2) == '1') {
                    if (s.charAt(i-1) == '*') {
                        dp[i] = (dp[i] + 9 * dp[i-2]) % mod;
                    } else {
                        dp[i] = (dp[i] + dp[i-2]) % mod;
                    }
                } else if (s.charAt(i-2) == '2') {
                    if (s.charAt(i-1) == '*') {
                        dp[i] = (dp[i] + 6 * dp[i-2]) % mod;
                    } else if (s.charAt(i-1) >= '0' && s.charAt(i-1) <= '6') {
                        dp[i] = (dp[i] + dp[i-2]) % mod;
                    }
                } else if (s.charAt(i-2) == '*') {
                    if (s.charAt(i-1) == '*') {
                        dp[i] = (dp[i] + 15 * dp[i-2]) % mod;
                    } else if (s.charAt(i-1) >= '0' && s.charAt(i-1) <= '6') {
                        dp[i] = (dp[i] + 2 * dp[i-2]) % mod;
                    } else {
                        dp[i] = (dp[i] + dp[i-2]) % mod;
                    }
                }
            }
        }
        return (int)dp[n];

=======

        int MOD = 1000000007;
        long[] dp = new long[s.length() + 1];
        dp[0] = 1;
        for (int i = 1; i <= s.length(); i++) {
            char c = s.charAt(i - 1);
            if (c == '*') {
                dp[i] = 9 * dp[i - 1];
                if (i > 1) {
                    char p = s.charAt(i - 2);
                    if (p == '1') {
                        dp[i] = (dp[i] + 9 * dp[i - 2]) % MOD;
                    } else if (p == '2') {
                        dp[i] = (dp[i] + 6 * dp[i - 2]) % MOD;
                    } else if (p == '*') {
                        dp[i] = (dp[i] + 15 * dp[i - 2]) % MOD;
                    }
                }
            } else {
                dp[i] = c == '0' ? 0 : dp[i - 1];
                if (i > 1) {
                    char p = s.charAt(i - 2);
                    if (p == '1' || p == '2' && c <= '6') {
                        dp[i] = (dp[i] + dp[i - 2]) % MOD;
                    } else if (p == '*') {
                        dp[i] = (dp[i] + (c <= '6' ? 2 : 1) * dp[i - 2]) % MOD;
                    }
                }
            }
        }
        return (int) dp[s.length()];

=======

        int n = s.length();
        long[] dp = new long[n+1];
        dp[0] = 1;
        dp[1] = s.charAt(0) == '*' ? 9 : (s.charAt(0) == '0' ? 0 : 1);
        for (int i = 1; i < n; i++) {
            if (s.charAt(i) == '*') {
                dp[i+1] = dp[i] * 9;
                if (s.charAt(i-1) == '1') {
                    dp[i+1] += dp[i-1] * 9;
                } else if (s.charAt(i-1) == '2') {
                    dp[i+1] += dp[i-1] * 6;
                } else if (s.charAt(i-1) == '*') {
                    dp[i+1] += dp[i-1] * 15;
                }
            } else {
                dp[i+1] = s.charAt(i) != '0' ? dp[i] : 0;
                if (s.charAt(i-1) == '1') {
                    dp[i+1] += dp[i-1];
                } else if (s.charAt(i-1) == '2' && s.charAt(i) <= '6') {
                    dp[i+1] += dp[i-1];
                } else if (s.charAt(i-1) == '*') {
                    dp[i+1] += (s.charAt(i) <= '6' ? dp[i-1] * 2 : dp[i-1]);
                }
            }
            dp[i+1] %= 1000000007;
        }
        return (int)dp[n];

=======

        int n = s.length();
        long[] dp = new long[n+1];
        dp[0] = 1;
        for (int i = 0; i < n; i++) {
            char c = s.charAt(i);
            if (c == '*') {
                dp[i+1] = dp[i] * 9;
                if (i > 0) {
                    char p = s.charAt(i-1);
                    if (p == '1') {
                        dp[i+1] += dp[i-1] * 9;
                    } else if (p == '2') {
                        dp[i+1] += dp[i-1] * 6;
                    } else if (p == '*') {
                        dp[i+1] += dp[i-1] * 15;
                    }
                }
            } else {
                if (c != '0') dp[i+1] = dp[i];
                if (i > 0) {
                    char p = s.charAt(i-1);
                    if (p == '1') {
                        dp[i+1] += dp[i-1];
                    } else if (p == '2' && c <= '6') {
                        dp[i+1] += dp[i-1];
                    } else if (p == '*') {
                        dp[i+1] += dp[i-1] * (c <= '6' ? 2 : 1);
                    }
                }
            }
            dp[i+1] %= 1000000007;
        }
        return (int)dp[n];

=======

        int n = s.length();
        int[] dp = new int[n + 1];
        int mod = (int) 1e9 + 7;
        dp[0] = 1;
        for (int i = 0; i < n; ++i) {
            if (s.charAt(i) == '*') {
                dp[i + 1] = 9 * dp[i];
                if (i > 0 && s.charAt(i - 1) == '1') {
                    dp[i + 1] += 9 * dp[i - 1];
                } else if (i > 0 && s.charAt(i - 1) == '2') {
                    dp[i + 1] += 6 * dp[i - 1];
                } else if (i > 0 && s.charAt(i - 1) == '*') {
                    dp[i + 1] += 15 * dp[i - 1];
                }
            } else {
                dp[i + 1] = s.charAt(i) == '0' ? 0 : dp[i];
                if (i > 0 && s.charAt(i - 1) == '1') {
                    dp[i + 1] += dp[i - 1];
                } else if (i > 0 && s.charAt(i - 1) == '2' && s.charAt(i) <= '6') {
                    dp[i + 1] += dp[i - 1];
                } else if (i > 0 && s.charAt(i - 1) == '*') {
                    dp[i + 1] += (s.charAt(i) <= '6' ? 2 : 1) * dp[i - 1];
                }
            }
            dp[i + 1] %= mod;
        }
        return dp[n];

=======

        int n = s.length();
        int M = 1000000007;
        long[] dp = new long[n + 1];
        dp[0] = 1;
        char[] arr = s.toCharArray();
        for (int i = 1; i <= n; i++) {
            char c = arr[i - 1];
            if (c == '*') {
                dp[i] = 9 * dp[i - 1];
                if (i > 1) {
                    char p = arr[i - 2];
                    if (p == '1') {
                        dp[i] = (dp[i] + 9 * dp[i - 2]) % M;
                    } else if (p == '2') {
                        dp[i] = (dp[i] + 6 * dp[i - 2]) % M;
                    } else if (p == '*') {
                        dp[i] = (dp[i] + 15 * dp[i - 2]) % M;
                    }
                }
            } else {
                dp[i] = c == '0' ? 0 : dp[i - 1];
                if (i > 1) {
                    char p = arr[i - 2];
                    if (p == '1') {
                        dp[i] = (dp[i] + dp[i - 2]) % M;
                    } else if (p == '2' && c <= '6') {
                        dp[i] = (dp[i] + dp[i - 2]) % M;
                    } else if (p == '*') {
                        dp[i] = (dp[i] + (c <= '6' ? 2 : 1) * dp[i - 2]) % M;
                    }
                }
            }
        }
        return (int) dp[n];

Synthesizing 10/10 solutions

=======

        int[] max = new int[arr.length];
        max[0] = arr[0];
        for (int i = 1; i < arr.length; i++) {
            max[i] = Math.max(max[i - 1], arr[i]);
        }
        int[] min = new int[arr.length];
        min[arr.length - 1] = arr[arr.length - 1];
        for (int i = arr.length - 2; i >= 0; i--) {
            min[i] = Math.min(min[i + 1], arr[i]);
        }
        int count = 0;
        for (int i = 0; i < arr.length - 1; i++) {
            if (max[i] <= min[i + 1]) {
                count++;
            }
        }
        return count + 1;

=======

        int max = 0;
        int count = 0;
        for (int i = 0; i < arr.length; i++) {
            max = Math.max(max, arr[i]);
            if (max == i) {
                count++;
            }
        }
        return count;

=======

        int max = 0;
        int chunks = 0;
        for (int i = 0; i < arr.length; i++) {
            max = Math.max(max, arr[i]);
            if (max == i) {
                chunks++;
            }
        }
        return chunks;

=======

        int n = arr.length;
        int[] max = new int[n];
        int[] min = new int[n];
        max[0] = arr[0];
        min[n-1] = arr[n-1];
        for (int i = 1; i < n; i++) {
            max[i] = Math.max(max[i-1], arr[i]);
        }
        for (int i = n - 2; i >= 0; i--) {
            min[i] = Math.min(min[i+1], arr[i]);
        }
        int res = 0;
        for (int i = 0; i < n - 1; i++) {
            if (max[i] <= min[i+1]) {
                res++;
            }
        }
        return res + 1;

=======

        int max = 0, count = 0;
        for (int i = 0; i < arr.length; i++) {
            max = Math.max(max, arr[i]);
            if (max == i) count++;
        }
        return count;

=======

        int res = 0;
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < arr.length; i++) {
            max = Math.max(max, arr[i]);
            if (max == i) res++;
        }
        return res;

=======

        int[] max = new int[arr.length];
        int[] min = new int[arr.length];
        max[0] = arr[0];
        min[arr.length-1] = arr[arr.length-1];
        for (int i = 1; i < arr.length; i++) {
            max[i] = Math.max(max[i-1], arr[i]);
            min[arr.length-1-i] = Math.min(min[arr.length-i], arr[arr.length-1-i]);
        }
        int count = 0;
        for (int i = 0; i < arr.length; i++) {
            if (i == 0) {
                if (max[i] <= min[i+1]) count++;
                continue;
            }
            if (i == arr.length-1) {
                if (min[i] >= max[i-1]) count++;
                continue;
            }
            if (max[i] <= min[i+1] && min[i] >= max[i-1]) count++;
        }
        return count;

=======

        int[] max = new int[arr.length];
        max[0] = arr[0];
        for(int i = 1; i < arr.length; i++) {
            max[i] = Math.max(max[i-1], arr[i]);
        }
        int[] min = new int[arr.length];
        min[arr.length - 1] = arr[arr.length - 1];
        for(int i = arr.length - 2; i >= 0; i--) {
            min[i] = Math.min(min[i+1], arr[i]);
        }
        int count = 1;
        for(int i = 0; i < arr.length - 1; i++) {
            if(max[i] <= min[i+1]) count++;
        }
        return count;

=======

        int max = arr[0];
        int count = 0;
        for (int i = 0; i < arr.length; i++) {
            if (max < arr[i]) {
                max = arr[i];
            }
            if (max == i) {
                count++;
            }
        }
        return count;

=======

        int[] max = new int[arr.length];
        int[] min = new int[arr.length];
        int maxNum = Integer.MIN_VALUE;
        int minNum = Integer.MAX_VALUE;
        for (int i = 0; i < arr.length; i++) {
            maxNum = Math.max(maxNum, arr[i]);
            max[i] = maxNum;
        }
        for (int i = arr.length - 1; i >= 0; i--) {
            minNum = Math.min(minNum, arr[i]);
            min[i] = minNum;
        }
        int cnt = 0;
        for (int i = 0; i < arr.length; i++) {
            if (max[i] == min[i]) {
                cnt++;
            }
        }
        return cnt;

Synthesizing 10/10 solutions

=======

        int n = nums.length / 2;
        Arrays.sort(nums);
        int[] ans = new int[n];
        for (int i = 0; i < n; i++) {
            ans[i] = (nums[i] + nums[i + n]) / 2;
        }
        return ans;

=======

        Arrays.sort(nums);
        int n = nums.length / 2;
        int[] res = new int[n];
        for (int i = 0; i < n; i++) {
            res[i] = (nums[i] + nums[n + i]) / 2;
        }
        return res;

=======

        int n = nums.length / 2;
        Arrays.sort(nums);
        int[] ans = new int[n];
        for (int i = 0; i < n; i++) {
            ans[i] = (nums[i] + nums[n + i]) / 2;
        }
        return ans;

=======

        int n = nums.length;
        Arrays.sort(nums);
        int k = nums[n / 2] - nums[n / 2 - 1];
        int[] res = new int[n / 2];
        for (int i = 0; i < n / 2; i++) {
            res[i] = nums[i] + k;
        }
        return res;

=======

        int n = nums.length;
        int[] res = new int[n / 2];
        Arrays.sort(nums);
        int k = nums[n / 2] - nums[n / 2 - 1];
        for (int i = 0; i < n / 2; ++i) {
            res[i] = nums[i] + k;
        }
        return res;

=======

        Arrays.sort(nums);
        int n = nums.length;
        int k = (nums[n/2] - nums[n/2-1]) / 2;
        int[] ans = new int[n/2];
        for (int i = 0; i < n/2; i++) {
            ans[i] = nums[i] + k;
        }
        return ans;

=======

        int n = nums.length / 2;
        int[] ans = new int[n];
        Arrays.sort(nums);
        ans[0] = (nums[0] + nums[1] - nums[2 * n - 1]) / 2;
        for (int i = 1; i < n; ++i) {
            ans[i] = nums[i] - ans[0];
        }
        return ans;

=======

        int n = nums.length;
        Arrays.sort(nums);
        int[] res = new int[n/2];
        int k = (nums[n/2] - nums[n/2 - 1]) / 2;
        for (int i = 0; i < n / 2; i++) {
            res[i] = nums[i] + k;
        }
        return res;

=======

        int n = nums.length / 2;
        Arrays.sort(nums);
        int k = nums[n] - nums[0];
        int[] arr = new int[n];
        int j = 0;
        for (int i = 0; i < n; i++) {
            arr[i] = nums[j] + k;
            j += 2;
        }
        return arr;

=======

        int n = nums.length / 2;
        int[] ans = new int[n];
        int[] diff = new int[n];
        int[] sum = new int[n];
        Arrays.sort(nums);
        for (int i = 0; i < n; i++) {
            diff[i] = nums[i + n] - nums[i];
            sum[i] = nums[i + n] + nums[i];
        }
        int k = 0;
        for (int i = 0; i < n; i++) {
            k += diff[i];
        }
        k /= n;
        ans[0] = sum[0] / 2;
        for (int i = 1; i < n; i++) {
            ans[i] = ans[i - 1] + k;
        }
        return ans;

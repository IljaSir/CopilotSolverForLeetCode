Synthesizing 10/10 solutions

=======

        int count = 0, i = 0;
        List<String> res = new ArrayList<>();
        for (int j = 0; j < s.length(); ++j) {
            if (s.charAt(j) == '1') ++count;
            else --count;
            if (count == 0) {
                res.add('1' + makeLargestSpecial(s.substring(i + 1, j)) + '0');
                i = j + 1;
            }
        }
        Collections.sort(res, Collections.reverseOrder());
        return String.join("", res);

=======

        int count = 0, i = 0;
        List<String> res = new ArrayList<>();
        for (int j = 0; j < s.length(); ++j) {
            if (s.charAt(j) == '1') count++;
            else count--;
            if (count == 0) {
                res.add("1" + makeLargestSpecial(s.substring(i + 1, j)) + "0");
                i = j + 1;
            }
        }
        Collections.sort(res, Collections.reverseOrder());
        return String.join("", res);

=======

        int count = 0, i = 0;
        List<String> res = new ArrayList<>();
        for (int j = 0; j < s.length(); ++j) {
            if (s.charAt(j) == '1') {
                ++count;
            } else {
                --count;
            }
            if (count == 0) {
                res.add('1' + makeLargestSpecial(s.substring(i + 1, j)) + '0');
                i = j + 1;
            }
        }
        Collections.sort(res, Collections.reverseOrder());
        return String.join("", res);

=======

        int count = 0, i = 0;
        List<String> res = new ArrayList<>();
        for (int j = 0; j < s.length(); j++) {
            if (s.charAt(j) == '1') count++;
            else count--;
            if (count == 0) {
                res.add('1' + makeLargestSpecial(s.substring(i + 1, j)) + '0');
                i = j + 1;
            }
        }
        Collections.sort(res, Collections.reverseOrder());
        return String.join("", res);

=======

        int count = 0, i = 0;
        List<String> res = new ArrayList();
        for (int j = 0; j < s.length(); ++j) {
            if (s.charAt(j) == '1') count++;
            else count--;
            if (count == 0) {
                res.add('1' + makeLargestSpecial(s.substring(i + 1, j)) + '0');
                i = j + 1;
            }
        }
        Collections.sort(res, Collections.reverseOrder());
        return String.join("", res);

=======

        int count = 0;
        int start = 0;
        List<String> list = new ArrayList<>();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '1') {
                count++;
            } else {
                count--;
            }
            if (count == 0) {
                list.add('1' + makeLargestSpecial(s.substring(start + 1, i)) + '0');
                start = i + 1;
            }
        }
        Collections.sort(list, (a, b) -> b.compareTo(a));
        return String.join("", list);

=======

        int count = 0;
        int start = 0;
        List<String> list = new ArrayList<>();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '1') count++;
            else count--;
            if (count == 0) {
                list.add('1' + makeLargestSpecial(s.substring(start + 1, i)) + '0');
                start = i + 1;
            }
        }
        Collections.sort(list, Collections.reverseOrder());
        StringBuilder sb = new StringBuilder();
        for (String str: list) sb.append(str);
        return sb.toString();

=======

        int count = 0;
        int start = 0;
        List<String> list = new ArrayList<>();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '1') {
                count++;
            } else {
                count--;
            }
            if (count == 0) {
                list.add("1" + makeLargestSpecial(s.substring(start + 1, i)) + "0");
                start = i + 1;
            }
        }
        Collections.sort(list, Collections.reverseOrder());
        StringBuilder sb = new StringBuilder();
        for (String str : list) {
            sb.append(str);
        }
        return sb.toString();

=======

        int count = 0, start = 0;
        List<String> list = new ArrayList<String>();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '1') {
                count++;
            } else {
                count--;
            }
            if (count == 0) {
                list.add('1' + makeLargestSpecial(s.substring(start + 1, i)) + '0');
                start = i + 1;
            }
        }
        Collections.sort(list, Collections.reverseOrder());
        return String.join("", list);

=======

        int count = 0;
        int start = 0;
        List<String> subs = new ArrayList<>();
        for (int i = 0; i < s.length(); ++i) {
            if (s.charAt(i) == '1') {
                count++;
            } else {
                count--;
            }
            if (count == 0) {
                subs.add('1' + makeLargestSpecial(s.substring(start + 1, i)) + '0');
                start = i + 1;
            }
        }
        Collections.sort(subs, Collections.reverseOrder());
        return String.join("", subs);

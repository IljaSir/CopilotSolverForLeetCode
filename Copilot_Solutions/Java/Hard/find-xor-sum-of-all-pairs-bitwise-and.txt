Synthesizing 10/10 solutions

=======

        int a = 0, b = 0;
        for (int i = 0; i < arr1.length; i++) {
            a ^= arr1[i];
        }
        for (int i = 0; i < arr2.length; i++) {
            b ^= arr2[i];
        }
        return a & b;

=======

        int x1 = 0;
        for (int i = 0; i < arr1.length; i++) {
            x1 ^= arr1[i];
        }
        int x2 = 0;
        for (int i = 0; i < arr2.length; i++) {
            x2 ^= arr2[i];
        }
        return x1 & x2;

=======

        int x = 0;
        for (int a : arr1) {
            x ^= a;
        }
        int y = 0;
        for (int a : arr2) {
            y ^= a;
        }
        return x & y;

=======

        int a = 0, b = 0;
        for (int i : arr1) a ^= i;
        for (int i : arr2) b ^= i;
        return a & b;

=======

        int a = 0, b = 0;
        for (int x : arr1) a ^= x;
        for (int x : arr2) b ^= x;
        return a & b;

=======

        int x = 0, y = 0;
        for (int a : arr1) {
            x ^= a;
        }
        for (int a : arr2) {
            y ^= a;
        }
        return x & y;

=======

        int res1 = 0;
        for (int num : arr1) {
            res1 ^= num;
        }
        int res2 = 0;
        for (int num : arr2) {
            res2 ^= num;
        }
        return res1 & res2;

=======

        int a = 0;
        for (int i = 0; i < arr1.length; i++) {
            a ^= arr1[i];
        }
        int b = 0;
        for (int j = 0; j < arr2.length; j++) {
            b ^= arr2[j];
        }
        return a & b;

=======

        int x = 0, y = 0;
        for(int i = 0; i < arr1.length; i++) x ^= arr1[i];
        for(int i = 0; i < arr2.length; i++) y ^= arr2[i];
        return x & y;

=======

        int n = arr1.length;
        int m = arr2.length;
        int res = 0;
        for (int i = 0; i < n; i++) {
            res ^= arr1[i];
        }
        int res2 = 0;
        for (int i = 0; i < m; i++) {
            res2 ^= arr2[i];
        }
        return res & res2;

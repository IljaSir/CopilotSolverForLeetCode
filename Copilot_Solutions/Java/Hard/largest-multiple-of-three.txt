Synthesizing 8/10 solutions

=======

        int[] count = new int[10];
        int sum = 0;
        for (int d : digits) {
            count[d]++;
            sum += d;
        }
        while (sum % 3 != 0) {
            if (sum % 3 == 1) {
                if (count[1] > 0) {
                    count[1]--;
                    sum -= 1;
                } else if (count[4] > 0) {
                    count[4]--;
                    sum -= 4;
                } else if (count[7] > 0) {
                    count[7]--;
                    sum -= 7;
                } else if (count[2] > 1) {
                    count[2] -= 2;
                    sum -= 4;
                } else if (count[5] > 1) {
                    count[5] -= 2;
                    sum -= 10;
                } else if (count[8] > 1) {
                    count[8] -= 2;
                    sum -= 16;
                } else if (count[2] > 0 && count[5] > 0) {
                    count[2]--;
                    count[5]--;
                    sum -= 7;
                } else if (count[2] > 0 && count[8] > 0) {
                    count[2]--;
                    count[8]--;
                    sum -= 10;
                } else if (count[5] > 0 && count[8] > 0) {
                    count[5]--;
                    count[8]--;
                    sum -= 13;
                } else {
                    return "";
                }
            } else {
                if (count[2] > 0) {
                    count[2]--;
                    sum -= 2;
                } else if (count[5] > 0) {
                    count[5]--;
                    sum -= 5;
                } else if (count[8] > 0) {
                    count[8]--;
                    sum -= 8;
                } else if (count[1] > 1) {
                    count[1] -= 2;
                    sum -= 2;
                } else if (count[4] > 1) {
                    count[4] -= 2;
                    sum -= 8;
                } else if (count[7] > 1) {
                    count[7] -=

=======

        int[] count = new int[10];
        int sum = 0;
        for (int d : digits) {
            count[d]++;
            sum += d;
        }
        while (sum % 3 != 0) {
            for (int i = (sum % 3 == 1) ? 1 : 2; i < 10; i += 3) {
                if (count[i] > 0) {
                    count[i]--;
                    sum -= i;
                    break;
                }
            }
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 9; i >= 0; i--) {
            while (count[i]-- > 0) {
                sb.append(i);
            }
        }
        return (sb.length() > 0 && sb.charAt(0) == '0') ? "0" : sb.toString();

=======

        int[] count = new int[10];
        int sum = 0;
        for (int d : digits) {
            count[d]++;
            sum += d;
        }
        if (sum % 3 == 1) {
            if (count[1] > 0) {
                count[1]--;
            } else if (count[4] > 0) {
                count[4]--;
            } else if (count[7] > 0) {
                count[7]--;
            } else if (count[2] > 1) {
                count[2] -= 2;
            } else if (count[2] > 0 && count[5] > 0) {
                count[2]--;
                count[5]--;
            } else if (count[2] > 0 && count[8] > 0) {
                count[2]--;
                count[8]--;
            } else if (count[5] > 1) {
                count[5] -= 2;
            } else if (count[5] > 0 && count[8] > 0) {
                count[5]--;
                count[8]--;
            } else if (count[8] > 2) {
                count[8] -= 3;
            } else {
                return "";
            }
        } else if (sum % 3 == 2) {
            if (count[2] > 0) {
                count[2]--;
            } else if (count[5] > 0) {
                count[5]--;
            } else if (count[8] > 0) {
                count[8]--;
            } else if (count[1] > 1) {
                count[1] -= 2;
            } else if (count[1] > 0 && count[4] > 0) {
                count[1]--;
                count[4]--;
            } else if (count[1] > 0 && count[7] > 0) {
                count[1]--;
                count[7]--;
            } else if (count[4] > 1) {
                count[4] -= 2;
            } else if (count[4] > 0 && count[7] > 0) {
                count[4]--;
                count[7]--;
            } else if (count[7] >

=======

        int[] count = new int[10];
        int sum = 0;
        for (int d : digits) {
            count[d]++;
            sum += d;
        }
        if (sum % 3 == 1) {
            if (count[1] > 0) count[1]--;
            else if (count[4] > 0) count[4]--;
            else if (count[7] > 0) count[7]--;
            else {
                if (count[2] > 1) count[2] -= 2;
                else if (count[2] > 0 && count[5] > 0) {
                    count[2]--;
                    count[5]--;
                } else if (count[5] > 1) count[5] -= 2;
                else if (count[2] > 0 && count[8] > 0) {
                    count[2]--;
                    count[8]--;
                } else if (count[5] > 0 && count[8] > 0) {
                    count[5]--;
                    count[8]--;
                } else if (count[8] > 2) count[8] -= 3;
                else return "";
            }
        } else if (sum % 3 == 2) {
            if (count[2] > 0) count[2]--;
            else if (count[5] > 0) count[5]--;
            else if (count[8] > 0) count[8]--;
            else {
                if (count[1] > 1) count[1] -= 2;
                else if (count[1] > 0 && count[4] > 0) {
                    count[1]--;
                    count[4]--;
                } else if (count[4] > 1) count[4] -= 2;
                else if (count[1] > 0 && count[7] > 0) {
                    count[1]--;
                    count[7]--;
                } else if (count[4] > 0 && count[7] > 0) {
                    count[4]--;
                    count[7]--;
                } else if (count[7] > 2) count[7] -= 3;
                else return "";
            }
        }
        StringBuilder sb = new StringBuilder();
        for (int i

=======

        int[] count = new int[10];
        int sum = 0;
        for (int digit : digits) {
            count[digit]++;
            sum += digit;
        }
        if (sum % 3 == 1) {
            if (count[1] > 0) {
                count[1]--;
            } else if (count[4] > 0) {
                count[4]--;
            } else if (count[7] > 0) {
                count[7]--;
            } else if (count[2] > 1) {
                count[2] -= 2;
            } else if (count[2] > 0 && count[5] > 0) {
                count[2]--;
                count[5]--;
            } else if (count[2] > 0 && count[8] > 0) {
                count[2]--;
                count[8]--;
            } else if (count[5] > 1) {
                count[5] -= 2;
            } else if (count[5] > 0 && count[8] > 0) {
                count[5]--;
                count[8]--;
            } else if (count[8] > 1) {
                count[8] -= 2;
            } else {
                return "";
            }
        } else if (sum % 3 == 2) {
            if (count[2] > 0) {
                count[2]--;
            } else if (count[5] > 0) {
                count[5]--;
            } else if (count[8] > 0) {
                count[8]--;
            } else if (count[1] > 1) {
                count[1] -= 2;
            } else if (count[1] > 0 && count[4] > 0) {
                count[1]--;
                count[4]--;
            } else if (count[1] > 0 && count[7] > 0) {
                count[1]--;
                count[7]--;
            } else if (count[4] > 1) {
                count[4] -= 2;
            } else if (count[4] > 0 && count[7] > 0) {
                count[4]--;
                count[7]--;
            } else if (count[7]

=======

        int sum = 0;
        int[] count = new int[10];
        for (int d : digits) {
            sum += d;
            count[d]++;
        }
        if (sum % 3 == 1) {
            if (count[1] >= 1) {
                count[1]--;
            } else if (count[4] >= 1) {
                count[4]--;
            } else if (count[7] >= 1) {
                count[7]--;
            } else if (count[2] >= 2) {
                count[2] -= 2;
            } else if (count[5] >= 2) {
                count[5] -= 2;
            } else if (count[8] >= 2) {
                count[8] -= 2;
            } else if (count[2] >= 1 && count[5] >= 1 && count[8] >= 1) {
                count[2]--;
                count[5]--;
                count[8]--;
            } else {
                return "";
            }
        } else if (sum % 3 == 2) {
            if (count[2] >= 1) {
                count[2]--;
            } else if (count[5] >= 1) {
                count[5]--;
            } else if (count[8] >= 1) {
                count[8]--;
            } else if (count[1] >= 2) {
                count[1] -= 2;
            } else if (count[4] >= 2) {
                count[4] -= 2;
            } else if (count[7] >= 2) {
                count[7] -= 2;
            } else if (count[1] >= 1 && count[4] >= 1 && count[7] >= 1) {
                count[1]--;
                count[4]--;
                count[7]--;
            } else {
                return "";
            }
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 9; i >= 0; i--) {
            while (count[i] > 0) {
                sb.append(i);
                count[i]--;
            }
        }
        if (sb.length() > 0 && sb.charAt(0) == '0') {
            return "0";
        }
        return sb

=======

        int[] count = new int[10];
        for (int i = 0; i < digits.length; i++) {
            count[digits[i]]++;
        }
        int sum = 0;
        for (int i = 0; i <= 9; i++) {
            sum += i * count[i];
        }
        while (sum % 3 != 0) {
            if (sum % 3 == 1) {
                if (count[1] > 0) {
                    count[1]--;
                    sum -= 1;
                } else if (count[4] > 0) {
                    count[4]--;
                    sum -= 4;
                } else if (count[7] > 0) {
                    count[7]--;
                    sum -= 7;
                } else if (count[2] > 1) {
                    count[2] -= 2;
                    sum -= 4;
                } else if (count[5] > 1) {
                    count[5] -= 2;
                    sum -= 10;
                } else if (count[8] > 1) {
                    count[8] -= 2;
                    sum -= 16;
                } else if (count[2] > 0 && count[5] > 0) {
                    count[2]--;
                    count[5]--;
                    sum -= 7;
                } else if (count[5] > 0 && count[8] > 0) {
                    count[5]--;
                    count[8]--;
                    sum -= 13;
                } else if (count[2] > 0 && count[8] > 0) {
                    count[2]--;
                    count[8]--;
                    sum -= 10;
                } else {
                    return "";
                }
            } else {
                if (count[2] > 0) {
                    count[2]--;
                    sum -= 2;
                } else if (count[5] > 0) {
                    count[5]--;
                    sum -= 5;
                } else if (count[8] > 0) {
                    count[8]--;
                    sum -= 8;
                } else if (count[1] > 1) {
                    count[1] -= 2;
                    sum -= 2;
                } else if (count[4] > 1) {
                    count

=======

        int[] count = new int[10];
        int sum = 0;
        for (int i : digits) {
            count[i]++;
            sum += i;
        }
        int mod = sum % 3;
        if (mod == 1) {
            if (count[1] > 0) {
                count[1]--;
            } else if (count[4] > 0) {
                count[4]--;
            } else if (count[7] > 0) {
                count[7]--;
            } else {
                if (count[2] >= 2) {
                    count[2] -= 2;
                } else if (count[2] == 1) {
                    if (count[5] > 0) {
                        count[2]--;
                        count[5]--;
                    } else if (count[8] > 0) {
                        count[2]--;
                        count[8]--;
                    } else {
                        count[2] = 0;
                    }
                }
                if (count[5] >= 2) {
                    count[5] -= 2;
                } else if (count[5] == 1) {
                    if (count[8] > 0) {
                        count[5]--;
                        count[8]--;
                    } else {
                        count[5] = 0;
                    }
                }
                if (count[8] >= 2) {
                    count[8] -= 2;
                }
            }
        } else if (mod == 2) {
            if (count[2] > 0) {
                count[2]--;
            } else if (count[5] > 0) {
                count[5]--;
            } else if (count[8] > 0) {
                count[8]--;
            } else {
                if (count[1] >= 2) {
                    count[1] -= 2;
                } else if (count[1] == 1) {
                    if (count[4] > 0) {
                        count[1]--;
                        count[4]--;
                    } else if (count[7] > 0) {
                        count[1]--;
                        count[7]--;
                    } else {
                        count[1] = 0;
                    }
                }
                if (count[4] >= 2) {
                    count[4] -= 2

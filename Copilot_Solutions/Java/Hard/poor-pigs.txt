Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int pigs = 0;
        while (Math.pow(minutesToTest / minutesToDie + 1, pigs) < buckets) {
            pigs++;
        }
        return pigs;

=======

        int states = minutesToTest / minutesToDie + 1;
        return (int) Math.ceil(Math.log(buckets) / Math.log(states));

=======

        int pigs = 0;
        int base = minutesToTest / minutesToDie + 1;
        while (Math.pow(base, pigs) < buckets) {
            pigs++;
        }
        return pigs;

=======

        int pigs = 0;
        int round = minutesToTest / minutesToDie;
        while (Math.pow(round + 1, pigs) < buckets) {
            pigs++;
        }
        return pigs;

=======

        if(buckets == 1) return 0;
        int pigs = 0;
        while(Math.pow(minutesToTest / minutesToDie + 1, pigs) < buckets) pigs++;
        return pigs;

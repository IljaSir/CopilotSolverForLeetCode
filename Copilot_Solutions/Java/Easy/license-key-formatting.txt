Synthesizing 10/10 solutions (Duplicates hidden)

=======

        StringBuilder sb = new StringBuilder();
        int count = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            char c = s.charAt(i);
            if (c == '-') {
                continue;
            }
            if (count == k) {
                sb.append('-');
                count = 0;
            }
            sb.append(Character.toUpperCase(c));
            count++;
        }
        return sb.reverse().toString();

=======

        StringBuilder sb = new StringBuilder();
        int count = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            char c = s.charAt(i);
            if (c == '-') {
                continue;
            }
            if (count % k == 0 && count > 0) {
                sb.append('-');
            }
            sb.append(Character.toUpperCase(c));
            count++;
        }
        return sb.reverse().toString();

=======

        StringBuilder sb = new StringBuilder();
        int count = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            if (s.charAt(i) != '-') {
                if (count == k) {
                    sb.append('-');
                    count = 0;
                }
                sb.append(Character.toUpperCase(s.charAt(i)));
                count++;
            }
        }
        return sb.reverse().toString();

=======

        StringBuilder sb = new StringBuilder();
        int count = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            if (s.charAt(i) == '-') continue;
            if (count == k) {
                sb.append('-');
                count = 0;
            }
            sb.append(Character.toUpperCase(s.charAt(i)));
            count++;
        }
        return sb.reverse().toString();

=======

        StringBuilder sb = new StringBuilder();
        int count = 0;
        for(int i = s.length() - 1; i >= 0; i--) {
            if(s.charAt(i) != '-') {
                sb.append(Character.toUpperCase(s.charAt(i)));
                count++;
                if(count == k) {
                    count = 0;
                    sb.append('-');
                }
            }
        }
        if(sb.length() > 0 && sb.charAt(sb.length() - 1) == '-') {
            sb.deleteCharAt(sb.length() - 1);
        }
        return sb.reverse().toString();

=======

        int n = s.length();
        int count = 0;
        StringBuilder sb = new StringBuilder();
        for (int i = n - 1; i >= 0; i--) {
            if (s.charAt(i) == '-') {
                continue;
            }
            if (count == k) {
                sb.append('-');
                count = 0;
            }
            sb.append(Character.toUpperCase(s.charAt(i)));
            count++;
        }
        return sb.reverse().toString();

=======

        s = s.toUpperCase().replace("-", "");
        StringBuilder sb = new StringBuilder();
        int i = s.length() - 1;
        while (i >= 0) {
            sb.insert(0, s.charAt(i--));
            if (sb.length() % (k + 1) == k) {
                sb.insert(0, '-');
            }
        }
        if (sb.length() > 0 && sb.charAt(0) == '-') {
            sb.deleteCharAt(0);
        }
        return sb.toString();

=======

        String str = s.replaceAll("-", "");
        StringBuilder sb = new StringBuilder();
        int i = str.length() - 1;
        int count = 0;
        while (i >= 0) {
            sb.append(str.charAt(i));
            count++;
            if (count == k && i != 0) {
                sb.append("-");
                count = 0;
            }
            i--;
        }
        return sb.reverse().toString().toUpperCase();

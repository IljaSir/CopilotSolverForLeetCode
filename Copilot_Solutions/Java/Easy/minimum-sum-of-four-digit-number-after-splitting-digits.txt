Synthesizing 10/10 solutions

=======

        int[] digits = new int[4];
        for (int i = 0; i < 4; i++) {
            digits[i] = num % 10;
            num /= 10;
        }
        Arrays.sort(digits);
        int min1 = 0, min2 = 0;
        for (int i = 0; i < 4; i++) {
            min1 = min1 * 10 + digits[i];
            min2 = min2 * 10 + digits[3 - i];
        }
        return min1 + min2;

=======

        int[] digits = new int[4];
        for (int i = 0; i < 4; i++) {
            digits[i] = num % 10;
            num /= 10;
        }
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < 16; i++) {
            int sum = 0;
            int a = 0;
            int b = 0;
            for (int j = 0; j < 4; j++) {
                if (((i >> j) & 1) == 1) {
                    a = a * 10 + digits[j];
                } else {
                    b = b * 10 + digits[j];
                }
            }
            sum = a + b;
            min = Math.min(min, sum);
        }
        return min;

=======

        String s = String.valueOf(num);
        int min = Integer.MAX_VALUE;
        for (int i = 1; i < 4; i++) {
            int a = Integer.parseInt(s.substring(0, i));
            int b = Integer.parseInt(s.substring(i));
            min = Math.min(min, a + b);
        }
        return min;

=======

        int[] digits = new int[4];
        int i = 0;
        while (num > 0) {
            digits[i] = num % 10;
            num /= 10;
            i++;
        }
        Arrays.sort(digits);
        int sum1 = 0;
        int sum2 = 0;
        for (int j = 0; j < 4; j++) {
            sum1 = sum1 * 10 + digits[j];
            if (j < 3) {
                sum2 = sum2 * 10 + digits[j];
            }
        }
        return sum1 + sum2;

=======

        String s = String.valueOf(num);
        int n = s.length();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = s.charAt(i) - '0';
        }
        int min = Integer.MAX_VALUE;
        for (int i = 1; i < n; i++) {
            int sum = 0;
            for (int j = 0; j < i; j++) {
                sum = sum * 10 + a[j];
            }
            int num1 = sum;
            sum = 0;
            for (int j = i; j < n; j++) {
                sum = sum * 10 + a[j];
            }
            int num2 = sum;
            min = Math.min(min, num1 + num2);
        }
        return min;

=======

        int a = num / 100;
        int b = num % 100;
        int c = num / 10;
        int d = num % 10;
        int min = Integer.MAX_VALUE;
        min = Math.min(min, a + b + c + d);
        min = Math.min(min, a + b + c * 10 + d);
        min = Math.min(min, a + b + c + d * 10);
        min = Math.min(min, a + b * 10 + c + d);
        min = Math.min(min, a + b * 10 + c * 10 + d);
        min = Math.min(min, a + b + c * 100 + d);
        min = Math.min(min, a + b * 100 + c + d);
        min = Math.min(min, a + b * 100 + c * 10 + d);
        min = Math.min(min, a + b * 10 + c * 100 + d);
        min = Math.min(min, a + b * 10 + c + d * 100);
        min = Math.min(min, a + b * 100 + c * 10 + d);
        min = Math.min(min, a + b * 100 + c + d * 10);
        min = Math.min(min, a * 10 + b + c + d);
        min = Math.min(min, a * 10 + b + c * 10 + d);
        min = Math.min(min, a * 10 + b + c + d * 10);
        min = Math.min(min, a * 10 + b * 10 + c + d);
        min = Math.min(min, a * 10 + b * 10 + c * 10 + d);
        min = Math.min(min, a * 10 + b + c * 100 + d);
        min = Math.min(min, a * 10 + b * 100 + c + d);
        min = Math.min(min, a * 10 + b * 100 + c * 10 + d);
        min = Math.min(min, a * 10 + b * 10 + c * 100 + d);
        min = Math.min(min, a * 10 + b * 10 + c + d * 100);
        min = Math.min

=======

        int sum = 0;
        int[] digits = new int[4];
        for (int i = 0; i < 4; i++) {
            digits[i] = num % 10;
            num /= 10;
        }
        Arrays.sort(digits);
        sum += digits[0] * 10 + digits[1];
        sum += digits[2] * 10 + digits[3];
        return sum;

=======

        int[] digits = new int[4];
        int i = 3;
        while (num > 0) {
            digits[i--] = num % 10;
            num /= 10;
        }
        int sum1 = 0;
        int sum2 = 0;
        for (int j = 0; j < 4; j++) {
            sum1 = sum1 * 10 + digits[j];
            sum2 = sum1;
            for (int k = j + 1; k < 4; k++) {
                sum2 = sum2 * 10 + digits[k];
            }
            if (sum2 > 0) {
                break;
            }
        }
        return sum1 + sum2;

=======

        String s = String.valueOf(num);
        int min = Integer.MAX_VALUE;
        for(int i = 1; i < 4; i++){
            int a = Integer.parseInt(s.substring(0, i));
            int b = Integer.parseInt(s.substring(i, 4));
            min = Math.min(min, a+b);
        }
        return min;

=======

        int[] arr = new int[10];
        while(num > 0) {
            arr[num % 10]++;
            num /= 10;
        }
        int sum = 0;
        for(int i = 1; i < 10; i++) {
            if(arr[i] > 0) {
                sum += i;
                arr[i]--;
                break;
            }
        }
        for(int i = 0; i < 10; i++) {
            if(arr[i] > 0) {
                sum += i * Math.pow(10, arr[i]);
            }
        }
        return sum;

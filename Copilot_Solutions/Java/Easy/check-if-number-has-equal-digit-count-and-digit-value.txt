Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int[] count = new int[10];
        for (int i = 0; i < num.length(); i++) {
            count[num.charAt(i) - '0']++;
        }
        for (int i = 0; i < num.length(); i++) {
            if (count[num.charAt(i) - '0'] != num.charAt(i) - '0') {
                return false;
            }
        }
        return true;

=======

        int[] count = new int[10];
        for (char c : num.toCharArray()) {
            count[c - '0']++;
        }
        for (int i = 0; i < num.length(); i++) {
            if (count[i] != num.charAt(i) - '0') {
                return false;
            }
        }
        return true;

=======

        int[] count = new int[10];
        for (char c : num.toCharArray()) {
            count[c - '0']++;
        }
        for (int i = 0; i < num.length(); i++) {
            if (count[num.charAt(i) - '0'] != num.charAt(i) - '0') {
                return false;
            }
        }
        return true;

=======

        int[] digitCount = new int[10];
        for (int i = 0; i < num.length(); i++) {
            digitCount[num.charAt(i) - '0']++;
        }
        for (int i = 0; i < num.length(); i++) {
            if (num.charAt(i) - '0' != digitCount[i]) {
                return false;
            }
        }
        return true;

=======

        int[] count = new int[10];
        for (char c : num.toCharArray()) {
            count[c - '0']++;
        }
        for (int i = 0; i < num.length(); i++) {
            int c = num.charAt(i) - '0';
            if (count[c] != c) {
                return false;
            }
        }
        return true;

=======

        for(int i=0;i<num.length();i++){
            int count = 0;
            for(int j=0;j<num.length();j++){
                if(num.charAt(i)==num.charAt(j)){
                    count++;
                }
            }
            if(count!=Character.getNumericValue(num.charAt(i))){
                return false;
            }
        }
        return true;

=======

        int[] count = new int[10];
        for(int i=0; i<num.length(); i++) {
            int digit = num.charAt(i) - '0';
            count[digit]++;
        }
        for(int i=0; i<num.length(); i++) {
            int digit = num.charAt(i) - '0';
            if(count[digit] != digit) return false;
        }
        return true;

=======

        if (num.length() == 1) {
            return num.equals("1");
        }
        int[] count = new int[10];
        for (int i = 0; i < num.length(); i++) {
            count[num.charAt(i) - '0']++;
        }
        for (int i = 0; i < num.length(); i++) {
            int digit = num.charAt(i) - '0';
            if (count[digit] != digit) {
                return false;
            }
        }
        return true;

=======

        int[] arr = new int[10];
        for(char c: num.toCharArray()){
            arr[c-'0']++;
        }
        for(int i=0; i<10; i++){
            if(arr[i] != 0 && arr[i] != i) return false;
        }
        return true;

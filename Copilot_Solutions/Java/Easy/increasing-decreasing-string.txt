Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int[] count = new int[26];
        for (char c : s.toCharArray()) {
            count[c - 'a']++;
        }
        StringBuilder sb = new StringBuilder();
        while (sb.length() < s.length()) {
            for (int i = 0; i < 26; i++) {
                if (count[i] > 0) {
                    sb.append((char) (i + 'a'));
                    count[i]--;
                }
            }
            for (int i = 25; i >= 0; i--) {
                if (count[i] > 0) {
                    sb.append((char) (i + 'a'));
                    count[i]--;
                }
            }
        }
        return sb.toString();

=======

        int[] count = new int[26];
        for (char c : s.toCharArray()) {
            count[c - 'a']++;
        }
        StringBuilder sb = new StringBuilder();
        while (sb.length() < s.length()) {
            for (int i = 0; i < 26; i++) {
                if (count[i]-- > 0) {
                    sb.append((char) (i + 'a'));
                }
            }
            for (int i = 25; i >= 0; i--) {
                if (count[i]-- > 0) {
                    sb.append((char) (i + 'a'));
                }
            }
        }
        return sb.toString();

=======

        int[] count = new int[26];
        for (int i = 0; i < s.length(); i++) {
            count[s.charAt(i) - 'a']++;
        }
        StringBuilder sb = new StringBuilder();
        while (sb.length() < s.length()) {
            for (int i = 0; i < 26; i++) {
                if (count[i]-- > 0) {
                    sb.append((char)('a' + i));
                }
            }
            for (int i = 25; i >= 0; i--) {
                if (count[i]-- > 0) {
                    sb.append((char)('a' + i));
                }
            }
        }
        return sb.toString();

=======

        int[] freq = new int[26];
        for (char c : s.toCharArray()) {
            freq[c - 'a']++;
        }
        StringBuilder sb = new StringBuilder();
        while (sb.length() < s.length()) {
            for (int i = 0; i < 26; i++) {
                if (freq[i] > 0) {
                    sb.append((char) (i + 'a'));
                    freq[i]--;
                }
            }
            for (int i = 25; i >= 0; i--) {
                if (freq[i] > 0) {
                    sb.append((char) (i + 'a'));
                    freq[i]--;
                }
            }
        }
        return sb.toString();

=======

        int[] freq = new int[26];
        for (int i = 0; i < s.length(); i++) {
            freq[s.charAt(i) - 'a']++;
        }
        StringBuilder sb = new StringBuilder();
        while (sb.length() < s.length()) {
            for (int i = 0; i < 26; i++) {
                if (freq[i] > 0) {
                    sb.append((char) (i + 'a'));
                    freq[i]--;
                }
            }
            for (int i = 25; i >= 0; i--) {
                if (freq[i] > 0) {
                    sb.append((char) (i + 'a'));
                    freq[i]--;
                }
            }
        }
        return sb.toString();

=======

        int[] chars = new int[26];
        for (int i = 0; i < s.length(); i++) {
            chars[s.charAt(i) - 'a']++;
        }
        StringBuilder sb = new StringBuilder();
        while (sb.length() < s.length()) {
            for (int i = 0; i < 26; i++) {
                if (chars[i] > 0) {
                    sb.append((char) ('a' + i));
                    chars[i]--;
                }
            }
            for (int i = 25; i >= 0; i--) {
                if (chars[i] > 0) {
                    sb.append((char) ('a' + i));
                    chars[i]--;
                }
            }
        }
        return sb.toString();

=======

        int[] count = new int[26];
        for (char c : s.toCharArray()) count[c - 'a']++;
        StringBuilder sb = new StringBuilder();
        while (sb.length() < s.length()) {
            for (int i = 0; i < 26; i++) {
                if (count[i]-- > 0) sb.append((char) (i + 'a'));
            }
            for (int i = 25; i >= 0; i--) {
                if (count[i]-- > 0) sb.append((char) (i + 'a'));
            }
        }
        return sb.toString();

=======

        int[] freq = new int[26];
        for (char c : s.toCharArray()) {
            freq[c - 'a']++;
        }
        StringBuilder result = new StringBuilder();
        while (result.length() < s.length()) {
            for (int i = 0; i < 26; i++) {
                if (freq[i] > 0) {
                    result.append((char) ('a' + i));
                    freq[i]--;
                }
            }
            for (int i = 25; i >= 0; i--) {
                if (freq[i] > 0) {
                    result.append((char) ('a' + i));
                    freq[i]--;
                }
            }
        }
        return result.toString();

=======

        int[] c = new int[26];
        for (char ch: s.toCharArray())
            c[ch - 'a']++;
        StringBuilder sb = new StringBuilder();
        while (sb.length() < s.length()) {
            for (int i = 0; i < 26; i++) {
                if (c[i]-- > 0) sb.append((char) ('a' + i));
            }
            for (int i = 25; i >= 0; i--) {
                if (c[i]-- > 0) sb.append((char) ('a' + i));
            }
        }
        return sb.toString();

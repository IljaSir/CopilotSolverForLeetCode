Synthesizing 10/10 solutions

=======

        int result = 0;
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length; i++) {
            if (Math.abs(nums[i]) < min) {
                min = Math.abs(nums[i]);
                result = nums[i];
            } else if (Math.abs(nums[i]) == min) {
                result = Math.max(result, nums[i]);
            }
        }
        return result;

=======

        int min = Integer.MAX_VALUE;
        int res = 0;
        for (int i = 0; i < nums.length; i++) {
            int abs = Math.abs(nums[i]);
            if (abs < min) {
                min = abs;
                res = nums[i];
            } else if (abs == min) {
                res = Math.max(res, nums[i]);
            }
        }
        return res;

=======

        int closest = 0;
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length; i++) {
            if (Math.abs(nums[i]) < min) {
                min = Math.abs(nums[i]);
                closest = nums[i];
            } else if (Math.abs(nums[i]) == min) {
                if (nums[i] > closest) {
                    closest = nums[i];
                }
            }
        }
        return closest;

=======

        int closest = 0;
        int minDistance = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length; i++) {
            int distance = Math.abs(nums[i]);
            if (distance < minDistance) {
                closest = nums[i];
                minDistance = distance;
            } else if (distance == minDistance && nums[i] > closest) {
                closest = nums[i];
            }
        }
        return closest;

=======

        int closest = Integer.MAX_VALUE;
        int closestIndex = 0;
        for (int i = 0; i < nums.length; i++) {
            if (Math.abs(nums[i]) < closest) {
                closest = Math.abs(nums[i]);
                closestIndex = i;
            } else if (Math.abs(nums[i]) == closest) {
                if (nums[i] > nums[closestIndex]) {
                    closest = Math.abs(nums[i]);
                    closestIndex = i;
                }
            }
        }
        return nums[closestIndex];

=======

        int closest = 0;
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length; i++) {
            int distance = Math.abs(nums[i]);
            if (distance < min) {
                min = distance;
                closest = nums[i];
            }
            else if (distance == min) {
                if (nums[i] > closest) {
                    closest = nums[i];
                }
            }
        }
        return closest;

=======

        int min = 100000;
        int result = 0;
        for(int i = 0; i < nums.length; i++) {
            if(Math.abs(nums[i]) < min) {
                min = Math.abs(nums[i]);
                result = nums[i];
            }
            if(Math.abs(nums[i]) == min) {
                result = Math.max(result, nums[i]);
            }
        }
        return result;

=======

        int closest = Integer.MAX_VALUE;
        int closestNumber = 0;
        for (int num : nums) {
            int distance = Math.abs(num);
            if (distance < closest || (distance == closest && num > closestNumber)) {
                closest = distance;
                closestNumber = num;
            }
        }
        return closestNumber;

=======

        int min = Integer.MAX_VALUE;
        int minIndex = 0;
        for(int i = 0; i < nums.length; i++) {
            if(nums[i] < 0) {
                nums[i] = -nums[i];
            }
            if(nums[i] < min) {
                min = nums[i];
                minIndex = i;
            } else if(nums[i] == min) {
                if(nums[i] > nums[minIndex]) {
                    minIndex = i;
                }
            }
        }
        return nums[minIndex];
    }
}

=======

        // sort the array
        Arrays.sort(nums);
        // create a variable to store the closest number
        int num = 0;
        // create a variable to store the closest distance
        int distance = Integer.MAX_VALUE;
        // loop through the array
        for (int i = 0; i < nums.length; i++) {
            // if the distance is less than the closest distance
            if (Math.abs(nums[i]) < distance) {
                // update the closest distance
                distance = Math.abs(nums[i]);
                // update the closest number
                num = nums[i];
            }
        }
        // return the closest number
        return num;

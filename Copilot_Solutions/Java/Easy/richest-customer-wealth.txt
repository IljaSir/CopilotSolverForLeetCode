Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int max = 0;
        for (int i = 0; i < accounts.length; i++) {
            int sum = 0;
            for (int j = 0; j < accounts[i].length; j++) {
                sum += accounts[i][j];
            }
            max = Math.max(max, sum);
        }
        return max;

=======

        int max = 0;
        for (int i = 0; i < accounts.length; i++) {
            int sum = 0;
            for (int j = 0; j < accounts[i].length; j++) {
                sum += accounts[i][j];
            }
            if (sum > max) {
                max = sum;
            }
        }
        return max;

=======

        int max = 0;
        for(int i = 0; i < accounts.length; i++) {
            int sum = 0;
            for(int j = 0; j < accounts[i].length; j++) {
                sum += accounts[i][j];
            }
            if(sum > max) max = sum;
        }
        return max;

=======

        int max = 0;
        for (int[] account : accounts) {
            int sum = 0;
            for (int i : account) {
                sum += i;
            }
            max = Math.max(sum, max);
        }
        return max;

=======

        int maxWealth = 0;
        for(int i=0;i<accounts.length;i++){
            int currentWealth = 0;
            for(int j=0;j<accounts[i].length;j++){
                currentWealth += accounts[i][j];
            }
            if(currentWealth > maxWealth){
                maxWealth = currentWealth;
            }
        }
        return maxWealth;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int len = num.length();
        for (int i = len - 1; i >= 0; i--) {
            if ((num.charAt(i) - '0') % 2 != 0) {
                return num.substring(0, i + 1);
            }
        }
        return "";

=======

        int i = num.length() - 1;
        while (i >= 0) {
            if ((num.charAt(i) - '0') % 2 == 1) {
                return num.substring(0, i + 1);
            }
            i--;
        }
        return "";

=======

        int i = num.length() - 1;
        while (i >= 0 && (num.charAt(i) - '0') % 2 == 0) {
            i--;
        }
        return i < 0 ? "" : num.substring(0, i + 1);

=======

        int i = num.length() - 1;
        while (i >= 0 && (num.charAt(i) - '0') % 2 == 0) {
            i--;
        }
        return i == -1 ? "" : num.substring(0, i + 1);

=======

        int n = num.length();
        for (int i = n-1; i >= 0; i--) {
            if ((num.charAt(i) - '0') % 2 == 1) {
                return num.substring(0, i+1);
            }
        }
        return "";

=======

        int i = num.length() - 1;
        while (i >= 0) {
            if ((num.charAt(i) - '0') % 2 == 1) {
                break;
            }
            i--;
        }
        return num.substring(0, i + 1);

=======

        int i = 0;
        for (i = num.length() - 1; i >= 0; i--) {
            if ((num.charAt(i) - '0') % 2 != 0) {
                break;
            }
        }
        return num.substring(0, i + 1);

=======

        int len = num.length();
        int i = len - 1;
        while (i >= 0 && (num.charAt(i) - '0') % 2 == 0) {
            i--;
        }
        return num.substring(0, i + 1);

=======

        int i = num.length() - 1;
        while(i >= 0 && (num.charAt(i) - '0') % 2 == 0) {
            i--;
        }
        if(i == -1) {
            return "";
        }
        return num.substring(0, i + 1);

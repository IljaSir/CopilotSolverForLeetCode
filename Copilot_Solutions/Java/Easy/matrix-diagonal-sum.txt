Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int sum = 0;
        for (int i = 0; i < mat.length; i++) {
            sum += mat[i][i];
            sum += mat[i][mat.length - 1 - i];
        }
        if (mat.length % 2 == 1) {
            sum -= mat[mat.length / 2][mat.length / 2];
        }
        return sum;

=======

        int n = mat.length;
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += mat[i][i];
            sum += mat[i][n - i - 1];
        }
        if (n % 2 == 1) {
            sum -= mat[n / 2][n / 2];
        }
        return sum;

=======

        int sum = 0;
        int n = mat.length;
        for (int i = 0; i < n; i++) {
            sum += mat[i][i];
            sum += mat[i][n - i - 1];
        }
        if (n % 2 == 1) {
            sum -= mat[n / 2][n / 2];
        }
        return sum;

=======

        int sum = 0;
        int n = mat.length;
        for (int i = 0; i < n; i++) {
            sum += mat[i][i];
            sum += mat[i][n - i - 1];
        }
        if ((n & 1) == 1) {
            sum -= mat[n / 2][n / 2];
        }
        return sum;

=======

        int sum = 0;
        for (int i = 0; i < mat.length; i++) {
            sum += mat[i][i];
            sum += mat[mat.length - i - 1][i];
        }
        if (mat.length % 2 == 1) {
            sum -= mat[mat.length / 2][mat.length / 2];
        }
        return sum;

=======

        int sum = 0;
        int n = mat.length;
        for (int i = 0; i < n; i++) {
            sum += mat[i][i];
            sum += mat[i][n-1-i];
        }
        if (n % 2 == 1) {
            sum -= mat[n/2][n/2];
        }
        return sum;

=======

        int sum = 0;
        int len = mat.length;
        for (int i = 0; i < len; i++) {
            sum += mat[i][i];
            sum += mat[i][len - 1 - i];
        }
        if (len % 2 == 1) {
            sum -= mat[len / 2][len / 2];
        }
        return sum;

=======

        int sum = 0;
        int n = mat.length;
        for(int i = 0; i < n; i++) {
            sum += mat[i][i];
            sum += mat[i][n - 1 - i];
        }
        if(n % 2 != 0) {
            sum -= mat[n / 2][n / 2];
        }
        return sum;

=======

        int result = 0;
        int n = mat.length;
        for(int i = 0; i < n; i++){
            result += mat[i][i];
            result += mat[i][n - i - 1];
        }
        if(n % 2 != 0){
            result -= mat[n / 2][n / 2];
        }
        return result;

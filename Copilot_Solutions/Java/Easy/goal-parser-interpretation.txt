Synthesizing 10/10 solutions (Duplicates hidden)

=======

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < command.length(); i++) {
            if (command.charAt(i) == 'G') {
                sb.append('G');
            } else if (command.charAt(i) == '(') {
                if (command.charAt(i + 1) == ')') {
                    sb.append('o');
                    i++;
                } else {
                    sb.append("al");
                    i += 3;
                }
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < command.length(); i++) {
            char c = command.charAt(i);
            if (c == 'G') {
                sb.append('G');
            } else if (c == '(') {
                if (command.charAt(i + 1) == ')') {
                    sb.append('o');
                    i++;
                } else {
                    sb.append("al");
                    i += 3;
                }
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        int i = 0;
        while (i < command.length()) {
            if (command.charAt(i) == 'G') {
                sb.append('G');
                i++;
            } else if (command.charAt(i) == '(' && command.charAt(i+1) == ')') {
                sb.append('o');
                i += 2;
            } else {
                sb.append("al");
                i += 4;
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < command.length(); i++) {
            char c = command.charAt(i);
            if (c == 'G') {
                sb.append(c);
            } else if (c == '(') {
                if (command.charAt(i + 1) == ')') {
                    sb.append('o');
                    i++;
                } else {
                    sb.append("al");
                    i += 3;
                }
            }
        }
        return sb.toString();

=======

        return command.replaceAll("\\(\\)", "o").replaceAll("\\(al\\)", "al");

=======

        String result = "";
        for (int i = 0; i < command.length(); i++) {
            char c = command.charAt(i);
            if (c == 'G') {
                result += 'G';
            } else if (c == '(' && command.charAt(i + 1) == ')') {
                result += 'o';
                i++;
            } else if (c == '(' && command.charAt(i + 1) == 'a') {
                result += "al";
                i += 3;
            }
        }
        return result;

=======

        char[] c = command.toCharArray();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < c.length; i++) {
            if (c[i] == 'G') {
                sb.append('G');
            } else if (c[i] == '(' && c[i + 1] == ')') {
                sb.append('o');
                i++;
            } else if (c[i] == '(' && c[i + 1] == 'a') {
                sb.append("al");
                i += 3;
            }
        }
        return sb.toString();

=======

        String ans = "";
        int i = 0;
        while (i < command.length()) {
            if (command.charAt(i) == 'G') {
                ans += 'G';
                i++;
            } else if (command.charAt(i) == '(') {
                if (command.charAt(i + 1) == ')') {
                    ans += 'o';
                    i += 2;
                } else {
                    ans += "al";
                    i += 4;
                }
            }
        }
        return ans;

=======

        String result = "";
        char[] c = command.toCharArray();
        int i = 0;
        while (i < c.length) {
            if (c[i] == 'G') {
                result += c[i];
                i++;
            } else if (c[i] == '(') {
                if (c[i+1] == ')') {
                    result += 'o';
                    i += 2;
                } else {
                    result += "al";
                    i += 4;
                }
            }
        }
        return result;

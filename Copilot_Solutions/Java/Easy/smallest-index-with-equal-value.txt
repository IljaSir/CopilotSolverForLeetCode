Synthesizing 10/10 solutions (Duplicates hidden)

=======

        for (int i = 0; i < nums.length; i++) {
            if (i % 10 == nums[i]) {
                return i;
            }
        }
        return -1;

=======

        int min = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length; i++) {
            if (i % 10 == nums[i]) {
                min = Math.min(min, i);
            }
        }
        return min == Integer.MAX_VALUE ? -1 : min;

=======

        int min = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == i % 10) {
                min = Math.min(min, i);
            }
        }
        return min == Integer.MAX_VALUE ? -1 : min;

=======

        int[] arr = new int[10];
        for (int i = 0; i < nums.length; i++) {
            arr[nums[i]] = i;
        }
        for (int i = 0; i < nums.length; i++) {
            if (i == arr[nums[i]]) {
                return i;
            }
        }
        return -1;

=======

        int[] count = new int[10];
        for (int i = 0; i < nums.length; i++) {
            count[nums[i]]++;
        }
        int res = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length; i++) {
            if (count[nums[i]] == 1 && nums[i] == i % 10) {
                res = Math.min(res, i);
            }
        }
        return res == Integer.MAX_VALUE ? -1 : res;

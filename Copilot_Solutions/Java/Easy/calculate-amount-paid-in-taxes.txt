Synthesizing 10/10 solutions

=======

        double tax = 0;
        for (int i = 0; i < brackets.length; i++) {
            int upper = brackets[i][0];
            int percent = brackets[i][1];
            if (income <= upper) {
                tax += income * percent / 100.0;
                break;
            } else {
                tax += (upper - (i == 0 ? 0 : brackets[i-1][0])) * percent / 100.0;
            }
        }
        return tax;

=======

        double tax = 0.0;
        for (int i = 0; i < brackets.length; i++) {
            int upper = brackets[i][0];
            double percent = brackets[i][1] / 100.0;
            if (income <= upper) {
                tax += income * percent;
                break;
            }
            tax += upper * percent;
            income -= upper;
        }
        return tax;
    }
}

=======

        double tax = 0;
        for (int i = 0; i < brackets.length; i++) {
            int upper = brackets[i][0];
            int percent = brackets[i][1];
            if (income >= upper) {
                tax += (upper - (i == 0 ? 0 : brackets[i - 1][0])) * percent / 100.0;
            } else {
                tax += (income - (i == 0 ? 0 : brackets[i - 1][0])) * percent / 100.0;
                break;
            }
        }
        return tax;

=======

        double tax = 0;
        int prev = 0;
        for (int i = 0; i < brackets.length; i++) {
            int upper = brackets[i][0];
            int percent = brackets[i][1];
            int toPay = Math.min(upper, income) - prev;
            tax += toPay * percent / 100.0;
            prev = upper;
            if (income <= upper) break;
        }
        return tax;

=======

        double tax = 0;
        for(int i = 0; i < brackets.length; i++){
            int upper = brackets[i][0];
            int percent = brackets[i][1];
            if(income <= upper){
                tax += income * percent / 100.0;
                break;
            } else {
                tax += upper * percent / 100.0;
                income -= upper;
            }
        }
        return tax;

=======

        double tax = 0;
        int prev = 0;
        for(int i = 0; i < brackets.length; i++) {
            int upper = brackets[i][0];
            int percent = brackets[i][1];
            if(income >= upper) {
                tax += (upper - prev) * percent / 100.0;
                prev = upper;
            } else {
                tax += (income - prev) * percent / 100.0;
                break;
            }
        }
        return tax;

=======

        double tax = 0;
        int prev = 0;
        for (int i = 0; i < brackets.length; i++) {
            int[] bracket = brackets[i];
            int upper = bracket[0];
            int percent = bracket[1];
            int earned = Math.min(upper, income) - prev;
            tax += earned * percent / 100.0;
            prev = upper;
            if (income <= upper) break;
        }
        return tax;

=======

        if (income == 0) {
            return 0;
        }
        int i = 0;
        double tax = 0;
        while (i < brackets.length) {
            int upper = brackets[i][0];
            double percent = brackets[i][1] / 100.0;
            if (income <= upper) {
                tax += income * percent;
                break;
            } else {
                tax += (upper * percent);
                income -= upper;
            }
            i++;
        }
        return tax;
    }
    public double calculateTax2(int[][] brackets, int income) {
        if (income == 0) {
            return 0;
        }
        int i = 0;
        double tax = 0;
        while (i < brackets.length) {
            int upper = brackets[i][0];
            double percent = brackets[i][1] / 100.0;
            if (income <= upper) {
                tax += income * percent;
                break;
            } else {
                tax += (upper * percent);
                income -= upper;
            }
            i++;
        }
        return tax;
    }
    public double calculateTax3(int[][] brackets, int income) {
        if (income == 0) {
            return 0;
        }
        int i = 0;
        double tax = 0;
        while (i < brackets.length) {
            int upper = brackets[i][0];
            double percent = brackets[i][1] / 100.0;
            if (income <= upper) {
                tax += income * percent;
                break;
            } else {
                tax += (upper * percent);
                income -= upper;
            }
            i++;
        }
        return tax;
    }
    public double calculateTax4(int[][] brackets, int income) {
        if (income == 0) {
            return 0;
        }
        int i = 0;
        double tax = 0;
        while (i < brackets.length) {
            int upper = brackets[i][0];
            double percent = brackets[i][1] / 100.0;
            if (income <= upper) {
                tax += income * percent;
                break;
            } else {
                tax += (upper * percent);
                income -= upper;
            }
            i++;
        }
        return tax;

=======

        double res = 0;
        int i = 0;
        while (income > 0) {
            int tax = Math.min(income, brackets[i][0]);
            res += tax * brackets[i][1] / 100.0;
            income -= tax;
            i++;
        }
        return res;

=======

        int tax = 0;
        int prev = 0;
        for (int[] bracket : brackets) {
            int limit = Math.min(bracket[0], income);
            tax += (limit - prev) * bracket[1];
            if (income <= bracket[0]) {
                return (double) tax / 100;
            }
            prev = bracket[0];
        }
        return (double) tax / 100;

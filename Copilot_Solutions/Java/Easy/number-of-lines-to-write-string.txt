Synthesizing 10/10 solutions

=======

        int line = 1;
        int width = 0;
        for (int i = 0; i < s.length(); i++) {
            int w = widths[s.charAt(i) - 'a'];
            if (width + w > 100) {
                line++;
                width = w;
            } else {
                width += w;
            }
        }
        return new int[]{line, width};

=======

        int lines = 1;
        int cur = 0;
        for (char c : s.toCharArray()) {
            int w = widths[c - 'a'];
            if (cur + w > 100) {
                lines++;
                cur = 0;
            }
            cur += w;
        }
        return new int[]{lines, cur};

=======

        int[] result = new int[2];
        int line = 1;
        int width = 0;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            int w = widths[c - 'a'];
            if (width + w > 100) {
                line++;
                width = w;
            } else {
                width += w;
            }
        }
        result[0] = line;
        result[1] = width;
        return result;

=======

        int lines = 1;
        int lastLine = 0;
        for (char c : s.toCharArray()) {
            int width = widths[c - 'a'];
            lastLine += width;
            if (lastLine > 100) {
                lines++;
                lastLine = width;
            }
        }
        return new int[]{lines, lastLine};

=======

        int[] result = new int[2];
        int line = 1;
        int width = 0;
        for (char c : s.toCharArray()) {
            int w = widths[c - 'a'];
            if (width + w > 100) {
                line++;
                width = w;
            } else {
                width += w;
            }
        }
        result[0] = line;
        result[1] = width;
        return result;

=======

        int sum = 0;
        int line = 1;
        for (char c : s.toCharArray()) {
            int w = widths[c - 'a'];
            if (sum + w > 100) {
                line++;
                sum = w;
            } else {
                sum += w;
            }
        }
        return new int[] { line, sum };

=======

        int line = 1;
        int length = 0;
        for (char c: s.toCharArray()) {
            int width = widths[c - 'a'];
            if (length + width > 100) {
                line++;
                length = width;
            } else {
                length += width;
            }
        }
        return new int[]{line, length};

=======

        int[] result = new int[2];
        int sum = 0;
        int count = 1;
        for (int i = 0; i < s.length(); i++) {
            int width = widths[s.charAt(i) - 'a'];
            if (sum + width > 100) {
                count++;
                sum = 0;
            }
            sum += width;
        }
        result[0] = count;
        result[1] = sum;
        return result;

=======

        int[] result = new int[2];
        int line = 0, lastLine = 0;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            int width = widths[c - 'a'];
            if (lastLine + width > 100) {
                line++;
                lastLine = width;
            } else {
                lastLine += width;
            }
        }
        result[0] = line + 1;
        result[1] = lastLine;
        return result;

=======

        int[] result = new int[2];
        int total = 0;
        for(char c : s.toCharArray()) {
            int w = widths[c - 'a'];
            if (total + w > 100) {
                result[0]++;
                total = w;
            } else {
                total += w;
            }
        }
        result[1] = total;
        result[0]++;
        return result;

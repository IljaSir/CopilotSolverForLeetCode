Synthesizing 10/10 solutions

=======

        for (int i = 1; i <= nums.length; i++) {
            int count = 0;
            for (int j = 0; j < nums.length; j++) {
                if (nums[j] >= i) {
                    count++;
                }
            }
            if (count == i) {
                return i;
            }
        }
        return -1;

=======

        int[] count = new int[1001];
        for (int num : nums) {
            count[num]++;
        }
        int sum = 0;
        for (int i = 1000; i >= 0; i--) {
            sum += count[i];
            if (sum == i) {
                return i;
            }
        }
        return -1;

=======

        int[] count = new int[1001];
        for (int n : nums) {
            count[n]++;
        }
        int sum = 0;
        for (int i = 1000; i >= 0; i--) {
            sum += count[i];
            if (sum == i) {
                return i;
            }
        }
        return -1;

=======

        int n = nums.length;
        int[] count = new int[1001];
        for (int num : nums) {
            count[num]++;
        }
        for (int i = n; i >= 0; i--) {
            if (i < 1000) {
                count[i] += count[i + 1];
            }
            if (count[i] == i) {
                return i;
            }
        }
        return -1;

=======

        int[] count = new int[1001];
        for (int num : nums) {
            count[num]++;
        }
        int sum = nums.length;
        for (int i = 0; i <= 1000; i++) {
            if (sum == i) {
                return i;
            }
            sum -= count[i];
        }
        return -1;

=======

        int[] count = new int[1001];
        for (int n : nums) {
            count[n] += 1;
        }
        int sum = 0;
        for (int i = 1000; i >= 0; i--) {
            sum += count[i];
            if (sum == i) {
                return i;
            }
        }
        return -1;

=======

        Arrays.sort(nums);
        int n = nums.length;
        for (int i = 0; i < n; ++i) {
            if (i > 0 && nums[i] == nums[i - 1]) continue;
            int x = n - i;
            if (nums[i] >= x) return x;
        }
        return -1;

=======

        Arrays.sort(nums);
        int n = nums.length;
        for (int i = 0; i < n; i++) {
            int x = nums[i];
            if (x >= n - i && (i == 0 || nums[i - 1] < n - i)) {
                return n - i;
            }
        }
        return -1;

=======

        int[] count = new int[1001];
        for (int n : nums) {
            count[n]++;
        }
        int x = nums.length;
        for (int i = 1000; i >= 0; i--) {
            if (count[i] >= x) {
                if (x == 0 || count[i - 1] < x) {
                    return x;
                }
            }
            x -= count[i];
        }
        return -1;

=======

        Arrays.sort(nums);
        int x = 0;
        for(int i = nums.length - 1; i >= 0; i--){
            if(nums[i] >= x + 1){
                x++;
            }else{
                break;
            }
        }
        return x;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        for (int i = 0; i < prices.length; i++) {
            for (int j = i + 1; j < prices.length; j++) {
                if (prices[j] <= prices[i]) {
                    prices[i] -= prices[j];
                    break;
                }
            }
        }
        return prices;

=======

        int[] res = new int[prices.length];
        for (int i = 0; i < prices.length; i++) {
            res[i] = prices[i];
            for (int j = i + 1; j < prices.length; j++) {
                if (prices[j] <= prices[i]) {
                    res[i] = prices[i] - prices[j];
                    break;
                }
            }
        }
        return res;

=======

        int[] result = new int[prices.length];
        for (int i = 0; i < prices.length; i++) {
            int discount = 0;
            for (int j = i + 1; j < prices.length; j++) {
                if (prices[j] <= prices[i]) {
                    discount = prices[j];
                    break;
                }
            }
            result[i] = prices[i] - discount;
        }
        return result;

=======

        int[] ans = new int[prices.length];
        for (int i = 0; i < ans.length; i++) {
            ans[i] = prices[i];
            for (int j = i + 1; j < ans.length; j++) {
                if (prices[j] <= prices[i]) {
                    ans[i] -= prices[j];
                    break;
                }
            }
        }
        return ans;

=======

        int[] result = new int[prices.length];
        for(int i = 0; i < prices.length; i++){
            int j = i+1;
            while(j < prices.length && prices[j] > prices[i]){
                j++;
            }
            if(j == prices.length){
                result[i] = prices[i];
            }else{
                result[i] = prices[i] - prices[j];
            }
        }
        return result;

=======

        int[] res = new int[prices.length];
        for(int i = 0; i < prices.length; i++){
            int j = i+1;
            while(j < prices.length && prices[j] > prices[i]){
                j++;
            }
            if(j < prices.length){
                res[i] = prices[i] - prices[j];
            }else{
                res[i] = prices[i];
            }
        }
        return res;

=======

        int[] result = new int[prices.length];
        int minIndex = 0;
        for (int i = 0; i < prices.length; i++) {
            minIndex = i + 1;
            while (minIndex < prices.length && prices[minIndex] > prices[i]) {
                minIndex++;
            }
            if (minIndex == prices.length) {
                result[i] = prices[i];
            } else {
                result[i] = prices[i] - prices[minIndex];
            }
        }
        return result;

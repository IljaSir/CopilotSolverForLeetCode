Synthesizing 10/10 solutions

=======

        if (s.length() < 3) {
            return s;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(s.charAt(0));
        sb.append(s.charAt(1));
        for (int i = 2; i < s.length(); i++) {
            if (s.charAt(i) != s.charAt(i - 1) || s.charAt(i) != s.charAt(i - 2)) {
                sb.append(s.charAt(i));
            }
        }
        return sb.toString();

=======

        if (s.length() <= 2) {
            return s;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(s.charAt(0));
        sb.append(s.charAt(1));
        for (int i = 2; i < s.length(); i++) {
            if (s.charAt(i) != s.charAt(i - 1) || s.charAt(i) != s.charAt(i - 2)) {
                sb.append(s.charAt(i));
            }
        }
        return sb.toString();

=======

        int count = 1;
        StringBuilder sb = new StringBuilder();
        sb.append(s.charAt(0));
        for (int i = 1; i < s.length(); i++) {
            if (s.charAt(i) == s.charAt(i - 1)) {
                count++;
                if (count <= 2) {
                    sb.append(s.charAt(i));
                }
            } else {
                sb.append(s.charAt(i));
                count = 1;
            }
        }
        return sb.toString();

=======

        int count = 1;
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if (i == 0) {
                sb.append(s.charAt(i));
            } else {
                if (s.charAt(i) == s.charAt(i-1)) {
                    count++;
                    if (count <= 2) {
                        sb.append(s.charAt(i));
                    }
                } else {
                    count = 1;
                    sb.append(s.charAt(i));
                }
            }
        }
        return sb.toString();

=======

        int n = s.length();
        int count = 0;
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < n; i++) {
            if (i > 0 && s.charAt(i) == s.charAt(i - 1)) {
                count++;
            } else {
                count = 1;
            }
            if (count < 3) {
                sb.append(s.charAt(i));
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        int count = 0;
        char last = ' ';
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (c == last) {
                count++;
            } else {
                last = c;
                count = 1;
            }
            if (count < 3) {
                sb.append(c);
            }
        }
        return sb.toString();

=======

        int count = 1;
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (i == 0) {
                sb.append(c);
            } else {
                char last = sb.charAt(sb.length() - 1);
                if (last == c) {
                    count++;
                    if (count < 3) {
                        sb.append(c);
                    }
                } else {
                    sb.append(c);
                    count = 1;
                }
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        int count = 1;
        char last = s.charAt(0);
        for (int i = 1; i < s.length(); ++i) {
            if (s.charAt(i) == last) {
                ++count;
                if (count < 3) {
                    sb.append(s.charAt(i));
                }
            } else {
                count = 1;
                last = s.charAt(i);
                sb.append(s.charAt(i));
            }
        }
        return sb.toString();

=======

        int count = 0;
        char last = ' ';
        StringBuilder sb = new StringBuilder();
        for (char c : s.toCharArray()) {
            if (c != last) {
                count = 1;
                last = c;
                sb.append(c);
            } else {
                count++;
                if (count < 3) {
                    sb.append(c);
                }
            }
        }
        return sb.toString();

=======

        if (s.length() < 3) {
            return s;
        }
        char[] arr = s.toCharArray();
        int len = arr.length;
        char pre = arr[0];
        int count = 1;
        int idx = 1;
        for (int i = 1; i < len; i++) {
            char c = arr[i];
            if (c == pre) {
                count++;
                if (count < 3) {
                    arr[idx++] = c;
                }
            } else {
                pre = c;
                count = 1;
                arr[idx++] = c;
            }
        }
        return new String(arr, 0, idx);

Synthesizing 10/10 solutions

=======

        StringBuilder sb = new StringBuilder();
        for (String word : words) {
            sb.append(word);
            if (sb.toString().equals(s)) {
                return true;
            }
        }
        return false;

=======

        int i = 0;
        for (String word : words) {
            if (i + word.length() > s.length()) {
                return false;
            }
            for (int j = 0; j < word.length(); ++j) {
                if (s.charAt(i + j) != word.charAt(j)) {
                    return false;
                }
            }
            i += word.length();
        }
        return i == s.length();

=======

        var builder = new StringBuilder();
        for (var word : words) {
            builder.append(word);
            if (builder.toString().equals(s)) {
                return true;
            }
        }
        return false;

=======

        StringBuilder sb = new StringBuilder();
        for(String word: words){
            sb.append(word);
            if(sb.toString().equals(s)) return true;
        }
        return false;

=======

        int i = 0;
        for (String word : words) {
            if (i + word.length() > s.length())
                return false;
            if (!s.substring(i, i + word.length()).equals(word))
                return false;
            i += word.length();
        }
        return i == s.length();

=======

        int i = 0;
        int j = 0;
        while(i < s.length() && j < words.length) {
            if(s.charAt(i) == words[j].charAt(i)) {
                i++;
                if(i == words[j].length()) {
                    j++;
                    i = 0;
                }
            } else {
                return false;
            }
        }
        return i == 0;

=======

        String tmp = "";
        for (String w : words) {
            tmp += w;
            if (tmp.equals(s)) {
                return true;
            }
        }
        return false;

=======

        int n = s.length();
        int i = 0;
        for (String word: words) {
            if (i + word.length() > n) {
                return false;
            }
            for (int j = 0; j < word.length(); j++) {
                if (s.charAt(i + j) != word.charAt(j)) {
                    return false;
                }
            }
            i += word.length();
        }
        return i == n;

=======

        String w = "";
        for (String word : words) {
            w += word;
            if (w.length() >= s.length()) {
                break;
            }
        }
        return w.equals(s);

=======

        int sLen = s.length();
        int wLen = words.length;
        int i = 0;
        int j = 0;
        while (i < sLen && j < wLen) {
            if (s.charAt(i) == words[j].charAt(i)) {
                i++;
            } else {
                j++;
                i = 0;
            }
        }
        return i == sLen;

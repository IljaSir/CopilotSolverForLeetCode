Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int i = 0;
        while (i < s.length() && s.charAt(i) == '1') {
            i++;
        }
        while (i < s.length() && s.charAt(i) == '0') {
            i++;
        }
        return i == s.length();

=======

        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '1') {
                count++;
                while (i < s.length() && s.charAt(i) == '1') {
                    i++;
                }
            }
        }
        return count == 1;

=======

        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '1') {
                count++;
                while (i < s.length() && s.charAt(i) == '1') {
                    i++;
                }
            }
        }
        return count <= 1;

=======

        int n = s.length();
        int i = 0;
        while (i < n && s.charAt(i) == '1') {
            i++;
        }
        while (i < n && s.charAt(i) == '0') {
            i++;
        }
        return i == n;

=======

        boolean flag = false;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '1' && !flag) {
                flag = true;
            } else if (s.charAt(i) == '0' && flag) {
                return false;
            }
        }
        return true;

=======

        boolean found = false;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '1') {
                if (found) {
                    return false;
                }
                found = true;
            } else {
                found = false;
            }
        }
        return true;

=======

        int i = 0;
        while (i < s.length() && s.charAt(i) == '0') {
            i++;
        }
        while (i < s.length() && s.charAt(i) == '1') {
            i++;
        }
        while (i < s.length() && s.charAt(i) == '0') {
            i++;
        }
        return i == s.length();

=======

        return !s.contains("01");

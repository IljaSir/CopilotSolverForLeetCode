Synthesizing 10/10 solutions

=======

        int depth = 0;
        int maxDepth = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '(') {
                depth++;
                maxDepth = Math.max(maxDepth, depth);
            } else if (s.charAt(i) == ')') {
                depth--;
            }
        }
        return maxDepth;

=======

        int max = 0;
        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '(') {
                count++;
            } else if (s.charAt(i) == ')') {
                count--;
            }
            max = Math.max(max, count);
        }
        return max;

=======

        int maxDepth = 0;
        int currentDepth = 0;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (c == '(') {
                currentDepth++;
                maxDepth = Math.max(maxDepth, currentDepth);
            } else if (c == ')') {
                currentDepth--;
            }
        }
        return maxDepth;

=======

        int maxDepth = 0;
        int depth = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '(') {
                depth++;
                maxDepth = Math.max(maxDepth, depth);
            } else if (s.charAt(i) == ')') {
                depth--;
            }
        }
        return maxDepth;

=======

        int depth = 0;
        int maxDepth = 0;
        for (char c : s.toCharArray()) {
            if (c == '(') {
                depth++;
                maxDepth = Math.max(depth, maxDepth);
            } else if (c == ')') {
                depth--;
            }
        }
        return maxDepth;

=======

        int max = 0;
        int depth = 0;
        for (char c : s.toCharArray()) {
            if (c == '(') {
                depth++;
            } else if (c == ')') {
                depth--;
            }
            max = Math.max(max, depth);
        }
        return max;

=======

        int max = 0;
        int cur = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '(') {
                cur++;
            } else if (s.charAt(i) == ')') {
                cur--;
            }
            max = Math.max(cur, max);
        }
        return max;

=======

        int max = 0;
        int depth = 0;
        for (char c : s.toCharArray()) {
            if (c == '(') {
                depth++;
                if (depth > max) {
                    max = depth;
                }
            } else if (c == ')') {
                depth--;
            }
        }
        return max;

=======

        int max = 0, count = 0;
        for (char c : s.toCharArray()) {
            if (c == '(') {
                count++;
                max = Math.max(max, count);
            } else if (c == ')') {
                count--;
            }
        }
        return max;

=======

        int max = 0;
        int count = 0;
        for(int i = 0; i < s.length(); i++) {
            if(s.charAt(i) == '(') {
                count++;
                if(count > max) {
                    max = count;
                }
            } else if(s.charAt(i) == ')') {
                count--;
            }
        }
        return max;

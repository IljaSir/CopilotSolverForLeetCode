Synthesizing 10/10 solutions

=======

        int sum = 0;
        int day = 1;
        int week = 1;
        for (int i = 0; i < n; i++) {
            sum += day;
            day++;
            if (day > 7) {
                day = 1;
                week++;
            }
        }
        return sum;

=======

        int sum = 0;
        int day = 1;
        int week = 1;
        for (int i = 0; i < n; i++) {
            if (day > 7) {
                day = 1;
                week++;
            }
            sum += day + week - 1;
            day++;
        }
        return sum;

=======

        int sum = 0;
        int base = 1;
        int bonus = 0;
        for (int i = 1; i <= n; i++) {
            sum += base + bonus;
            base++;
            if (i % 7 == 0) {
                base = 1;
                bonus++;
            }
        }
        return sum;

=======

        int day = n % 7;
        int week = n / 7;
        int sum = 0;
        int base = 0;
        for (int i = 0; i < week; i++) {
            base += 7;
            sum += base;
        }
        base += day;
        sum += (day + 1) * day / 2;
        return sum;

=======

        int sum = 0;
        int start = 1;
        int base = 1;
        for (int i = 0; i < n; i++) {
            if (i % 7 == 0 && i != 0) {
                start = base + 1;
                base = start;
            }
            sum += start;
            start++;
        }
        return sum;

=======

        int result = 0;
        int week = 0;
        int day = 0;
        int money = 0;
        for (int i = 1; i <= n; i++) {
            if (i % 7 == 1) {
                week++;
                day = 1;
                money = week;
            } else {
                day++;
                money++;
            }
            result += money;
        }
        return result;

=======

        int total = 0;
        int week = n/7;
        int day = n%7;
        int start = 1;
        for(int i=0; i<week; i++){
            total += 7*start + 21;
            start++;
        }
        for(int i=0; i<day; i++){
            total += start + i;
        }
        return total;

=======

        int sum = 0;
        int start = 1;
        int startDay = 1;
        for(int i = 1; i <= n; i++){
            sum += start;
            if(i % 7 == 0){
                start++;
                startDay = 1;
            }else{
                startDay++;
            }
            start = startDay;
        }
        return sum;

=======

        int sum = 0;
        int monday = 1;
        int week = 1;
        int day = 1;
        while (n > 0) {
            sum += monday + day - 1;
            day++;
            if (day > 7) {
                day = 1;
                monday++;
                week++;
            }
            n--;
        }
        return sum;

=======

        int total = 0;
        int start = 1;
        int curr = 1;
        int day = 1;
        while (n > 0) {
            total += curr;
            curr++;
            day++;
            if (day > 7) {
                day = 1;
                curr = ++start;
            }
            n--;
        }
        return total;

Synthesizing 5/10 solutions

=======

        int[] days = {31,28,31,30,31,30,31,31,30,31,30,31};
        int[] days2 = {31,29,31,30,31,30,31,31,30,31,30,31};
        int[] d1 = new int[3];
        int[] d2 = new int[3];
        for(int i=0;i<3;i++){
            d1[i]=Integer.parseInt(date1.split("-")[i]);
            d2[i]=Integer.parseInt(date2.split("-")[i]);
        }
        int year = d1[0];
        int month = d1[1];
        int day = d1[2];
        int sum = 0;
        while(year<d2[0]){
            if(year%4==0){
                sum+=366;
            }else{
                sum+=365;
            }
            year++;
        }
        while(month<d2[1]){
            if(year%4==0){
                sum+=days2[month-1];
            }else{
                sum+=days[month-1];
            }
            month++;
        }
        sum-=day;
        sum+=d2[2];
        return sum;

=======

        int[] days = {31,28,31,30,31,30,31,31,30,31,30,31};
        int[] daysLeap = {31,29,31,30,31,30,31,31,30,31,30,31};
        String[] date1s = date1.split("-");
        String[] date2s = date2.split("-");
        int year1 = Integer.parseInt(date1s[0]);
        int month1 = Integer.parseInt(date1s[1]);
        int day1 = Integer.parseInt(date1s[2]);
        int year2 = Integer.parseInt(date2s[0]);
        int month2 = Integer.parseInt(date2s[1]);
        int day2 = Integer.parseInt(date2s[2]);
        int year = Math.abs(year1 - year2);
        int month = Math.abs(month1 - month2);
        int day = Math.abs(day1 - day2);
        int days1 = 0;
        int days2 = 0;
        if (year1 > year2) {
            for (int i = 0; i < year; i++) {
                if (isLeapYear(year2 + i)) {
                    days1 += 366;
                } else {
                    days1 += 365;
                }
            }
            for (int i = 0; i < month1; i++) {
                if (isLeapYear(year1)) {
                    days1 -= daysLeap[i];
                } else {
                    days1 -= days[i];
                }
            }
            days1 -= day1;
            for (int i = 0; i < month2; i++) {
                if (isLeapYear(year2)) {
                    days1 += daysLeap[i];
                } else {
                    days1 += days[i];
                }
            }
            days1 += day2;
        } else if (year2 > year1) {
            for (int i = 0; i < year; i++) {
                if (isLeapYear(year1 + i)) {
                    days2 += 366;
                } else {
                    days2 += 365;
                }
            }
            for (int i = 0; i < month2; i++) {
                if (isLeapYear(year2)) {
                    days2 -= daysLeap[i];
                } else {
                    days2 -= days[i];
                }
            }

=======

        return Math.abs(days(date1) - days(date2));
    }
    public int days(String date) {
        String[] ymd = date.split("-");
        int year = Integer.parseInt(ymd[0]);
        int month = Integer.parseInt(ymd[1]);
        int day = Integer.parseInt(ymd[2]);
        int days = day;
        for (int i = 1971; i < year; i++) {
            days += isLeap(i) ? 366 : 365;
        }
        for (int i = 1; i < month; i++) {
            days += daysOfMonth(i, year);
        }
        return days;
    }
    public boolean isLeap(int year) {
        return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
    }
    public int daysOfMonth(int month, int year) {
        if (month == 2) {
            return isLeap(year) ? 29 : 28;
        }
        if (month == 4 || month == 6 || month == 9 || month == 11) {
            return 30;
        }
        return 31;

=======

        return Math.abs((int)(days(date1) - days(date2)));
    }
    
    public long days(String date) {
        String[] d = date.split("-");
        int year = Integer.parseInt(d[0]);
        int month = Integer.parseInt(d[1]);
        int day = Integer.parseInt(d[2]);
        int[] months = {31,28,31,30,31,30,31,31,30,31,30,31};
        int totalDays = 0;
        for (int i = 1971; i < year; i++) {
            if (i % 4 == 0 && (i % 100 != 0 || i % 400 == 0)) {
                totalDays += 366;
            } else {
                totalDays += 365;
            }
        }
        for (int i = 0; i < month - 1; i++) {
            if (i == 1 && year % 4 == 0 && (year % 100 != 0 || year % 400 == 0)) {
                totalDays += 29;
            } else {
                totalDays += months[i];
            }
        }
        totalDays += day;
        return totalDays;

=======

        return Math.abs( (int)(convert(date1) - convert(date2)) );
    }
    
    public long convert(String date) {
        long year = Integer.valueOf(date.substring(0, 4));
        long month = Integer.valueOf(date.substring(5, 7));
        long day = Integer.valueOf(date.substring(8, 10));
        long total = 0;
        for (long i = 1971; i < year; i++) {
            if (i % 4 == 0 && i % 100 != 0 || i % 400 == 0) {
                total += 366;
            } else {
                total += 365;
            }
        }
        int[] months = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {
            months[1] = 29;
        }
        for (int i = 0; i < month - 1; i++) {
            total += months[i];
        }
        total += day;
        return total;

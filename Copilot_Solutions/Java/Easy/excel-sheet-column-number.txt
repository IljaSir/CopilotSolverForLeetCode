Synthesizing 10/10 solutions

=======

        int result = 0;
        for (int i = 0; i < columnTitle.length(); i++) {
            result = result * 26 + (columnTitle.charAt(i) - 'A' + 1);
        }
        return result;

=======

        int res = 0;
        for (int i = 0; i < columnTitle.length(); i++) {
            res = res * 26 + (columnTitle.charAt(i) - 'A' + 1);
        }
        return res;

=======

        int result = 0;
        for (int i = 0; i < columnTitle.length(); i++) {
            result = result * 26 + columnTitle.charAt(i) - 'A' + 1;
        }
        return result;

=======

        int res = 0;
        for (int i = 0; i < columnTitle.length(); i++) {
            res = res * 26 + columnTitle.charAt(i) - 'A' + 1;
        }
        return res;

=======

        int ans = 0;
        for (int i = 0; i < columnTitle.length(); i++) {
            ans = ans * 26 + (columnTitle.charAt(i) - 'A' + 1);
        }
        return ans;

=======

        int sum = 0;
        for (int i = 0; i < columnTitle.length(); i++) {
            sum = sum * 26 + (columnTitle.charAt(i) - 'A' + 1);
        }
        return sum;

=======

        int res = 0;
        int n = columnTitle.length();
        for (int i = 0; i < n; i++) {
            res = res * 26 + (columnTitle.charAt(i) - 'A' + 1);
        }
        return res;

=======

        int res = 0;
        int len = columnTitle.length();
        for (int i = 0; i < len; i++) {
            res = res * 26 + (columnTitle.charAt(i) - 'A' + 1);
        }
        return res;

=======

        int n = columnTitle.length();
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans = ans * 26 + columnTitle.charAt(i) - 'A' + 1;
        }
        return ans;

=======

        int len = columnTitle.length();
        int result = 0;
        for (int i = 0; i < len; i++) {
            result = result * 26 + columnTitle.charAt(i) - 'A' + 1;
        }
        return result;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int max = 0;
        int sum = 0;
        for (int i = 0; i < gain.length; i++) {
            sum += gain[i];
            if (sum > max) {
                max = sum;
            }
        }
        return max;

=======

        int max = 0;
        int current = 0;
        for (int i = 0; i < gain.length; i++) {
            current += gain[i];
            if (current > max) {
                max = current;
            }
        }
        return max;

=======

        int max = 0;
        int cur = 0;
        for (int i = 0; i < gain.length; i++) {
            cur += gain[i];
            max = Math.max(max, cur);
        }
        return max;

=======

        int[] altitudes = new int[gain.length + 1];
        altitudes[0] = 0;
        for (int i = 1; i < altitudes.length; i++) {
            altitudes[i] = altitudes[i - 1] + gain[i - 1];
        }
        int highest = 0;
        for (int altitude : altitudes) {
            if (altitude > highest) {
                highest = altitude;
            }
        }
        return highest;

=======

        int max = 0;
        int current = 0;
        for (int i = 0; i < gain.length; i++) {
            current += gain[i];
            max = Math.max(max, current);
        }
        return max;

=======

        int max = 0;
        int cur = 0;
        for (int i = 0; i < gain.length; i++) {
            cur += gain[i];
            if (cur > max) {
                max = cur;
            }
        }
        return max;

=======

        int max = 0, sum = 0;
        for(int i = 0; i < gain.length; i++){
            sum += gain[i];
            max = Math.max(max, sum);
        }
        return max;

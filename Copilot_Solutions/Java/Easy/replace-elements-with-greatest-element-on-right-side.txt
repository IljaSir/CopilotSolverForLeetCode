Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int max = -1;
        for (int i = arr.length - 1; i >= 0; i--) {
            int temp = arr[i];
            arr[i] = max;
            max = Math.max(max, temp);
        }
        return arr;

=======

        int max = -1;
        for (int i = arr.length - 1; i >= 0; i--) {
            int tmp = arr[i];
            arr[i] = max;
            max = Math.max(max, tmp);
        }
        return arr;

=======

        int max = -1;
        for (int i = arr.length - 1; i >= 0; i--) {
            int tmp = arr[i];
            arr[i] = max;
            max = Math.max(tmp, max);
        }
        return arr;

=======

        int[] result = new int[arr.length];
        int max = -1;
        for (int i = arr.length - 1; i >= 0; i--) {
            result[i] = max;
            max = Math.max(max, arr[i]);
        }
        return result;

=======

        int[] result = new int[arr.length];
        result[arr.length - 1] = -1;
        for (int i = arr.length - 2; i >= 0; i--) {
            result[i] = Math.max(result[i + 1], arr[i + 1]);
        }
        return result;

=======

        int max = -1;
        int n = arr.length;
        for (int i = n - 1; i >= 0; i--) {
            int temp = arr[i];
            arr[i] = max;
            max = Math.max(max, temp);
        }
        return arr;

=======

        int n = arr.length;
        int[] ans = new int[n];
        ans[n-1] = -1;
        for(int i=n-2; i>=0; i--){
            ans[i] = Math.max(ans[i+1], arr[i+1]);
        }
        return ans;

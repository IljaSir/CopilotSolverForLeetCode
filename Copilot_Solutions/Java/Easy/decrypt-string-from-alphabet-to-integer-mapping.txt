Synthesizing 10/10 solutions

=======

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if (i + 2 < s.length() && s.charAt(i + 2) == '#') {
                sb.append((char) (Integer.parseInt(s.substring(i, i + 2)) + 'a' - 1));
                i += 2;
            } else {
                sb.append((char) (s.charAt(i) - '0' + 'a' - 1));
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if (i + 2 < s.length() && s.charAt(i + 2) == '#') {
                sb.append((char)('a' + Integer.parseInt(s.substring(i, i + 2)) - 1));
                i += 2;
            } else {
                sb.append((char)('a' + s.charAt(i) - '1'));
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if (i + 2 < s.length() && s.charAt(i + 2) == '#') {
                sb.append((char) ('a' + Integer.parseInt(s.substring(i, i + 2)) - 1));
                i += 2;
            } else {
                sb.append((char) ('a' + Integer.parseInt(s.substring(i, i + 1)) - 1));
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if (i + 2 < s.length() && s.charAt(i + 2) == '#') {
                sb.append((char) (Integer.parseInt(s.substring(i, i + 2)) + 'a' - 1));
                i += 2;
            } else {
                sb.append((char) (s.charAt(i) - '1' + 'a'));
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if (i < s.length() - 2 && s.charAt(i + 2) == '#') {
                sb.append((char) (Integer.parseInt(s.substring(i, i + 2)) - 1 + 'a'));
                i += 2;
            } else {
                sb.append((char) (Integer.parseInt(s.substring(i, i + 1)) - 1 + 'a'));
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if (i < s.length() - 2 && s.charAt(i + 2) == '#') {
                sb.append((char)('a' + Integer.parseInt(s.substring(i, i + 2)) - 1));
                i += 2;
            } else {
                sb.append((char)('a' + Integer.parseInt(s.substring(i, i + 1)) - 1));
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        int i = 0;
        while (i < s.length()) {
            if (i + 2 < s.length() && s.charAt(i + 2) == '#') {
                sb.append((char)('a' + Integer.parseInt(s.substring(i, i + 2)) - 1));
                i += 3;
            } else {
                sb.append((char)('a' + s.charAt(i) - '1'));
                i++;
            }
        }
        return sb.toString();

=======

        int n = s.length();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < n; i++) {
            if (i + 2 < n && s.charAt(i + 2) == '#') {
                sb.append((char)('a' + Integer.parseInt(s.substring(i, i + 2)) - 1));
                i += 2;
            } else {
                sb.append((char)('a' + Integer.parseInt(s.substring(i, i + 1)) - 1));
            }
        }
        return sb.toString();

=======

        StringBuilder sb = new StringBuilder();
        int i = s.length() - 1;
        while (i >= 0) {
            char c = s.charAt(i);
            if (c == '#') {
                int num = Integer.parseInt(s.substring(i - 2, i));
                sb.append((char)('a' + num - 1));
                i -= 3;
            } else {
                sb.append((char)('a' + c - '1'));
                i -= 1;
            }
        }
        return sb.reverse().toString();

=======

        char[] arr = s.toCharArray();
        int n = arr.length;
        StringBuilder sb = new StringBuilder();
        for(int i = n - 1; i >= 0; i--) {
            if(arr[i] == '#') {
                int num = (arr[i - 2] - '0') * 10 + (arr[i - 1] - '0');
                sb.append((char)('a' + num - 1));
                i -= 2;
            } else {
                sb.append((char)('a' + arr[i] - '1'));
            }
        }
        return sb.reverse().toString();

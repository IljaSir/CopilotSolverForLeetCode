Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int sqrt = (int) Math.sqrt(area);
        while (area % sqrt != 0) {
            sqrt--;
        }
        return new int[] {area / sqrt, sqrt};

=======

        int[] result = new int[2];
        int w = (int) Math.sqrt(area);
        while (area % w != 0) {
            w--;
        }
        result[0] = area / w;
        result[1] = w;
        return result;

=======

        int[] result = new int[2];
        int sqrt = (int) Math.sqrt(area);
        while (area % sqrt != 0) {
            sqrt--;
        }
        result[0] = area / sqrt;
        result[1] = sqrt;
        return result;

=======

        int l = (int)Math.sqrt(area);
        while (area % l != 0) {
            l--;
        }
        return new int[]{area / l, l};

=======

        int[] result = new int[2];
        int width = (int)Math.sqrt(area);
        while (area % width != 0) {
            width--;
        }
        result[0] = area / width;
        result[1] = width;
        return result;

=======

        int[] result = new int[2];
        int l = (int) Math.sqrt(area);
        while (area % l != 0) {
            l--;
        }
        result[0] = area / l;
        result[1] = l;
        return result;

=======

        int[] res = new int[2];
        int x = (int)Math.sqrt(area);
        while (area % x != 0) {
            x--;
        }
        res[0] = area / x;
        res[1] = x;
        return res;

=======

        int[] res = new int[2];
        int mid = (int) Math.sqrt(area);
        for(int i = mid; i > 0; i--) {
            if(area % i == 0) {
                res[0] = area / i;
                res[1] = i;
                break;
            }
        }
        return res;

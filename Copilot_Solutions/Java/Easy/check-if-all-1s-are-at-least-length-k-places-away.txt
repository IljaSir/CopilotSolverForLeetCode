Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int last = -1;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 1) {
                if (last != -1 && i - last - 1 < k) {
                    return false;
                }
                last = i;
            }
        }
        return true;

=======

        int prev = -1;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 1) {
                if (prev != -1 && i - prev - 1 < k) {
                    return false;
                }
                prev = i;
            }
        }
        return true;

=======

        int lastOne = -1;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 1) {
                if (lastOne != -1 && i - lastOne - 1 < k) {
                    return false;
                }
                lastOne = i;
            }
        }
        return true;

=======

        int count = k;
        for (int n : nums) {
            if (n == 1) {
                if (count < k) {
                    return false;
                }
                count = 0;
            } else {
                count++;
            }
        }
        return true;

=======

        int count = 0;
        boolean first = true;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 1) {
                if (first) {
                    first = false;
                    continue;
                }
                if (count < k) {
                    return false;
                }
                count = 0;
            } else {
                count++;
            }
        }
        return true;

=======

        int last = -1;
        for(int i = 0; i < nums.length; i++){
            if(nums[i] == 1){
                if(last != -1 && i - last < k + 1){
                    return false;
                }
                last = i;
            }
        }
        return true;

=======

        int prev = -1;
        for(int i = 0; i<nums.length; i++){
            if(nums[i] == 1){
                if(prev == -1){
                    prev = i;
                    continue;
                }
                if(i - prev - 1 < k){
                    return false;
                }
                prev = i;
            }
        }
        return true;

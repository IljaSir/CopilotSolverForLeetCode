Synthesizing 10/10 solutions (Duplicates hidden)

=======

        String[] words = sentence.split(" ");
        for (int i = 0; i < words.length - 1; i++) {
            if (words[i].charAt(words[i].length() - 1) != words[i + 1].charAt(0)) {
                return false;
            }
        }
        return words[words.length - 1].charAt(words[words.length - 1].length() - 1) == words[0].charAt(0);

=======

        String[] words = sentence.split(" ");
        return words[words.length - 1].charAt(0) == words[0].charAt(words[0].length() - 1);

=======

        String[] words = sentence.split(" ");
        if (words.length == 1) {
            return true;
        }
        for (int i = 0; i < words.length - 1; i++) {
            if (words[i].charAt(words[i].length() - 1) != words[i + 1].charAt(0)) {
                return false;
            }
        }
        return words[words.length - 1].charAt(words[words.length - 1].length() - 1) == words[0].charAt(0);

=======

        String[] words = sentence.split(" ");
        int n = words.length;
        for (int i = 0; i < n; i++) {
            if (words[i].charAt(words[i].length() - 1) != words[(i + 1) % n].charAt(0)) {
                return false;
            }
        }
        return true;

=======

        String[] words = sentence.split(" ");
        char last = words[words.length-1].charAt(words[words.length-1].length()-1);
        char first = words[0].charAt(0);
        return last == first;

=======

        String[] words = sentence.split(" ");
        int n = words.length;
        if (n == 1) {
            return words[0].charAt(0) == words[0].charAt(words[0].length() - 1);
        }
        for (int i = 0; i < n; i++) {
            if (words[i].charAt(words[i].length() - 1) != words[(i + 1) % n].charAt(0)) {
                return false;
            }
        }
        return true;

=======

        String[] words = sentence.split(" ");
        if (words.length == 1) {
            return true;
        }
        int i = 0;
        for (; i < words.length - 1; i++) {
            if (words[i].charAt(words[i].length() - 1) != words[i + 1].charAt(0)) {
                return false;
            }
        }
        return words[i].charAt(words[i].length() - 1) == words[0].charAt(0);

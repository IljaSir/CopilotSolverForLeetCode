Synthesizing 10/10 solutions

=======

        String s = Integer.toBinaryString(n);
        for (int i = 0; i < s.length() - 1; i++) {
            if (s.charAt(i) == s.charAt(i + 1)) {
                return false;
            }
        }
        return true;

=======

        int last = n & 1;
        n >>= 1;
        while (n > 0) {
            int cur = n & 1;
            if (cur == last) {
                return false;
            }
            last = cur;
            n >>= 1;
        }
        return true;

=======

        int last = n & 1;
        n >>= 1;
        while (n != 0) {
            if (last == (n & 1)) {
                return false;
            }
            last = n & 1;
            n >>= 1;
        }
        return true;

=======

        int lastBit = n & 1;
        n >>= 1;
        while (n != 0) {
            int bit = n & 1;
            if (bit == lastBit) {
                return false;
            }
            lastBit = bit;
            n >>= 1;
        }
        return true;

=======

        int prev = n & 1;
        n >>= 1;
        while (n > 0) {
            int cur = n & 1;
            if (prev == cur) {
                return false;
            }
            prev = cur;
            n >>= 1;
        }
        return true;

=======

        int prev = n & 1;
        n >>= 1;
        while (n != 0) {
            int curr = n & 1;
            if (curr == prev) {
                return false;
            }
            prev = curr;
            n >>= 1;
        }
        return true;

=======

        int bit = n & 1;
        n >>= 1;
        while (n > 0) {
            if (((n & 1) ^ bit) == 0) {
                return false;
            }
            bit = n & 1;
            n >>= 1;
        }
        return true;

=======

        int last = n & 1;
        while (n != 0) {
            n = n >>> 1;
            int current = n & 1;
            if (current == last) {
                return false;
            }
            last = current;
        }
        return true;

=======

        int r = n & 1;
        while (n != 0) {
            n >>>= 1;
            int t = n & 1;
            if (t == r) {
                return false;
            }
            r = t;
        }
        return true;

=======

        return Integer.toBinaryString(n).matches("10*1?");

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int n = nums.length;
        int count = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] > nums[(i + 1) % n]) {
                count++;
            }
        }
        return count <= 1;

=======

        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > nums[(i + 1) % nums.length]) {
                count++;
            }
            if (count > 1) {
                return false;
            }
        }
        return true;

=======

        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > nums[(i+1)%nums.length]) {
                count++;
            }
        }
        return count <= 1;

=======

        boolean isSorted = true;
        for (int i = 0; i < nums.length - 1; i++) {
            if (nums[i] > nums[i + 1]) {
                isSorted = false;
                break;
            }
        }
        if (isSorted) {
            return true;
        }
        int count = 0;
        for (int i = 0; i < nums.length - 1; i++) {
            if (nums[i] > nums[i + 1]) {
                count++;
            }
        }
        return count == 1;

=======

        boolean flag = true;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > nums[(i + 1) % nums.length]) {
                flag = false;
                break;
            }
        }
        return flag;

=======

        int count = 0;
        for(int i=0; i<nums.length; i++){
            if(nums[i] > nums[(i+1)%nums.length]){
                count++;
            }
        }
        if(count > 1){
            return false;
        }
        return true;

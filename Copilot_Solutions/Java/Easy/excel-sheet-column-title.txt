Synthesizing 10/10 solutions (Duplicates hidden)

=======

        StringBuilder sb = new StringBuilder();
        while (columnNumber > 0) {
            columnNumber--;
            sb.append((char)('A' + columnNumber % 26));
            columnNumber /= 26;
        }
        return sb.reverse().toString();

=======

        StringBuilder sb = new StringBuilder();
        while (columnNumber > 0) {
            columnNumber--;
            sb.append((char) (columnNumber % 26 + 'A'));
            columnNumber /= 26;
        }
        return sb.reverse().toString();

=======

        StringBuilder result = new StringBuilder();
        while (columnNumber > 0) {
            columnNumber--;
            result.append((char)('A' + columnNumber % 26));
            columnNumber /= 26;
        }
        return result.reverse().toString();

=======

        String result = "";
        while (columnNumber > 0) {
            columnNumber--;
            result = (char)('A' + columnNumber % 26) + result;
            columnNumber /= 26;
        }
        return result;

=======

        StringBuilder sb = new StringBuilder();
        while (columnNumber > 0) {
            char ch = (char) ((columnNumber - 1) % 26 + 'A');
            sb.append(ch);
            columnNumber = (columnNumber - 1) / 26;
        }
        return sb.reverse().toString();

=======

        StringBuilder sb = new StringBuilder();
        while (columnNumber > 0) {
            int rem = columnNumber % 26;
            if (rem == 0) {
                sb.append('Z');
                columnNumber = columnNumber / 26 - 1;
            } else {
                sb.append((char) ('A' + rem - 1));
                columnNumber = columnNumber / 26;
            }
        }
        return sb.reverse().toString();

=======

        StringBuilder sb = new StringBuilder();
        while (columnNumber > 0) {
            int remainder = columnNumber % 26;
            if (remainder == 0) {
                sb.append('Z');
                columnNumber = columnNumber / 26 - 1;
            } else {
                sb.append((char)('A' + remainder - 1));
                columnNumber = columnNumber / 26;
            }
        }
        return sb.reverse().toString();

=======

        StringBuilder sb = new StringBuilder();
        while (columnNumber > 0) {
            int rem = (columnNumber - 1) % 26;
            sb.append((char)('A' + rem));
            columnNumber = (columnNumber - 1) / 26;
        }
        return sb.reverse().toString();

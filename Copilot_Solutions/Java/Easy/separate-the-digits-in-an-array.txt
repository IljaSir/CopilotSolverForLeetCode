Synthesizing 10/10 solutions

=======

        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            int temp = nums[i];
            while (temp > 0) {
                count++;
                temp /= 10;
            }
        }
        int[] result = new int[count];
        int j = 0;
        for (int i = 0; i < nums.length; i++) {
            int temp = nums[i];
            while (temp > 0) {
                result[j++] = temp % 10;
                temp /= 10;
            }
        }
        return result;

=======

        int[] result = new int[nums.length * 5];
        int index = 0;
        for (int num : nums) {
            while (num > 0) {
                result[index++] = num % 10;
                num /= 10;
            }
        }
        return result;
    }
}

=======

        int[] result = new int[nums.length * 5];
        int index = 0;
        for (int i = 0; i < nums.length; i++) {
            int num = nums[i];
            while (num > 0) {
                result[index++] = num % 10;
                num /= 10;
            }
        }
        return result;

=======

        int n = nums.length;
        int[] ans = new int[n * 5];
        int index = 0;
        for (int i = 0; i < n; i++) {
            int num = nums[i];
            while (num > 0) {
                ans[index++] = num % 10;
                num /= 10;
            }
        }
        return ans;

=======

        int[] result = new int[nums.length * 5];
        int index = 0;
        for (int i = 0; i < nums.length; i++) {
            int[] digits = getDigits(nums[i]);
            for (int j = 0; j < digits.length; j++) {
                result[index] = digits[j];
                index++;
            }
        }
        return result;
    }
    
    public int[] getDigits(int num) {
        int[] result = new int[5];
        int index = 0;
        while (num > 0) {
            result[index] = num % 10;
            num /= 10;
            index++;
        }
        return Arrays.copyOfRange(result, 0, index);

=======

        int[] result = new int[0];
        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            int number = nums[i];
            while (number > 0) {
                result = Arrays.copyOf(result, result.length + 1);
                result[count] = number % 10;
                number /= 10;
                count++;
            }
        }
        return result;

=======

        int[] result = new int[0];
        for (int num : nums) {
            int count = 0;
            int temp = num;
            while (temp > 0) {
                count++;
                temp /= 10;
            }
            int[] tempResult = new int[result.length + count];
            for (int i = 0; i < result.length; i++) {
                tempResult[i] = result[i];
            }
            for (int i = 0; i < count; i++) {
                tempResult[result.length + i] = num % 10;
                num /= 10;
            }
            result = tempResult;
        }
        return result;

=======

        int[] result = new int[0];
        for(int i = 0; i < nums.length; i++) {
            int tmp = nums[i];
            int len = 0;
            while(tmp > 0) {
                tmp /= 10;
                len++;
            }
            int[] tmpResult = new int[result.length + len];
            for(int j = 0; j < result.length; j++) {
                tmpResult[j] = result[j];
            }
            tmp = nums[i];
            for(int j = tmpResult.length - 1; j >= tmpResult.length - len; j--) {
                tmpResult[j] = tmp % 10;
                tmp /= 10;
            }
            result = tmpResult;
        }
        return result;

=======

        int[] arr = new int[0];
        for(int i=0; i<nums.length; i++){
            String str = Integer.toString(nums[i]);
            int[] temp = new int[str.length()];
            for(int j=0; j<str.length(); j++){
                temp[j] = Integer.parseInt(String.valueOf(str.charAt(j)));
            }
            int[] temp2 = new int[arr.length+temp.length];
            for(int j=0; j<arr.length; j++){
                temp2[j] = arr[j];
            }
            for(int j=0; j<temp.length; j++){
                temp2[j+arr.length] = temp[j];
            }
            arr = temp2;
        }
        return arr;

=======

        int[] result = new int[0];
        for (int i = 0; i < nums.length; i++) {
            int digit = (int) (Math.log10(nums[i])) + 1;
            int[] temp = new int[result.length + digit];
            for (int j = 0; j < result.length; j++) {
                temp[j] = result[j];
            }
            for (int j = temp.length - 1; j >= temp.length - digit; j--) {
                temp[j] = nums[i] % 10;
                nums[i] = nums[i] / 10;
            }
            result = temp;
        }
        return result;

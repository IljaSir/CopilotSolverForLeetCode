Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if (n == 0) return "0";
        String s = "";
        int count = 0;
        while (n > 0) {
            if (count == 3) {
                s = "." + s;
                count = 0;
            }
            s = (n % 10) + s;
            n /= 10;
            count++;
        }
        return s;

=======

        String s = Integer.toString(n);
        String ans = "";
        int count = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            ans = s.charAt(i) + ans;
            count++;
            if (count == 3 && i != 0) {
                ans = "." + ans;
                count = 0;
            }
        }
        return ans;

=======

        String num = String.valueOf(n);
        int count = 0;
        StringBuilder sb = new StringBuilder();
        for (int i = num.length() - 1; i >= 0; i--) {
            sb.append(num.charAt(i));
            count++;
            if (count == 3 && i != 0) {
                sb.append(".");
                count = 0;
            }
        }
        return sb.reverse().toString();

=======

        String s = String.valueOf(n);
        int l = s.length();
        if (l <= 3) {
            return s;
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < l; i++) {
            if (i > 0 && (l - i) % 3 == 0) {
                sb.append(".");
            }
            sb.append(s.charAt(i));
        }
        return sb.toString();

=======

        if (n == 0) return "0";
        int count = 0;
        String str = "";
        while (n > 0) {
            if (count == 3) {
                str = "." + str;
                count = 0;
            }
            str = (n % 10) + str;
            n /= 10;
            count++;
        }
        return str;

=======

        if (n == 0) {
            return "0";
        }
        String num = String.valueOf(n);
        int len = num.length();
        if (len <= 3) {
            return num;
        }
        StringBuilder sb = new StringBuilder();
        int i = 0;
        while (i < len) {
            if (i % 3 == 0 && i != 0) {
                sb.append(".");
            }
            sb.append(num.charAt(i));
            i++;
        }
        return sb.toString();

=======

        if(n == 0) return "0";
        String s = "";
        int cnt = 0;
        while(n > 0) {
            if(cnt == 3) {
                s = "." + s;
                cnt = 0;
            }
            s = String.valueOf(n % 10) + s;
            n /= 10;
            cnt++;
        }
        return s;

=======

        String s = Integer.toString(n);
        StringBuilder sb = new StringBuilder();
        int i = s.length();
        while (i > 3) {
            sb.insert(0, s.substring(i - 3, i));
            sb.insert(0, ".");
            i -= 3;
        }
        sb.insert(0, s.substring(0, i));
        return sb.toString();

=======

        String s = Integer.toString(n);
        int len = s.length();
        String ans = "";
        int i = 0;
        while (i < len) {
            if (i > 0 && (len - i) % 3 == 0) {
                ans += ".";
            }
            ans += s.charAt(i);
            i++;
        }
        return ans;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int max = 0;
        for (String sentence : sentences) {
            String[] words = sentence.split(" ");
            max = Math.max(max, words.length);
        }
        return max;

=======

        int max = 0;
        for (String sentence : sentences) {
            int count = 0;
            for (int i = 0; i < sentence.length(); i++) {
                if (sentence.charAt(i) == ' ') {
                    count++;
                }
            }
            max = Math.max(max, count + 1);
        }
        return max;

=======

        int max = 0;
        for (String sentence : sentences) {
            int count = 0;
            for (int i = 0; i < sentence.length(); i++) {
                if (sentence.charAt(i) == ' ') {
                    count++;
                }
            }
            count++;
            max = Math.max(max, count);
        }
        return max;

=======

        int max = 0;
        for (String sentence : sentences) {
            int count = 0;
            for (int i = 0; i < sentence.length(); i++) {
                if (sentence.charAt(i) == ' ') {
                    count++;
                }
            }
            count++;
            max = Math.max(max, count);
        }
        return max;
    }
}

=======

        if (sentences == null || sentences.length == 0) {
            return 0;
        }
        int max = 0;
        for (String sentence : sentences) {
            max = Math.max(max, sentence.split(" ").length);
        }
        return max;

=======

        int max = 0;
        for (String sentence : sentences) {
            int count = 0;
            for (String word : sentence.split(" ")) {
                count++;
            }
            max = Math.max(max, count);
        }
        return max;
    }
}

=======

        int maxCount = 0;
        for(String sentence : sentences) {
            String[] words = sentence.split(" ");
            maxCount = Math.max(maxCount, words.length);
        }
        return maxCount;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int sum = 0;
        int sign = 1;
        while (n > 0) {
            sum += sign * (n % 10);
            sign *= -1;
            n /= 10;
        }
        return sum;

=======

        int sum = 0;
        int sign = 1;
        while (n > 0) {
            sum += sign * (n % 10);
            n /= 10;
            sign *= -1;
        }
        return sum;

=======

        int sum = 0;
        boolean isPositive = true;
        while (n > 0) {
            int digit = n % 10;
            if (isPositive) {
                sum += digit;
            } else {
                sum -= digit;
            }
            n /= 10;
            isPositive = !isPositive;
        }
        return sum;

=======

        int res = 0;
        boolean isPositive = true;
        while (n > 0) {
            if (isPositive) {
                res += n % 10;
            } else {
                res -= n % 10;
            }
            n /= 10;
            isPositive = !isPositive;
        }
        return res;

=======

        int sum = 0;
        boolean pos = true;
        while (n > 0) {
            int digit = n % 10;
            if (pos) {
                sum += digit;
            } else {
                sum -= digit;
            }
            pos = !pos;
            n /= 10;
        }
        return sum;

=======

        int sum = 0;
        int sign = 1;
        while (n > 0) {
            sum += sign * (n % 10);
            n = n / 10;
            sign = -sign;
        }
        return sum;

=======

        String num = String.valueOf(n);
        int sum = 0;
        for (int i = 0; i < num.length(); i++) {
            int digit = num.charAt(i) - '0';
            if (i % 2 == 0) {
                sum += digit;
            } else {
                sum -= digit;
            }
        }
        return sum;

=======

        int result = 0;
        boolean positive = true;
        while (n > 0) {
            int digit = n % 10;
            n = n / 10;
            if (positive) {
                result += digit;
                positive = false;
            } else {
                result -= digit;
                positive = true;
            }
        }
        return result;

=======

        int result = 0;
        String str = String.valueOf(n);
        for (int i = 0; i < str.length(); i++) {
            int num = Character.getNumericValue(str.charAt(i));
            if (i % 2 == 0) {
                result += num;
            } else {
                result -= num;
            }
        }
        return result;

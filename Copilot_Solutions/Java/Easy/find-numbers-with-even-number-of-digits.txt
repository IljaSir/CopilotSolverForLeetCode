Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int count = 0;
        for (int num : nums) {
            if (String.valueOf(num).length() % 2 == 0) {
                count++;
            }
        }
        return count;

=======

        int result = 0;
        for (int i = 0; i < nums.length; i++) {
            int count = 0;
            while (nums[i] > 0) {
                count++;
                nums[i] /= 10;
            }
            if (count % 2 == 0) {
                result++;
            }
        }
        return result;

=======

        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] >= 10 && nums[i] < 100) {
                count++;
            } else if (nums[i] >= 1000 && nums[i] < 10000) {
                count++;
            } else if (nums[i] >= 100000 && nums[i] < 1000000) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            int digits = 0;
            while (nums[i] > 0) {
                nums[i] /= 10;
                digits++;
            }
            if (digits % 2 == 0) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int num: nums) {
            if (num >= 10 && num <= 99) {
                count++;
            } else if (num >= 1000 && num <= 9999) {
                count++;
            } else if (num >= 100000 && num <= 999999) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int i=0; i<nums.length; i++) {
            if (nums[i] >= 10 && nums[i] <= 99) {
                count++;
            } else if (nums[i] >= 1000 && nums[i] <= 9999) {
                count++;
            } else if (nums[i] >= 100000 && nums[i] <= 999999) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] < 10) {
                continue;
            }
            int n = nums[i];
            int digits = 0;
            while (n != 0) {
                digits++;
                n /= 10;
            }
            if (digits % 2 == 0) {
                count++;
            }
        }
        return count;

=======

        int evenNumbers = 0;
        for (int i = 0; i < nums.length; i++) {
            int num = nums[i];
            int count = 0;
            while (num > 0) {
                num = num / 10;
                count++;
            }
            if (count % 2 == 0) {
                evenNumbers++;
            }
        }
        return evenNumbers;

=======

        int count = 0;
        for(int i = 0; i < nums.length; i++){
            int number = nums[i];
            int digitCount = 0;
            while(number > 0){
                number = number / 10;
                digitCount++;
            }
            if(digitCount % 2 == 0){
                count++;
            }
        }
        return count;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int[] result = new int[nums.length];
        int evenIndex = 0;
        int oddIndex = 1;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] % 2 == 0) {
                result[evenIndex] = nums[i];
                evenIndex += 2;
            } else {
                result[oddIndex] = nums[i];
                oddIndex += 2;
            }
        }
        return result;

=======

        int[] result = new int[nums.length];
        int evenIndex = 0;
        int oddIndex = 1;
        for (int num : nums) {
            if (num % 2 == 0) {
                result[evenIndex] = num;
                evenIndex += 2;
            } else {
                result[oddIndex] = num;
                oddIndex += 2;
            }
        }
        return result;

=======

        int[] result = new int[nums.length];
        int even = 0;
        int odd = 1;
        for (int num : nums) {
            if (num % 2 == 0) {
                result[even] = num;
                even += 2;
            } else {
                result[odd] = num;
                odd += 2;
            }
        }
        return result;

=======

        int[] result = new int[nums.length];
        int odd = 1;
        int even = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] % 2 == 0) {
                result[even] = nums[i];
                even += 2;
            } else {
                result[odd] = nums[i];
                odd += 2;
            }
        }
        return result;

=======

        int[] result = new int[nums.length];
        int i = 0;
        int j = 1;
        for (int num : nums) {
            if (num % 2 == 0) {
                result[i] = num;
                i += 2;
            } else {
                result[j] = num;
                j += 2;
            }
        }
        return result;

=======

        int[] res = new int[nums.length];
        int even = 0;
        int odd = 1;
        for (int num : nums) {
            if (num % 2 == 0) {
                res[even] = num;
                even += 2;
            } else {
                res[odd] = num;
                odd += 2;
            }
        }
        return res;

=======

        int[] result = new int[nums.length];
        int odd = 1;
        int even = 0;
        for (int num : nums) {
            if (num % 2 == 0) {
                result[even] = num;
                even += 2;
            } else {
                result[odd] = num;
                odd += 2;
            }
        }
        return result;

=======

        int[] result = new int[nums.length];
        int even = 0, odd = 1;
        for (int num : nums) {
            if (num % 2 == 0) {
                result[even] = num;
                even += 2;
            } else {
                result[odd] = num;
                odd += 2;
            }
        }
        return result;

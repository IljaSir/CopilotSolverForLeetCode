Synthesizing 10/10 solutions

=======

        int[] map = new int[26];
        for (int i = 0; i < magazine.length(); i++) {
            map[magazine.charAt(i) - 'a']++;
        }
        for (int i = 0; i < ransomNote.length(); i++) {
            if (map[ransomNote.charAt(i) - 'a'] == 0) {
                return false;
            }
            map[ransomNote.charAt(i) - 'a']--;
        }
        return true;

=======

        int[] count = new int[26];
        for (char c : magazine.toCharArray()) {
            count[c - 'a']++;
        }
        for (char c : ransomNote.toCharArray()) {
            if (count[c - 'a'] == 0) {
                return false;
            }
            count[c - 'a']--;
        }
        return true;

=======

        int[] count = new int[26];
        for (char c : magazine.toCharArray()) {
            count[c - 'a']++;
        }
        for (char c : ransomNote.toCharArray()) {
            if (count[c - 'a'] <= 0) {
                return false;
            }
            count[c - 'a']--;
        }
        return true;

=======

        int[] count = new int[26];
        for (char c : ransomNote.toCharArray()) {
            count[c - 'a']++;
        }
        for (char c : magazine.toCharArray()) {
            count[c - 'a']--;
        }
        for (int i = 0; i < 26; i++) {
            if (count[i] > 0) {
                return false;
            }
        }
        return true;

=======

        int[] map = new int[26];
        for (char c : magazine.toCharArray()) {
            map[c - 'a']++;
        }
        for (char c : ransomNote.toCharArray()) {
            if (map[c - 'a'] == 0) return false;
            map[c - 'a']--;
        }
        return true;

=======

        int[] chars = new int[26];
        for (char c : magazine.toCharArray()) {
            chars[c - 'a']++;
        }
        for (char c : ransomNote.toCharArray()) {
            if (chars[c - 'a'] == 0) {
                return false;
            }
            chars[c - 'a']--;
        }
        return true;

=======

        int[] chars = new int[26];
        for (char c : magazine.toCharArray()) {
            chars[c - 'a']++;
        }
        for (char c : ransomNote.toCharArray()) {
            if (chars[c - 'a'] == 0) {
                return false;
            } else {
                chars[c - 'a']--;
            }
        }
        return true;

=======

        int[] letters = new int[26];
        for (char c : ransomNote.toCharArray()) {
            letters[c - 'a']++;
        }
        for (char c : magazine.toCharArray()) {
            letters[c - 'a']--;
        }
        for (int i : letters) {
            if (i > 0) {
                return false;
            }
        }
        return true;

=======

        int[] count = new int[26];
        for(int i = 0; i < magazine.length(); i++) {
            count[magazine.charAt(i) - 'a']++;
        }
        
        for(int i = 0; i < ransomNote.length(); i++) {
            if(--count[ransomNote.charAt(i) - 'a'] < 0) {
                return false;
            }
        }
        return true;

=======

        int[] ransomLetters = new int[26];
        int[] magazineLetters = new int[26];
        for (char c : ransomNote.toCharArray()) {
            ransomLetters[c - 'a']++;
        }
        for (char c : magazine.toCharArray()) {
            magazineLetters[c - 'a']++;
        }
        for (int i = 0; i < 26; i++) {
            if (ransomLetters[i] > magazineLetters[i]) {
                return false;
            }
        }
        return true;

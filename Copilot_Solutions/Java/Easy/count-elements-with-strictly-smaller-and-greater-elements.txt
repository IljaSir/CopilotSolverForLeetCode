Synthesizing 10/10 solutions

=======

        Arrays.sort(nums);
        int count = 0;
        for (int i = 1; i < nums.length - 1; i++) {
            if (nums[i] > nums[i - 1] && nums[i] < nums[i + 1]) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            boolean greater = false;
            boolean smaller = false;
            for (int j = 0; j < nums.length; j++) {
                if (nums[j] > nums[i]) {
                    greater = true;
                } else if (nums[j] < nums[i]) {
                    smaller = true;
                }
            }
            if (greater && smaller) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            int greater = 0;
            int smaller = 0;
            for (int j = 0; j < nums.length; j++) {
                if (nums[i] > nums[j]) {
                    smaller++;
                }
                if (nums[i] < nums[j]) {
                    greater++;
                }
            }
            if (greater > 0 && smaller > 0) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            boolean isSmaller = false;
            boolean isGreater = false;
            for (int j = 0; j < nums.length; j++) {
                if (i == j) {
                    continue;
                }
                if (nums[i] < nums[j]) {
                    isGreater = true;
                }
                if (nums[i] > nums[j]) {
                    isSmaller = true;
                }
                if (isGreater && isSmaller) {
                    count++;
                    break;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            boolean isSmaller = false;
            boolean isGreater = false;
            for (int j = 0; j < nums.length; j++) {
                if (i == j) {
                    continue;
                }
                if (nums[i] > nums[j]) {
                    isSmaller = true;
                } else if (nums[i] < nums[j]) {
                    isGreater = true;
                }
            }
            if (isSmaller && isGreater) {
                count++;
            }
        }
        return count;

=======

        int count=0;
        Arrays.sort(nums);
        for(int i=1;i<nums.length-1;i++){
            if(nums[i]>nums[i-1] && nums[i]<nums[i+1])
                count++;
        }
        return count;

=======

        int n = nums.length;
        Arrays.sort(nums);
        int count = 0;
        for (int i = 1; i < n - 1; i++) {
            if (nums[i] > nums[0] && nums[i] < nums[n - 1]) {
                count++;
            }
        }
        return count;

=======

        int result = 0;
        int[] count = new int[200001];
        for (int num : nums) {
            count[num + 100000]++;
        }
        for (int i = 1; i < count.length - 1; i++) {
            if (count[i] > 0 && count[i - 1] > 0 && count[i + 1] > 0) {
                result++;
            }
        }
        return result;

=======

        int[] count = new int[200_001];
        for (int n : nums) {
            count[n + 100_000]++;
        }
        int res = 0;
        for (int i = 1; i < count.length - 1; i++) {
            if (count[i - 1] > 0 && count[i + 1] > 0) {
                res += count[i];
            }
        }
        return res;

=======

        int n = nums.length;
        int[] count = new int[200001];
        for (int num : nums) {
            count[num + 100000]++;
        }
        int res = 0;
        for (int i = 1; i < count.length - 1; i++) {
            if (count[i] > 0 && count[i - 1] > 0 && count[i + 1] > 0) {
                res += count[i];
            }
        }
        return res;

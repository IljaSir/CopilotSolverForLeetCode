Synthesizing 10/10 solutions

=======

        char[] chars = s.toCharArray();
        int i = 0;
        int j = chars.length - 1;
        while (i < j) {
            if (!Character.isLetter(chars[i])) {
                i++;
            } else if (!Character.isLetter(chars[j])) {
                j--;
            } else {
                char temp = chars[i];
                chars[i] = chars[j];
                chars[j] = temp;
                i++;
                j--;
            }
        }
        return new String(chars);

=======

        char[] arr = s.toCharArray();
        int i = 0;
        int j = arr.length - 1;
        while (i < j) {
            while (i < j && !Character.isLetter(arr[i])) {
                i++;
            }
            while (i < j && !Character.isLetter(arr[j])) {
                j--;
            }
            char temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;
            j--;
        }
        return new String(arr);

=======

        char[] arr = s.toCharArray();
        int i = 0;
        int j = arr.length - 1;
        while (i < j) {
            if (!Character.isLetter(arr[i])) {
                i++;
            } else if (!Character.isLetter(arr[j])) {
                j--;
            } else {
                char temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
                i++;
                j--;
            }
        }
        return new String(arr);

=======

        char[] arr = s.toCharArray();
        int i = 0, j = arr.length - 1;
        while (i < j) {
            if (!Character.isLetter(arr[i])) {
                i++;
            } else if (!Character.isLetter(arr[j])) {
                j--;
            } else {
                char temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
                i++;
                j--;
            }
        }
        return new String(arr);

=======

        int i = 0;
        int j = s.length() - 1;
        char[] chars = s.toCharArray();
        while (i < j) {
            if (!Character.isLetter(chars[i])) {
                i++;
                continue;
            }
            if (!Character.isLetter(chars[j])) {
                j--;
                continue;
            }
            char tmp = chars[i];
            chars[i] = chars[j];
            chars[j] = tmp;
            i++;
            j--;
        }
        return new String(chars);

=======

        char[] ch = s.toCharArray();
        int i = 0;
        int j = ch.length - 1;
        while (i < j) {
            if (!Character.isLetter(ch[i])) {
                i++;
            } else if (!Character.isLetter(ch[j])) {
                j--;
            } else {
                char temp = ch[i];
                ch[i++] = ch[j];
                ch[j--] = temp;
            }
        }
        return new String(ch);

=======

        char[] chars = s.toCharArray();
        int i = 0, j = chars.length - 1;
        while (i < j) {
            while (i < j && !isLetter(chars[i])) {
                i++;
            }
            while (i < j && !isLetter(chars[j])) {
                j--;
            }
            if (i < j) {
                char temp = chars[i];
                chars[i] = chars[j];
                chars[j] = temp;
                i++;
                j--;
            }
        }
        return new String(chars);

=======

        char[] sArr = s.toCharArray();
        int i = 0;
        int j = sArr.length - 1;
        while (i < j) {
            while (i < j && !Character.isLetter(sArr[i])) {
                i++;
            }
            while (i < j && !Character.isLetter(sArr[j])) {
                j--;
            }
            char tmp = sArr[i];
            sArr[i] = sArr[j];
            sArr[j] = tmp;
            i++;
            j--;
        }
        return String.valueOf(sArr);

=======

        int i = 0, j = s.length() - 1;
        char[] sArray = s.toCharArray();
        while (i < j) {
            if (!Character.isLetter(sArray[i])) {
                i++;
            } else if (!Character.isLetter(sArray[j])) {
                j--;
            } else {
                char temp = sArray[i];
                sArray[i] = sArray[j];
                sArray[j] = temp;
                i++;
                j--;
            }
        }
        return new String(sArray);

=======

        char[] arr = s.toCharArray();
        int i=0, j=arr.length-1;
        while(i<j){
            while(i<j && !Character.isLetter(arr[i])) i++;
            while(i<j && !Character.isLetter(arr[j])) j--;
            char temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;
            j--;
        }
        return new String(arr);

Synthesizing 10/10 solutions

=======

        String[] days = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        int[] months = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        int daysFrom1971 = 0;
        for (int i = 1971; i < year; i++) {
            if (isLeapYear(i)) {
                daysFrom1971 += 366;
            } else {
                daysFrom1971 += 365;
            }
        }
        for (int i = 1; i < month; i++) {
            if (i == 2 && isLeapYear(year)) {
                daysFrom1971 += 29;
            } else {
                daysFrom1971 += months[i];
            }
        }
        daysFrom1971 += day;
        return days[(daysFrom1971 - 1) % 7];
    }
    private boolean isLeapYear(int year) {
        if (year % 4 == 0 && year % 100 != 0) {
            return true;
        }
        if (year % 400 == 0) {
            return true;
        }
        return false;

=======

        String[] days = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        int[] months = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        int dayOfWeek = 4;
        for (int y = 1971; y < year; y++) {
            dayOfWeek += 365;
            if ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0) {
                dayOfWeek++;
            }
        }
        for (int m = 1; m < month; m++) {
            dayOfWeek += months[m - 1];
            if (m == 2 && ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)) {
                dayOfWeek++;
            }
        }
        dayOfWeek += day - 1;
        return days[dayOfWeek % 7];

=======

        String[] days = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        int[] months = {31,28,31,30,31,30,31,31,30,31,30,31};
        int total = 0;
        int i;
        for(i = 1971;i < year;i++){
            if((i % 4 == 0 && i % 100 != 0) || i % 400 == 0)
                total += 366;
            else
                total += 365;
        }
        for(i = 0;i < month - 1;i++){
            if(i == 1 && ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0))
                total += 29;
            else
                total += months[i];
        }
        total += day - 1;
        return days[total % 7];

=======

        String[] days = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        int[] monthDays = {31,28,31,30,31,30,31,31,30,31,30,31};
        int totalDays = 0;
        for(int i=1971; i<year; i++){
            totalDays += 365;
            if(i%4==0 && i%100 != 0 || i%400==0){
                totalDays++;
            }
        }
        for(int i=0; i<month-1; i++){
            totalDays += monthDays[i];
            if(i==1 && year%4==0 && year%100 != 0 || year%400==0){
                totalDays++;
            }
        }
        totalDays += day;
        return days[totalDays%7];

=======

        String[] week = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        int[] days = {31,28,31,30,31,30,31,31,30,31,30,31};
        int sum = 0;
        for(int i = 1971; i < year; i++){
            if(isLeap(i)){
                sum += 366;
            }else{
                sum += 365;
            }
        }
        for(int i = 0; i < month - 1; i++){
            if(isLeap(year) && i == 1){
                sum += 29;
            }else{
                sum += days[i];
            }
        }
        sum += day;
        return week[sum % 7];

=======

        String[] week = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        int[] days = {31,28,31,30,31,30,31,31,30,31,30,31};
        int sum = 0;
        for(int i = 1971; i < year; i++){
            if(i % 4 == 0 && i % 100 != 0 || i % 400 == 0){
                sum += 366;
            }else{
                sum += 365;
            }
        }
        for(int i = 0; i < month - 1; i++){
            if(i == 1 && (year % 4 == 0 && year % 100 != 0 || year % 400 == 0)){
                sum += 29;
            }else{
                sum += days[i];
            }
        }
        sum += day;
        return week[sum % 7];

=======

        String[] week = new String[]{"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        Calendar c = Calendar.getInstance();
        c.set(year, month - 1, day);
        return week[c.get(Calendar.DAY_OF_WEEK) - 1];

=======

        int[] daysOfMonth = {31,28,31,30,31,30,31,31,30,31,30,31};
        String[] days = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        int daysFrom1971 = 0;
        for(int i = 1971; i < year; i++){
            if(isLeapYear(i)){
                daysFrom1971 += 366;
            }else{
                daysFrom1971 += 365;
            }
        }
        for(int i = 0; i < month - 1; i++){
            if(isLeapYear(year) && i == 1){
                daysFrom1971 += 1;
            }
            daysFrom1971 += daysOfMonth[i];
        }
        daysFrom1971 += day - 1;
        return days[daysFrom1971 % 7];
    }
    public boolean isLeapYear(int year){
        if(year % 4 == 0){
            if(year % 100 == 0){
                if(year % 400 == 0){
                    return true;
                }else{
                    return false;
                }
            }else{
                return true;
            }
        }else{
            return false;
        }

=======

        String[] weekDays = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        Calendar cal = Calendar.getInstance();
        cal.set(year, month - 1, day);
        int weekDay = cal.get(Calendar.DAY_OF_WEEK) - 1;
        if(weekDay < 0){
            weekDay = 0;
        }
        return weekDays[weekDay];

=======

        int[] m = {0,31,28,31,30,31,30,31,31,30,31,30,31};
        String[] w = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        int days = 0;
        for(int i = 1971; i < year; i++) {
            days += isLeap(i) ? 366 : 365;
        }
        for(int i = 1; i < month; i++) {
            days += m[i];
            if(i == 2 && isLeap(year)) {
                days++;
            }
        }
        days += day;
        return w[days % 7];

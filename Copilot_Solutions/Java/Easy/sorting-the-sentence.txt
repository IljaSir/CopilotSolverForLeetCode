Synthesizing 10/10 solutions (Duplicates hidden)

=======

        String[] words = s.split(" ");
        String[] sorted = new String[words.length];
        for (String word : words) {
            int index = word.charAt(word.length() - 1) - '1';
            sorted[index] = word.substring(0, word.length() - 1);
        }
        return String.join(" ", sorted);

=======

        String[] words = s.split(" ");
        String[] sortedWords = new String[words.length];
        for (int i = 0; i < words.length; i++) {
            String word = words[i];
            int index = word.charAt(word.length() - 1) - '0';
            sortedWords[index - 1] = word.substring(0, word.length() - 1);
        }
        return String.join(" ", sortedWords);

=======

        String[] words = s.split(" ");
        String[] sortedWords = new String[words.length];
        for (String word : words) {
            sortedWords[Character.getNumericValue(word.charAt(word.length() - 1)) - 1] = word.substring(0, word.length() - 1);
        }
        return String.join(" ", sortedWords);

=======

        String[] arr = s.split(" ");
        String[] res = new String[arr.length];
        for (String str : arr) {
            res[str.charAt(str.length() - 1) - '1'] = str.substring(0, str.length() - 1);
        }
        return String.join(" ", res);

=======

        String[] words = s.split(" ");
        String[] sorted = new String[words.length];
        for (String word : words) {
            int index = word.charAt(word.length() - 1) - '0';
            sorted[index - 1] = word.substring(0, word.length() - 1);
        }
        return String.join(" ", sorted);

=======

        String[] arr = s.split(" ");
        String[] res = new String[arr.length];
        for (int i = 0; i < arr.length; i++) {
            int index = arr[i].charAt(arr[i].length() - 1) - '1';
            res[index] = arr[i].substring(0, arr[i].length() - 1);
        }
        return String.join(" ", res);

=======

        String[] words = s.split(" ");
        String[] result = new String[words.length];
        for (String word : words) {
            int index = Integer.parseInt(word.substring(word.length() - 1));
            result[index - 1] = word.substring(0, word.length() - 1);
        }
        return String.join(" ", result);

=======

        String[] words = s.split(" ");
        String[] sorted = new String[words.length];
        for (String word : words) {
            int index = Integer.parseInt(word.substring(word.length() - 1));
            sorted[index - 1] = word.substring(0, word.length() - 1);
        }
        return String.join(" ", sorted);

=======

        String[] words = s.split(" ");
        String[] sortedWords = new String[words.length];
        for (String word : words) {
            int i = word.charAt(word.length() - 1) - '1';
            sortedWords[i] = word.substring(0, word.length() - 1);
        }
        return String.join(" ", sortedWords);

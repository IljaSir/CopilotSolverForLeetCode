Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int count = 0;
        int temp = num;
        while (temp > 0) {
            int digit = temp % 10;
            if (digit != 0 && num % digit == 0) {
                count++;
            }
            temp /= 10;
        }
        return count;
    }
}

=======

        int count = 0;
        int temp = num;
        while (temp > 0) {
            int digit = temp % 10;
            if (digit != 0 && num % digit == 0) {
                count++;
            }
            temp /= 10;
        }
        return count;

=======

        int count = 0;
        int n = num;
        while (n > 0) {
            int digit = n % 10;
            if (digit != 0 && num % digit == 0) {
                count++;
            }
            n /= 10;
        }
        return count;

=======

        int count = 0;
        int n = num;
        while (n > 0) {
            int d = n % 10;
            if (d != 0 && num % d == 0) {
                count++;
            }
            n /= 10;
        }
        return count;

=======

        int result = 0;
        int n = num;
        while (n > 0) {
            int digit = n % 10;
            if (digit != 0 && num % digit == 0) {
                result++;
            }
            n /= 10;
        }
        return result;

=======

        int res = 0;
        int temp = num;
        while (temp > 0) {
            int digit = temp % 10;
            if (digit != 0 && num % digit == 0) {
                res++;
            }
            temp /= 10;
        }
        return res;

=======

        int count = 0;
        int temp = num;
        while(temp > 0){
            int rem = temp % 10;
            if(rem != 0 && num % rem == 0){
                count++;
            }
            temp /= 10;
        }
        return count;

=======

        int count = 0;
        String number = Integer.toString(num);
        for (char c : number.toCharArray()) {
            int digit = Character.getNumericValue(c);
            if (digit != 0 && num % digit == 0) {
                count++;
            }
        }
        return count;

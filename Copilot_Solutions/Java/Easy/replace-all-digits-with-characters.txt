Synthesizing 10/10 solutions (Duplicates hidden)

=======

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if (i % 2 == 0) {
                sb.append(s.charAt(i));
            } else {
                sb.append((char) (s.charAt(i - 1) + s.charAt(i) - '0'));
            }
        }
        return sb.toString();

=======

        char[] chars = s.toCharArray();
        for (int i = 1; i < chars.length; i += 2) {
            chars[i] = (char) (chars[i - 1] + chars[i] - '0');
        }
        return new String(chars);

=======

        char[] arr = s.toCharArray();
        for (int i = 1; i < arr.length; i += 2) {
            arr[i] = (char) (arr[i - 1] + (arr[i] - '0'));
        }
        return new String(arr);

=======

        char[] ch = s.toCharArray();
        for (int i = 1; i < ch.length; i += 2) {
            ch[i] = (char) (ch[i - 1] + ch[i] - '0');
        }
        return new String(ch);

=======

        StringBuilder sb = new StringBuilder();
        for(int i=0;i<s.length();i++){
            if(i%2==0){
                sb.append(s.charAt(i));
            }else{
                sb.append((char)(s.charAt(i-1)+s.charAt(i)-48));
            }
        }
        return sb.toString();

=======

        char[] arr = s.toCharArray();
        for (int i = 1; i < arr.length; i+=2) {
            arr[i] = (char)(arr[i-1] + arr[i] - '0');
        }
        return new String(arr);

=======

        StringBuilder sb = new StringBuilder();
        for(int i = 0; i < s.length(); i++){
            if(i % 2 == 0) sb.append(s.charAt(i));
            else sb.append((char)(s.charAt(i - 1) + (s.charAt(i) - '0')));
        }
        return sb.toString();

=======

        char[] sArray = s.toCharArray();
        for (int i = 1; i < s.length(); i+=2) {
            sArray[i] = (char) (sArray[i-1] + sArray[i] - '0');
        }
        return new String(sArray);

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        StringBuilder sb1 = new StringBuilder();
        StringBuilder sb2 = new StringBuilder();
        for (String s : word1) {
            sb1.append(s);
        }
        for (String s : word2) {
            sb2.append(s);
        }
        return sb1.toString().equals(sb2.toString());

=======

        String s1 = "";
        String s2 = "";
        for (String s : word1) {
            s1 += s;
        }
        for (String s : word2) {
            s2 += s;
        }
        return s1.equals(s2);

=======

        String s1 = "", s2 = "";
        for (String s : word1) {
            s1 += s;
        }
        for (String s : word2) {
            s2 += s;
        }
        return s1.equals(s2);

=======

        int i = 0;
        int j = 0;
        int k = 0;
        int l = 0;
        while(i < word1.length && j < word2.length){
            if(word1[i].charAt(k) != word2[j].charAt(l)){
                return false;
            }
            k++;
            l++;
            if(k == word1[i].length()){
                k = 0;
                i++;
            }
            if(l == word2[j].length()){
                l = 0;
                j++;
            }
        }
        return i == word1.length && j == word2.length;

=======

        return String.join("", word1).equals(String.join("", word2));

=======

        String str1 = "", str2 = "";
        for (String str : word1) {
            str1 += str;
        }
        for (String str : word2) {
            str2 += str;
        }
        return str1.equals(str2);

=======

        String w1 = "";
        for (String s : word1) {
            w1 += s;
        }
        
        String w2 = "";
        for (String s : word2) {
            w2 += s;
        }
        
        return w1.equals(w2);

=======

        int i = 0, j = 0;
        int w1 = 0, w2 = 0;
        while (i < word1.length && j < word2.length) {
            if (w1 >= word1[i].length()) {
                i++;
                w1 = 0;
            }
            if (w2 >= word2[j].length()) {
                j++;
                w2 = 0;
            }
            if (i >= word1.length || j >= word2.length) {
                break;
            }
            if (word1[i].charAt(w1) != word2[j].charAt(w2)) {
                return false;
            }
            w1++;
            w2++;
        }
        return i >= word1.length && j >= word2.length;

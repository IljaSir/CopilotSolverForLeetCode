Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int i = word.indexOf(ch);
        if (i == -1) {
            return word;
        }
        return new StringBuilder(word.substring(0, i + 1)).reverse().toString() + word.substring(i + 1);

=======

        int idx = word.indexOf(ch);
        if (idx == -1) {
            return word;
        }
        return new StringBuilder(word.substring(0, idx + 1)).reverse().toString() + word.substring(idx + 1);

=======

        int index = word.indexOf(ch);
        if (index == -1) {
            return word;
        }
        StringBuilder sb = new StringBuilder(word.substring(0, index + 1));
        return sb.reverse().toString() + word.substring(index + 1);

=======

        int index = word.indexOf(ch);
        if (index < 0) {
            return word;
        }
        StringBuilder sb = new StringBuilder(word.substring(0, index + 1));
        return sb.reverse().append(word.substring(index + 1)).toString();

=======

        int i = word.indexOf(ch);
        if (i == -1) {
            return word;
        }
        String s1 = word.substring(0, i+1);
        String s2 = word.substring(i+1);
        StringBuilder sb = new StringBuilder(s1);
        sb.reverse();
        return sb.toString() + s2;

=======

        int i = word.indexOf(ch);
        if(i == -1) return word;
        return new StringBuffer(word.substring(0, i + 1)).reverse().toString() + word.substring(i + 1);

=======

        int i = word.indexOf(ch);
        if (i == -1) return word;
        String prefix = word.substring(0, i + 1);
        String suffix = word.substring(i + 1);
        StringBuilder sb = new StringBuilder();
        sb.append(prefix);
        sb.reverse();
        sb.append(suffix);
        return sb.toString();

=======

        int idx = word.indexOf(ch);
        if (idx >= 0) {
            String prefix = word.substring(0, idx + 1);
            String suffix = word.substring(idx + 1);
            StringBuilder sb = new StringBuilder(prefix);
            sb.reverse();
            return sb.toString() + suffix;
        } else {
            return word;
        }

=======

        int index = word.indexOf(ch);
        if(index != -1){
            StringBuilder sb = new StringBuilder(word);
            sb.reverse();
            String reverse = sb.toString();
            return reverse.substring(0, word.length() - index) + word.substring(word.length() - index);
        }
        return word;

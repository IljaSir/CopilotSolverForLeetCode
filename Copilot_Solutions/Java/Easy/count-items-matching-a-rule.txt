Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int index = 0;
        if (ruleKey.equals("color")) {
            index = 1;
        } else if (ruleKey.equals("name")) {
            index = 2;
        }
        int count = 0;
        for (List<String> item : items) {
            if (item.get(index).equals(ruleValue)) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (List<String> item : items) {
            if (ruleKey.equals("type") && item.get(0).equals(ruleValue)) {
                count++;
            } else if (ruleKey.equals("color") && item.get(1).equals(ruleValue)) {
                count++;
            } else if (ruleKey.equals("name") && item.get(2).equals(ruleValue)) {
                count++;
            }
        }
        return count;

=======

        int index = ruleKey.equals("type") ? 0 : (ruleKey.equals("color") ? 1 : 2);
        int count = 0;
        for (List<String> item : items) {
            if (item.get(index).equals(ruleValue)) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (List<String> item : items) {
            if (ruleKey.equals("type")) {
                if (item.get(0).equals(ruleValue)) {
                    count++;
                }
            } else if (ruleKey.equals("color")) {
                if (item.get(1).equals(ruleValue)) {
                    count++;
                }
            } else {
                if (item.get(2).equals(ruleValue)) {
                    count++;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (List<String> item : items) {
            if (ruleKey.equals("type") && ruleValue.equals(item.get(0))) {
                count++;
            } else if (ruleKey.equals("color") && ruleValue.equals(item.get(1))) {
                count++;
            } else if (ruleKey.equals("name") && ruleValue.equals(item.get(2))) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        for (List<String> item : items) {
            if (ruleKey.equals("type") && item.get(0).equals(ruleValue)) {
                count++;
            }
            if (ruleKey.equals("color") && item.get(1).equals(ruleValue)) {
                count++;
            }
            if (ruleKey.equals("name") && item.get(2).equals(ruleValue)) {
                count++;
            }
        }
        return count;

=======

        int rule = 0;
        if (ruleKey.equals("color")) {
            rule = 1;
        } else if (ruleKey.equals("name")) {
            rule = 2;
        }
        int count = 0;
        for (List<String> item : items) {
            if (item.get(rule).equals(ruleValue)) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        if(ruleKey.equals("type")){
            for(List<String> item : items){
                if(item.get(0).equals(ruleValue)){
                    count++;
                }
            }
        }
        else if(ruleKey.equals("color")){
            for(List<String> item : items){
                if(item.get(1).equals(ruleValue)){
                    count++;
                }
            }
        }
        else{
            for(List<String> item : items){
                if(item.get(2).equals(ruleValue)){
                    count++;
                }
            }
        }
        return count;

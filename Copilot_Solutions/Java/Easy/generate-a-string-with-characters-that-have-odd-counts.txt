Synthesizing 10/10 solutions

=======

        StringBuilder sb = new StringBuilder();
        if (n % 2 == 0) {
            for (int i = 0; i < n - 1; i++) {
                sb.append('a');
            }
            sb.append('b');
        } else {
            for (int i = 0; i < n; i++) {
                sb.append('a');
            }
        }
        return sb.toString();

=======

        char[] chars = new char[n];
        for (int i = 0; i < n; i++) {
            chars[i] = 'a';
        }
        if (n % 2 == 0) {
            chars[0] = 'b';
        }
        return new String(chars);

=======

        char[] chars = new char[n];
        Arrays.fill(chars, 'a');
        if (n % 2 == 0) {
            chars[n - 1] = 'b';
        }
        return new String(chars);

=======

        StringBuilder sb = new StringBuilder();
        if (n % 2 == 0) {
            sb.append('a');
            n--;
        }
        for (int i = 0; i < n; i++) {
            sb.append('b');
        }
        return sb.toString();

=======

        String str = "";
        if (n % 2 == 0) {
            for (int i = 0; i < n - 1; i++) {
                str += "a";
            }
            str += "b";
        } else {
            for (int i = 0; i < n; i++) {
                str += "a";
            }
        }
        return str;

=======

        if (n % 2 == 1) {
            return "a".repeat(n);
        } else {
            return "a".repeat(n - 1) + "b";
        }

=======

        if (n == 1) {
            return "a";
        }
        if (n % 2 == 0) {
            return "a" + generateTheString(n - 1);
        }
        return "b" + generateTheString(n - 1);

=======

        char[] chars = new char[n];
        if (n % 2 == 1) {
            Arrays.fill(chars, 'a');
        } else {
            Arrays.fill(chars, 0, n - 1, 'a');
            chars[n - 1] = 'b';
        }
        return new String(chars);

=======

        if(n % 2 == 0){
            return "a".repeat(n - 1) + "b";
        } else {
            return "a".repeat(n);
        }

=======

        if (n % 2 == 1) {
            return "a".repeat(n);
        }
        
        return "a".repeat(n - 1) + "b";

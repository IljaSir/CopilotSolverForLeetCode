Synthesizing 10/10 solutions

=======

        int count = 0;
        String s = String.valueOf(num);
        for (int i = 0; i <= s.length() - k; i++) {
            String sub = s.substring(i, i + k);
            if (sub.startsWith("0") && sub.length() > 1) {
                continue;
            }
            if (num % Integer.parseInt(sub) == 0) {
                count++;
            }
        }
        return count;

=======

        String s = String.valueOf(num);
        int ans = 0;
        for (int i = 0; i <= s.length() - k; i++) {
            String sub = s.substring(i, i + k);
            if (sub.charAt(0) == '0') continue;
            int n = Integer.parseInt(sub);
            if (num % n == 0) ans++;
        }
        return ans;

=======

        String numStr = String.valueOf(num);
        int count = 0;
        for (int i = 0; i <= numStr.length() - k; i++) {
            String sub = numStr.substring(i, i + k);
            if (sub.charAt(0) != '0' && num % Integer.valueOf(sub) == 0) {
                count++;
            }
        }
        return count;

=======

        String str = String.valueOf(num);
        int count = 0;
        for (int i = 0; i <= str.length() - k; i++) {
            if (Integer.parseInt(str.substring(i, i + k)) % num == 0) {
                count++;
            }
        }
        return count;

=======

        int count = 0;
        String str = String.valueOf(num);
        for (int i = 0; i < str.length() - k + 1; i++) {
            if (Integer.parseInt(str.substring(i, i + k)) % num == 0) {
                count++;
            }
        }
        return count;

=======

        String s = String.valueOf(num);
        int res = 0;
        for (int i = 0; i + k <= s.length(); i++) {
            int n = Integer.parseInt(s.substring(i, i + k));
            if (n == 0 || num % n == 0) res++;
        }
        return res;

=======

        int ret = 0;
        String s = String.valueOf(num);
        for (int i = 0; i <= s.length() - k; i++) {
            String sub = s.substring(i, i + k);
            if (sub.charAt(0) == '0') continue;
            int n = Integer.parseInt(sub);
            if (num % n == 0) ret++;
        }
        return ret;

=======

        int res = 0;
        String s = String.valueOf(num);
        for (int i = 0; i <= s.length() - k; i++) {
            if (num % Integer.valueOf(s.substring(i, i + k)) == 0) {
                res++;
            }
        }
        return res;

=======

        String s = String.valueOf(num);
        int n = s.length();
        int count = 0;
        for (int i = 0; i < n - k + 1; i++) {
            String sub = s.substring(i, i + k);
            int subNum = Integer.parseInt(sub);
            if (subNum % num == 0) {
                count++;
            }
        }
        return count;

=======

        String s = Integer.toString(num);
        int count = 0;
        for(int i=0;i<=s.length()-k;i++) {
            String t = s.substring(i, i+k);
            int n = Integer.parseInt(t);
            if(num % n == 0) {
                count++;
            }
        }
        return count;

Synthesizing 10/10 solutions

=======

        int m = img.length;
        int n = img[0].length;
        int[][] res = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int sum = 0;
                int count = 0;
                for (int k = i - 1; k <= i + 1; k++) {
                    for (int l = j - 1; l <= j + 1; l++) {
                        if (k >= 0 && k < m && l >= 0 && l < n) {
                            sum += img[k][l];
                            count++;
                        }
                    }
                }
                res[i][j] = sum / count;
            }
        }
        return res;

=======

        int m = img.length;
        int n = img[0].length;
        int[][] res = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int count = 0;
                for (int x = i - 1; x <= i + 1; x++) {
                    for (int y = j - 1; y <= j + 1; y++) {
                        if (x >= 0 && x < m && y >= 0 && y < n) {
                            res[i][j] += img[x][y];
                            count++;
                        }
                    }
                }
                res[i][j] /= count;
            }
        }
        return res;

=======

        int m = img.length;
        int n = img[0].length;
        int[][] res = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int sum = 0;
                int count = 0;
                for (int r = i - 1; r <= i + 1; r++) {
                    for (int c = j - 1; c <= j + 1; c++) {
                        if (r >= 0 && r < m && c >= 0 && c < n) {
                            sum += img[r][c];
                            count++;
                        }
                    }
                }
                res[i][j] = sum / count;
            }
        }
        return res;

=======

        int m = img.length;
        int n = img[0].length;
        int[][] res = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int sum = img[i][j];
                int count = 1;
                if (i > 0) {
                    sum += img[i - 1][j];
                    count++;
                }
                if (i < m - 1) {
                    sum += img[i + 1][j];
                    count++;
                }
                if (j > 0) {
                    sum += img[i][j - 1];
                    count++;
                }
                if (j < n - 1) {
                    sum += img[i][j + 1];
                    count++;
                }
                if (i > 0 && j > 0) {
                    sum += img[i - 1][j - 1];
                    count++;
                }
                if (i > 0 && j < n - 1) {
                    sum += img[i - 1][j + 1];
                    count++;
                }
                if (i < m - 1 && j > 0) {
                    sum += img[i + 1][j - 1];
                    count++;
                }
                if (i < m - 1 && j < n - 1) {
                    sum += img[i + 1][j + 1];
                    count++;
                }
                res[i][j] = sum / count;
            }
        }
        return res;

=======

        int m = img.length;
        int n = img[0].length;
        int[][] ans = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int count = 0;
                for (int x = i - 1; x <= i + 1; x++) {
                    for (int y = j - 1; y <= j + 1; y++) {
                        if (x >= 0 && x < m && y >= 0 && y < n) {
                            ans[i][j] += img[x][y];
                            count++;
                        }
                    }
                }
                ans[i][j] /= count;
            }
        }
        return ans;

=======

        int m = img.length;
        int n = img[0].length;
        int[][] result = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int sum = 0;
                int count = 0;
                for (int k = -1; k < 2; k++) {
                    for (int l = -1; l < 2; l++) {
                        int row = i + k;
                        int col = j + l;
                        if (row >= 0 && row < m && col >= 0 && col < n) {
                            sum += img[row][col];
                            count++;
                        }
                    }
                }
                result[i][j] = sum / count;
            }
        }
        return result;

=======

        int[][] res = new int[img.length][img[0].length];
        for (int i = 0; i < img.length; i++) {
            for (int j = 0; j < img[0].length; j++) {
                int sum = 0;
                int count = 0;
                for (int k = i - 1; k <= i + 1; k++) {
                    for (int l = j - 1; l <= j + 1; l++) {
                        if (k >= 0 && k < img.length && l >= 0 && l < img[0].length) {
                            sum += img[k][l];
                            count++;
                        }
                    }
                }
                res[i][j] = sum / count;
            }
        }
        return res;

=======

        int[][] result = new int[img.length][img[0].length];
        for (int i = 0; i < img.length; i++) {
            for (int j = 0; j < img[i].length; j++) {
                int count = 0;
                for (int k = i - 1; k <= i + 1; k++) {
                    for (int l = j - 1; l <= j + 1; l++) {
                        if (k >= 0 && k < img.length && l >= 0 && l < img[i].length) {
                            result[i][j] += img[k][l];
                            count++;
                        }
                    }
                }
                result[i][j] = result[i][j] / count;
            }
        }
        return result;

=======

        int m = img.length;
        int n = img[0].length;
        int[][] ans = new int[m][n];
        for (int i=0; i<m; i++) {
            for (int j=0; j<n; j++) {
                int sum = 0;
                int count = 0;
                for (int r=i-1; r<=i+1; r++) {
                    for (int c=j-1; c<=j+1; c++) {
                        if (r>=0 && r<m && c>=0 && c<n) {
                            sum += img[r][c];
                            count++;
                        }
                    }
                }
                ans[i][j] = sum/count;
            }
        }
        return ans;

=======

        int m = img.length;
        int n = img[0].length;
        int[][] res = new int[m][n];
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                int count = 0;
                int sum = 0;
                for(int p=i-1;p<=i+1;p++){
                    for(int q=j-1;q<=j+1;q++){
                        if(p>=0 && p<m && q>=0 && q<n){
                            sum += img[p][q];
                            count++;
                        }
                    }
                }
                res[i][j] = sum/count;
            }
        }
        return res;

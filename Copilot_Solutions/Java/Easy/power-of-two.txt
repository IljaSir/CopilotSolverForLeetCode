Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if(n==0){
            return false;
        }
        while(n%2==0){
            n=n/2;
        }
        if(n==1){
            return true;
        }
        return false;

=======

        if(n == 0)
            return false;
        while(n != 1){
            if(n % 2 != 0)
                return false;
            n = n / 2;
        }
        return true;

=======

        if(n == 0) return false;
        if(n == 1) return true;
        if(n % 2 != 0) return false;
        return isPowerOfTwo(n/2);

=======

        if(n == 0) return false;
        while(n != 1){
            if(n % 2 != 0) return false;
            n /= 2;
        }
        return true;

=======

        if(n <= 0) return false;
        if(n == 1) return true;
        if(n % 2 != 0) return false;
        return isPowerOfTwo(n/2);

=======

        if(n == 1) return true;
        if(n <= 0) return false;
        while(n > 1) {
            if(n % 2 != 0) return false;
            n /= 2;
        }
        return true;

=======

        if(n<0)
            return false;
        if(n==0)
            return false;
        if(n==1)
            return true;
        if(n==2)
            return true;
        if(n%2!=0)
            return false;
        return isPowerOfTwo(n/2);

=======

        if(n<=0){
            return false;
        }
        return (n & (n-1)) == 0;

=======

        if(n<0) return false;
        return ((n & (n-1)) == 0);

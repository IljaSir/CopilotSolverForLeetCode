Synthesizing 10/10 solutions (Duplicates hidden)

=======

        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == original) {
                original *= 2;
            }
        }
        return original;

=======

        int result = original;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == result) {
                result *= 2;
            }
        }
        return result;

=======

        int res = original;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == res) {
                res *= 2;
            }
        }
        return res;

=======

        int i = 0;
        while (i < nums.length) {
            if (original == nums[i]) {
                original = original * 2;
                i = 0;
            } else {
                i++;
            }
        }
        return original;

=======

        for(int num: nums) {
            if(num == original) {
                original *= 2;
            }
        }
        return original;

=======

        int i = 0;
        while(i < nums.length && nums[i] != original) {
            i++;
        }
        if(i < nums.length) {
            return 2 * original;
        } else {
            return original;
        }

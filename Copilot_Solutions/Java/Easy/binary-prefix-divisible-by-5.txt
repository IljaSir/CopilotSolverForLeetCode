Synthesizing 10/10 solutions (Duplicates hidden)

=======

        List<Boolean> result = new ArrayList<>();
        int num = 0;
        for (int i = 0; i < nums.length; i++) {
            num = ((num << 1) + nums[i]) % 5;
            result.add(num == 0);
        }
        return result;

=======

        List<Boolean> result = new ArrayList<>();
        int num = 0;
        for (int i = 0; i < nums.length; i++) {
            num = (num * 2 + nums[i]) % 5;
            result.add(num == 0);
        }
        return result;

=======

        List<Boolean> result = new ArrayList<>();
        int sum = 0;
        for (int i = 0; i < nums.length; i++) {
            sum = (sum * 2 + nums[i]) % 5;
            result.add(sum == 0);
        }
        return result;

=======

        List<Boolean> result = new ArrayList<Boolean>();
        int num = 0;
        for (int i = 0; i < nums.length; i++) {
            num = ((num << 1) + nums[i]) % 5;
            result.add(num == 0);
        }
        return result;

=======

        List<Boolean> result = new ArrayList<>();
        int sum = 0;
        for (int i = 0; i < nums.length; i++) {
            sum = ((sum << 1) + nums[i]) % 5;
            result.add(sum == 0);
        }
        return result;

=======

        List<Boolean> answer = new ArrayList<Boolean>();
        int num = 0;
        for (int i = 0; i < nums.length; i++) {
            num = ((num << 1) + nums[i]) % 5;
            answer.add(num == 0);
        }
        return answer;

=======

        int n = nums.length;
        List<Boolean> ans = new ArrayList<Boolean>(n);
        int x = 0;
        for (int i = 0; i < n; i++) {
            x = ((x << 1) + nums[i]) % 5;
            ans.add(x == 0);
        }
        return ans;

=======

        List<Boolean> result = new ArrayList<Boolean>();
        int num = 0;
        for(int i = 0; i < nums.length; i++){
            num = num * 2 + nums[i];
            num %= 5;
            result.add(num == 0);
        }
        return result;

=======

        int len = nums.length;
        int[] sums = new int[len];
        int sum = 0;
        for (int i = 0; i < len; i++) {
            sum = (sum * 2 + nums[i]) % 5;
            sums[i] = sum;
        }
        List<Boolean> result = new ArrayList<>();
        for (int i = 0; i < len; i++) {
            result.add(sums[i] == 0);
        }
        return result;

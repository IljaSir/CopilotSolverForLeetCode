Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int[] nums = new int[n];
        for (int i = 0; i < n; i++) {
            nums[i] = start + 2 * i;
        }
        int res = nums[0];
        for (int i = 1; i < n; i++) {
            res ^= nums[i];
        }
        return res;

=======

        int[] nums = new int[n];
        for (int i = 0; i < n; i++) {
            nums[i] = start + 2 * i;
        }
        int xor = nums[0];
        for (int i = 1; i < n; i++) {
            xor ^= nums[i];
        }
        return xor;

=======

        int xor = 0;
        for (int i = 0; i < n; i++) {
            xor ^= start + 2 * i;
        }
        return xor;

=======

        int[] nums = new int[n];
        for(int i = 0; i < n; i++) {
            nums[i] = start + 2 * i;
        }
        int result = nums[0];
        for(int i = 1; i < n; i++) {
            result ^= nums[i];
        }
        return result;

=======

        int res = 0;
        for(int i = 0; i < n; i++) {
            res ^= start + 2 * i;
        }
        return res;

=======

        int[] nums = new int[n];
        int result = 0;
        for(int i = 0; i < n; i++){
            nums[i] = start + 2 * i;
            result = result ^ nums[i];
        }
        return result;

=======

        int answer = start;
        for (int i = 1; i < n; i++) {
            answer ^= (start + 2 * i);
        }
        return answer;

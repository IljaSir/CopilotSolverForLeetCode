Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int count = 0;
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[i].length; j++) {
                if (grid[i][j] < 0) {
                    count++;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[i].length; j++) {
                if (grid[i][j] < 0) {
                    count += grid[i].length - j;
                    break;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 0; i < grid.length; i++) {
            int[] row = grid[i];
            for (int j = 0; j < row.length; j++) {
                if (row[j] < 0) {
                    count += row.length - j;
                    break;
                }
            }
        }
        return count;

=======

        int m = grid.length;
        int n = grid[0].length;
        int i = 0;
        int j = n - 1;
        int count = 0;
        while (i < m && j >= 0) {
            if (grid[i][j] < 0) {
                count += m - i;
                j--;
            } else {
                i++;
            }
        }
        return count;

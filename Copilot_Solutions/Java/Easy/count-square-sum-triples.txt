Synthesizing 10/10 solutions

=======

        int count = 0;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                for (int k = 1; k <= n; k++) {
                    if (i * i + j * j == k * k) {
                        count++;
                    }
                }
            }
        }
        return count;

=======

        int count = 0;
        for (int a = 1; a <= n; a++) {
            for (int b = 1; b <= n; b++) {
                int c = a * a + b * b;
                int cSqrt = (int) Math.sqrt(c);
                if (cSqrt * cSqrt == c && cSqrt <= n) {
                    count++;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (int a = 1; a <= n; a++) {
            for (int b = 1; b <= n; b++) {
                double c = Math.sqrt(a * a + b * b);
                if (c <= n && c == (int) c) {
                    count++;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (int a = 1; a <= n; a++) {
            for (int b = a; b <= n; b++) {
                int c = a * a + b * b;
                int c1 = (int) Math.sqrt(c);
                if (c1 * c1 == c && c1 <= n) {
                    count += 2;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (int a = 1; a <= n; a++) {
            for (int b = a; b <= n; b++) {
                int c = a * a + b * b;
                if (c > n * n) {
                    break;
                }
                int sqrt = (int) Math.sqrt(c);
                if (sqrt * sqrt == c) {
                    count += 2;
                }
            }
        }
        return count;

=======

        int count = 0;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                int k = i * i + j * j;
                double sq = Math.sqrt(k);
                if (sq == (int) sq && sq <= n) {
                    count++;
                }
            }
        }
        return count * 2;

=======

        int count = 0;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                int c = i * i + j * j;
                int k = (int) Math.sqrt(c);
                if (k * k == c && k <= n) {
                    count += 2;
                }
            }
        }
        return count;

=======

        int res = 0;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                int c = i * i + j * j;
                int k = (int) Math.sqrt(c);
                if (k <= n && k * k == c) {
                    res += 2;
                }
            }
        }
        return res;

=======

        int ans = 0;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                int a = i * i + j * j;
                int b = (int) Math.sqrt(a);
                if (b * b == a && b <= n) {
                    ans += 2;
                }
            }
        }
        return ans;

=======

        int c = 0;
        for (int a = 1; a <= n; a++) {
            for (int b = 1; b <= n; b++) {
                int x = a*a + b*b;
                int s = (int) Math.sqrt(x);
                if (s*s == x && s <= n) {
                    c++;
                }
            }
        }
        return c;

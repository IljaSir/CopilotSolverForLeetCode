Synthesizing 10/10 solutions

=======

        int n = score.length;
        int[] sorted = new int[n];
        for (int i = 0; i < n; i++) {
            sorted[i] = score[i];
        }
        Arrays.sort(sorted);
        String[] ans = new String[n];
        for (int i = 0; i < n; i++) {
            int rank = n - Arrays.binarySearch(sorted, score[i]);
            if (rank == 1) {
                ans[i] = "Gold Medal";
            } else if (rank == 2) {
                ans[i] = "Silver Medal";
            } else if (rank == 3) {
                ans[i] = "Bronze Medal";
            } else {
                ans[i] = String.valueOf(rank);
            }
        }
        return ans;

=======

        int n = score.length;
        Integer[] idx = new Integer[n];
        for (int i = 0; i < n; i++) {
            idx[i] = i;
        }
        Arrays.sort(idx, (i, j) -> score[j] - score[i]);
        String[] ans = new String[n];
        for (int i = 0; i < n; i++) {
            if (i == 0) {
                ans[idx[i]] = "Gold Medal";
            } else if (i == 1) {
                ans[idx[i]] = "Silver Medal";
            } else if (i == 2) {
                ans[idx[i]] = "Bronze Medal";
            } else {
                ans[idx[i]] = String.valueOf(i + 1);
            }
        }
        return ans;

=======

        int n = score.length;
        int[] rank = new int[n];
        for (int i = 0; i < n; i++) {
            rank[i] = i;
        }
        Arrays.sort(rank, (a, b) -> score[b] - score[a]);
        String[] result = new String[n];
        for (int i = 0; i < n; i++) {
            if (i == 0) {
                result[rank[i]] = "Gold Medal";
            } else if (i == 1) {
                result[rank[i]] = "Silver Medal";
            } else if (i == 2) {
                result[rank[i]] = "Bronze Medal";
            } else {
                result[rank[i]] = String.valueOf(i + 1);
            }
        }
        return result;

=======

        int n = score.length;
        int[] rank = new int[n];
        for (int i = 0; i < n; i++) {
            rank[i] = score[i];
        }
        Arrays.sort(rank);
        Map<Integer, String> map = new HashMap<>();
        for (int i = n - 1, j = 1; i >= 0; i--, j++) {
            if (j == 1) {
                map.put(rank[i], "Gold Medal");
            } else if (j == 2) {
                map.put(rank[i], "Silver Medal");
            } else if (j == 3) {
                map.put(rank[i], "Bronze Medal");
            } else {
                map.put(rank[i], String.valueOf(j));
            }
        }
        String[] ans = new String[n];
        for (int i = 0; i < n; i++) {
            ans[i] = map.get(score[i]);
        }
        return ans;

=======

        int[] sorted = new int[score.length];
        System.arraycopy(score, 0, sorted, 0, score.length);
        Arrays.sort(sorted);
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < sorted.length; i++) {
            map.put(sorted[i], sorted.length - i);
        }
        String[] result = new String[score.length];
        for (int i = 0; i < score.length; i++) {
            int rank = map.get(score[i]);
            if (rank == 1) {
                result[i] = "Gold Medal";
            } else if (rank == 2) {
                result[i] = "Silver Medal";
            } else if (rank == 3) {
                result[i] = "Bronze Medal";
            } else {
                result[i] = String.valueOf(rank);
            }
        }
        return result;

=======

        int[] sorted = Arrays.copyOf(score, score.length);
        Arrays.sort(sorted);
        String[] result = new String[score.length];
        for (int i = 0; i < score.length; i++) {
            int index = Arrays.binarySearch(sorted, score[i]);
            if (index == score.length - 1) {
                result[i] = "Gold Medal";
            } else if (index == score.length - 2) {
                result[i] = "Silver Medal";
            } else if (index == score.length - 3) {
                result[i] = "Bronze Medal";
            } else {
                result[i] = String.valueOf(score.length - index);
            }
        }
        return result;

=======

        int n = score.length;
        String[] result = new String[n];
        int[] copy = Arrays.copyOf(score, n);
        Arrays.sort(copy);
        for (int i = 0; i < n; i++) {
            int index = Arrays.binarySearch(copy, score[i]);
            if (index == n - 1) {
                result[i] = "Gold Medal";
            } else if (index == n - 2) {
                result[i] = "Silver Medal";
            } else if (index == n - 3) {
                result[i] = "Bronze Medal";
            } else {
                result[i] = String.valueOf(n - index);
            }
        }
        return result;

=======

        int n = score.length;
        int[] sorted = Arrays.copyOf(score, n);
        Arrays.sort(sorted);
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < n; i++) {
            map.put(sorted[i], n - i);
        }
        String[] result = new String[n];
        for (int i = 0; i < n; i++) {
            int rank = map.get(score[i]);
            if (rank == 1) {
                result[i] = "Gold Medal";
            } else if (rank == 2) {
                result[i] = "Silver Medal";
            } else if (rank == 3) {
                result[i] = "Bronze Medal";
            } else {
                result[i] = String.valueOf(rank);
            }
        }
        return result;

=======

        int n = score.length;
        int[] sorted = score.clone();
        Arrays.sort(sorted);
        String[] result = new String[n];
        for (int i = 0; i < n; i++) {
            int rank = Arrays.binarySearch(sorted, score[i]);
            if (rank == n - 1) {
                result[i] = "Gold Medal";
            } else if (rank == n - 2) {
                result[i] = "Silver Medal";
            } else if (rank == n - 3) {
                result[i] = "Bronze Medal";
            } else {
                result[i] = String.valueOf(n - rank);
            }
        }
        return result;

=======

        int[] sorted = score.clone();
        Arrays.sort(sorted);
        String[] result = new String[score.length];
        for (int i = 0; i < score.length; i++) {
            int idx = Arrays.binarySearch(sorted, score[i]);
            if (idx == score.length - 1) {
                result[i] = "Gold Medal";
            } else if (idx == score.length - 2) {
                result[i] = "Silver Medal";
            } else if (idx == score.length - 3) {
                result[i] = "Bronze Medal";
            } else {
                result[i] = String.valueOf(score.length - idx);
            }
        }
        return result;

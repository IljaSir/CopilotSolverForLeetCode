Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int n = grid.length;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j || i + j == n - 1) {
                    if (grid[i][j] == 0) {
                        return false;
                    }
                } else {
                    if (grid[i][j] != 0) {
                        return false;
                    }
                }
            }
        }
        return true;

=======

        int n = grid.length;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j || i == n - j - 1) {
                    if (grid[i][j] == 0) {
                        return false;
                    }
                } else {
                    if (grid[i][j] != 0) {
                        return false;
                    }
                }
            }
        }
        return true;

=======

        int n = grid.length;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i != j && i != n - j - 1 && grid[i][j] != 0) {
                    return false;
                }
                if ((i == j || i == n - j - 1) && grid[i][j] == 0) {
                    return false;
                }
            }
        }
        return true;

=======

        int n = grid.length;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(i==j || i+j==n-1){
                    if(grid[i][j]==0)
                        return false;
                }else{
                    if(grid[i][j]!=0)
                        return false;
                }
            }
        }
        return true;

Synthesizing 10/10 solutions (Duplicates hidden)

=======

        int matches = 0;
        while (n > 1) {
            if (n % 2 == 0) {
                matches += n / 2;
                n = n / 2;
            } else {
                matches += (n - 1) / 2;
                n = (n - 1) / 2 + 1;
            }
        }
        return matches;

=======

        int matches = 0;
        while (n > 1) {
            if (n % 2 == 0) {
                matches += n / 2;
                n /= 2;
            } else {
                matches += (n - 1) / 2;
                n = (n - 1) / 2 + 1;
            }
        }
        return matches;

=======

        int result = 0;
        while (n > 1) {
            if (n % 2 == 0) {
                result += n / 2;
                n = n / 2;
            } else {
                result += (n - 1) / 2;
                n = (n - 1) / 2 + 1;
            }
        }
        return result;

=======

        if (n == 1) return 0;
        if (n % 2 == 0) return n / 2 + numberOfMatches(n / 2);
        return (n - 1) / 2 + numberOfMatches((n - 1) / 2 + 1);

=======

        int count = 0;
        while (n > 1) {
            count += n / 2;
            n = n / 2 + n % 2;
        }
        return count;

=======

        return n - 1;

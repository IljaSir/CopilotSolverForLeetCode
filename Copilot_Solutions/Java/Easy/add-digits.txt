Synthesizing 10/10 solutions (Duplicates hidden)

=======

        if (num == 0) {
            return 0;
        }
        if (num % 9 == 0) {
            return 9;
        }
        return num % 9;

=======

        while (num > 9) {
            int sum = 0;
            while (num > 0) {
                sum += num % 10;
                num /= 10;
            }
            num = sum;
        }
        return num;

=======

        if (num < 10) {
            return num;
        }
        int sum = 0;
        while (num > 0) {
            sum += num % 10;
            num = num / 10;
        }
        return addDigits(sum);

=======

        return 1 + (num - 1) % 9;

=======

        while (num >= 10) {
            int sum = 0;
            while (num >= 10) {
                sum += num % 10;
                num /= 10;
            }
            sum += num;
            num = sum;
        }
        return num;

=======

        return (num - 1) % 9 + 1;

=======

        return num == 0 ? 0 : (num % 9 == 0 ? 9 : num % 9);

=======

        int sum = 0;
        while (num > 0) {
            sum += num % 10;
            num = num / 10;
        }
        if (sum < 10) {
            return sum;
        } else {
            return addDigits(sum);
        }

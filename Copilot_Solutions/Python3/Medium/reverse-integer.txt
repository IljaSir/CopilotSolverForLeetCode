Synthesizing 10/10 solutions

=======

def reverse(self, x: int) -> int:
        if x < 0:
            x = -int(str(-x)[::-1])
        else:
            x = int(str(x)[::-1])
        if x < -2**31 or x > 2**31 - 1:
            return 0
        return x

=======

def reverse(self, x: int) -> int:
        if x < 0:
            x = -1 * x
            x = str(x)
            x = x[::-1]
            x = int(x)
            x = -1 * x
        else:
            x = str(x)
            x = x[::-1]
            x = int(x)
        if x < -2**31 or x > 2**31 - 1:
            return 0
        else:
            return x

=======

def reverse(self, x: int) -> int:
        if x >= 0:
            if int(str(x)[::-1]) >= 2**31:
                return 0
            else:
                return int(str(x)[::-1])
        else:
            if -int(str(x)[1:][::-1]) <= -2**31:
                return 0
            else:
                return -int(str(x)[1:][::-1])

=======

def reverse(self, x: int) -> int:
        if x > 0:
            a = int(str(x)[::-1])
        else:
            a = -int(str(-x)[::-1])
        if a < -2**31 or a > 2**31 - 1:
            return 0
        return a

=======

def reverse(self, x: int) -> int:
        if x < 0:
            x = -int(str(-x)[::-1])
        else:
            x = int(str(x)[::-1])
        return x if -(2**31) <= x <= (2**31 -1) else 0

=======

def reverse(self, x: int) -> int:
        if x >= 0:
            n = int(str(x)[::-1])
        else:
            n = -int(str(-x)[::-1])
        return n if -2**31 <= n <= 2**31-1 else 0

=======

def reverse(self, x: int) -> int:
        if x > 2**31-1 or x < -2**31:
            return 0
        if x >= 0:
            x = str(x)
            x = x[::-1]
            x = int(x)
        else:
            x = str(x)
            x = x[1:]
            x = x[::-1]
            x = int(x)
            x = -x
        if x > 2**31-1 or x < -2**31:
            return 0
        return x

=======

def reverse(self, x: int) -> int:
        if x > 0:
            y = int(str(x)[::-1])
        else:
            y = int('-'+str(x)[1:][::-1])
        if y < -2**31 or y > 2**31 -1:
            return 0
        return y

=======

def reverse(self, x: int) -> int:
        if x > 0:
            x = int(str(x)[::-1])
        else:
            x = int('-' + str(x)[1:][::-1])
        return x if x.bit_length() < 33 else 0

=======

def reverse(self, x: int) -> int:
        if x < 0:
            x = -x
            result = int('-' + str(x)[::-1])
        else:
            result = int(str(x)[::-1])
        if result < -2**31 or result > 2**31 - 1:
            return 0
        return result

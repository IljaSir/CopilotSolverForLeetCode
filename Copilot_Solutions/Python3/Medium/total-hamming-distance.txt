Synthesizing 10/10 solutions (Duplicates hidden)

=======

def totalHammingDistance(self, nums: List[int]) -> int:
        n = len(nums)
        ans = 0
        for i in range(32):
            c = 0
            for num in nums:
                c += (num >> i) & 1
            ans += c * (n - c)
        return ans

=======

def totalHammingDistance(self, nums: List[int]) -> int:
        ans = 0
        for i in range(32):
            c = 0
            for num in nums:
                c += (num >> i) & 1
            ans += c * (len(nums) - c)
        return ans

=======

def totalHammingDistance(self, nums: List[int]) -> int:
        n = len(nums)
        ans = 0
        for i in range(30):
            c = 0
            for val in nums:
                c += (val >> i) & 1
            ans += c * (n - c)
        return ans

=======

def totalHammingDistance(self, nums: List[int]) -> int:
        pass

=======

def totalHammingDistance(self, nums: List[int]) -> int:
        n = len(nums)
        ans = 0
        for i in range(32):
            c = sum((num >> i) & 1 for num in nums)
            ans += c * (n - c)
        return ans

=======

def totalHammingDistance(self, nums: List[int]) -> int:
        ans = 0
        n = len(nums)
        for i in range(32):
            c = 0
            for num in nums:
                c += num >> i & 1
            ans += c * (n-c)
        return ans

=======

def totalHammingDistance(self, nums: List[int]) -> int:
        n = len(nums)
        ans = 0
        for i in range(32):
            c = sum((val >> i) & 1 for val in nums)
            ans += c * (n - c)
        return ans

=======

def totalHammingDistance(self, nums: List[int]) -> int:
        s = 0
        for i in range(32):
            x = 1 << i
            c = 0
            for n in nums:
                if n & x:
                    c += 1
            s += c * (len(nums) - c)
        return s

=======

def totalHammingDistance(self, nums: List[int]) -> int:
        return sum(bin(x ^ y).count('1') for x in nums for y in nums if x < y)

Synthesizing 10/10 solutions (Duplicates hidden)

=======

def maxChunksToSorted(self, arr: List[int]) -> int:
        res = 0
        max_val = 0
        for i, n in enumerate(arr):
            max_val = max(max_val, n)
            if max_val == i:
                res += 1
        return res

=======

def maxChunksToSorted(self, arr: List[int]) -> int:
        maxs = [0] * len(arr)
        mins = [0] * len(arr)
        maxs[0] = arr[0]
        mins[-1] = arr[-1]
        for i in range(1, len(arr)):
            maxs[i] = max(maxs[i-1], arr[i])
        for i in range(len(arr)-2, -1, -1):
            mins[i] = min(mins[i+1], arr[i])
        res = 1
        for i in range(len(arr)-1):
            if maxs[i] <= mins[i+1]:
                res += 1
        return res

=======

def maxChunksToSorted(self, arr: List[int]) -> int:
        count = 0
        for i in range(len(arr)):
            if i == max(arr[:i+1]):
                count += 1
        return count

=======

def maxChunksToSorted(self, arr: List[int]) -> int:
        maxs = [arr[0]]
        for i in range(1, len(arr)):
            maxs.append(max(arr[i], maxs[i-1]))
        mins = [arr[-1]]
        for i in range(len(arr)-2, -1, -1):
            mins.append(min(arr[i], mins[-1]))
        mins = mins[::-1]
        res = 1
        for i in range(len(arr)-1):
            if maxs[i] <= mins[i+1]:
                res += 1
        return res

=======

def maxChunksToSorted(self, arr: List[int]) -> int:
        n = len(arr)
        sorted_arr = sorted(arr)
        count = 0
        for i in range(n):
            if arr[i] == sorted_arr[i]:
                count += 1
        return count

=======

def maxChunksToSorted(self, arr: List[int]) -> int:
        res = 0
        for i, v in enumerate(arr):
            if i == max(arr[:i+1]):
                res += 1
        return res

=======

def maxChunksToSorted(self, arr: List[int]) -> int:
        return len(set(arr[i] for i in range(len(arr)) if i == max(arr[:i+1])))

=======

def maxChunksToSorted(self, arr: List[int]) -> int:
        
        pass

=======

def maxChunksToSorted(self, arr: List[int]) -> int:
        rec = [0] * len(arr)
        for i in range(len(arr)):
            rec[i] = max(rec[i-1], arr[i])
        res = 0
        tmp = 0
        for i in range(len(arr)):
            tmp = max(tmp, arr[i])
            if tmp == rec[i]:
                res += 1
        return res

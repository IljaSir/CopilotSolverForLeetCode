Synthesizing 10/10 solutions (Duplicates hidden)

=======

def hIndex(self, citations: List[int]) -> int:
        citations.sort()
        n = len(citations)
        for i in range(n):
            if citations[i] >= n - i:
                return n - i
        return 0

=======

def hIndex(self, citations: List[int]) -> int:
        citations.sort(reverse=True)
        for i in range(len(citations)):
            if citations[i] < i+1:
                return i
        return len(citations)

=======

def hIndex(self, citations: List[int]) -> int:
        citations.sort()
        n = len(citations)
        for i, c in enumerate(citations):
            if c >= n - i:
                return n - i
        return 0

=======

def hIndex(self, citations: List[int]) -> int:
        citations = sorted(citations)
        n = len(citations)
        for i in range(n):
            if citations[i] >= n-i:
                return n-i
        return 0

=======

def hIndex(self, citations: List[int]) -> int:
        citations.sort()
        for i, c in enumerate(citations):
            if c >= len(citations) - i:
                return len(citations) - i
        return 0

=======

def hIndex(self, citations: List[int]) -> int:
        n = len(citations)
        citations.sort(reverse=True)
        for i in range(n):
            if citations[i] < i+1:
                return i
        return n

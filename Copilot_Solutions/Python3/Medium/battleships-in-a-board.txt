Synthesizing 10/10 solutions

=======

def countBattleships(self, board: List[List[str]]) -> int:
        count = 0
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == 'X':
                    if i > 0 and board[i-1][j] == 'X':
                        continue
                    if j > 0 and board[i][j-1] == 'X':
                        continue
                    count += 1
        return count

=======

def countBattleships(self, board: List[List[str]]) -> int:
        count = 0
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == 'X':
                    if (i == 0 or board[i-1][j] == '.') and (j == 0 or board[i][j-1] == '.'):
                        count += 1
        return count

=======

def countBattleships(self, board: List[List[str]]) -> int:
        m, n = len(board), len(board[0])
        count = 0
        for i in range(m):
            for j in range(n):
                if board[i][j] == 'X':
                    count += 1
                    self.dfs(board, i, j)
        return count

=======

def countBattleships(self, board: List[List[str]]) -> int:
        m = len(board)
        n = len(board[0])
        count = 0
        for i in range(m):
            for j in range(n):
                if board[i][j] == 'X':
                    if i > 0 and board[i-1][j] == 'X':
                        continue
                    if j > 0 and board[i][j-1] == 'X':
                        continue
                    count += 1
        return count

=======

def countBattleships(self, board: List[List[str]]) -> int:
        count = 0
        for i in range(len(board)):
            for j in range(len(board[i])):
                if board[i][j] == 'X':
                    if i == 0 and j == 0:
                        count += 1
                    elif i == 0:
                        if board[i][j-1] == '.':
                            count += 1
                    elif j == 0:
                        if board[i-1][j] == '.':
                            count += 1
                    else:
                        if board[i-1][j] == '.' and board[i][j-1] == '.':
                            count += 1
        return count

=======

def countBattleships(self, board: List[List[str]]) -> int:
        m = len(board)
        n = len(board[0])
        count = 0
        for i in range(m):
            for j in range(n):
                if board[i][j] == 'X':
                    if i == 0 and j == 0:
                        count += 1
                    elif i == 0 and board[i][j-1] == '.':
                        count += 1
                    elif j == 0 and board[i-1][j] == '.':
                        count += 1
                    elif board[i][j-1] == '.' and board[i-1][j] == '.':
                        count += 1
        return count

=======

def countBattleships(self, board: List[List[str]]) -> int:
        m, n = len(board), len(board[0])
        ans = 0
        for i in range(m):
            for j in range(n):
                if board[i][j] == 'X':
                    if i > 0 and board[i-1][j] == 'X':
                        continue
                    if j > 0 and board[i][j-1] == 'X':
                        continue
                    ans += 1
        return ans

=======

def countBattleships(self, board: List[List[str]]) -> int:
        count = 0
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == 'X':
                    if i == 0 or board[i-1][j] == '.':
                        if j == 0 or board[i][j-1] == '.':
                            count += 1
        return count

=======

def countBattleships(self, board: List[List[str]]) -> int:
        result = 0
        for i in range(len(board)):
            for j in range(len(board[i])):
                if board[i][j] == 'X':
                    if i > 0 and board[i-1][j] == 'X':
                        continue
                    if j > 0 and board[i][j-1] == 'X':
                        continue
                    result += 1
        return result

=======

def countBattleships(self, board: List[List[str]]) -> int:
        def is_valid(i, j):
            if i < 0 or i >= len(board):
                return False
            if j < 0 or j >= len(board[0]):
                return False
            return True
        count = 0
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == 'X':
                    if is_valid(i-1, j) and board[i-1][j] == 'X':
                        continue
                    if is_valid(i, j-1) and board[i][j-1] == 'X':
                        continue
                    count += 1
        return count

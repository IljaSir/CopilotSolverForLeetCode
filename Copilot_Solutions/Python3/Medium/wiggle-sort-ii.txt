Synthesizing 10/10 solutions (Duplicates hidden)

=======

def wiggleSort(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        nums.sort()
        for i in range(1, len(nums) - 1, 2):
            nums[i], nums[i + 1] = nums[i + 1], nums[i]

=======

def wiggleSort(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        nums.sort()
        n = len(nums)
        for i in range(1, n-1, 2):
            nums[i], nums[i+1] = nums[i+1], nums[i]

=======

def wiggleSort(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        nums.sort()
        mid = len(nums) // 2 if len(nums) % 2 == 0 else len(nums) // 2 + 1
        nums[::2], nums[1::2] = nums[mid:][::-1], nums[:mid][::-1]

=======

def wiggleSort(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        nums.sort()
        mid = len(nums) // 2
        if len(nums) % 2 == 1:
            mid += 1
        nums[::2], nums[1::2] = nums[mid-1::-1], nums[:mid-1:-1]

=======

def wiggleSort(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        nums.sort()
        n = len(nums)
        if n < 2:
            return
        for i in range(1, n-1, 2):
            nums[i], nums[i+1] = nums[i+1], nums[i]

=======

def wiggleSort(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        nums.sort()
        n = len(nums)
        mid = (n+1)//2
        nums[1::2], nums[::2] = nums[mid:], nums[:mid]

=======

def wiggleSort(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        m = len(nums)
        if m < 2: return
        nums.sort()
        for i in range(1, m-1, 2):
            nums[i], nums[i+1] = nums[i+1], nums[i]

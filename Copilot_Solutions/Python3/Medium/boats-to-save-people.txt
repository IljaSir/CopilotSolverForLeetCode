Synthesizing 10/10 solutions (Duplicates hidden)

=======

def numRescueBoats(self, people: List[int], limit: int) -> int:
        people.sort()
        i, j = 0, len(people) - 1
        boats = 0
        while i <= j:
            boats += 1
            if people[i] + people[j] <= limit:
                i += 1
            j -= 1
        return boats

=======

def numRescueBoats(self, people: List[int], limit: int) -> int:
        people.sort()
        i, j = 0, len(people) - 1
        ans = 0
        while i <= j:
            ans += 1
            if people[i] + people[j] <= limit:
                i += 1
            j -= 1
        return ans

=======

def numRescueBoats(self, people: List[int], limit: int) -> int:
        people.sort()
        i = 0
        j = len(people) - 1
        ans = 0
        while i <= j:
            ans += 1
            if people[i] + people[j] <= limit:
                i += 1
            j -= 1
        return ans

=======

def numRescueBoats(self, people: List[int], limit: int) -> int:
        people.sort()
        i = 0
        j = len(people) - 1
        ans = 0
        while i <= j:
            if people[i] + people[j] <= limit:
                i += 1
            j -= 1
            ans += 1
        return ans

=======

def numRescueBoats(self, people: List[int], limit: int) -> int:
        people.sort()
        left, right = 0, len(people) - 1
        boats = 0
        while left <= right:
            if people[left] + people[right] <= limit:
                left += 1
            right -= 1
            boats += 1
        return boats

=======

def numRescueBoats(self, people: List[int], limit: int) -> int:
        people.sort()
        i, j, res = 0, len(people) - 1, 0
        while i <= j:
            res += 1
            if people[i] + people[j] <= limit:
                i += 1
            j -= 1
        return res

=======

def numRescueBoats(self, people: List[int], limit: int) -> int:
        people.sort()
        l, r, res = 0, len(people)-1, 0
        while l <= r:
            if people[l] + people[r] <= limit:
                l += 1
            r -= 1
            res += 1
        return res

=======

def numRescueBoats(self, people: List[int], limit: int) -> int:
        people.sort()
        i, j, n = 0, len(people)-1, 0
        while i <= j:
            n += 1
            if people[i] + people[j] <= limit:
                i += 1
            j -= 1
        return n

=======

def numRescueBoats(self, people: List[int], limit: int) -> int:
        people.sort()
        boats = 0
        while people:
            people.pop()
            boats += 1
            while people and people[0] + people[-1] <= limit:
                people.pop(0)
        return boats

Synthesizing 10/10 solutions (Duplicates hidden)

=======

def reachNumber(self, target: int) -> int:
        target = abs(target)
        k = 0
        while target > 0:
            k += 1
            target -= k
        return k if target % 2 == 0 else k + 1 + k % 2

=======

def reachNumber(self, target: int) -> int:
        target = abs(target)
        step = 0
        sum = 0
        while sum < target:
            step += 1
            sum += step
        while (sum - target) % 2 != 0:
            step += 1
            sum += step
        return step

=======

def reachNumber(self, target: int) -> int:
        target = abs(target)
        step = 0
        sum = 0
        while sum < target:
            step += 1
            sum += step
        if (sum - target) % 2 == 0:
            return step
        else:
            return step + 1 + step % 2

=======

def reachNumber(self, target: int) -> int:
        
        pass

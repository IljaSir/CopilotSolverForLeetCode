Synthesizing 10/10 solutions

=======

def compareVersion(self, version1: str, version2: str) -> int:
        v1 = version1.split('.')
        v2 = version2.split('.')
        for i in range(max(len(v1), len(v2))):
            a = int(v1[i]) if i < len(v1) else 0
            b = int(v2[i]) if i < len(v2) else 0
            if a > b: return 1
            if a < b: return -1
        return 0

=======

def compareVersion(self, version1: str, version2: str) -> int:
        v1 = version1.split('.')
        v2 = version2.split('.')
        l1 = len(v1)
        l2 = len(v2)
        l = max(l1, l2)
        for i in range(l):
            if i >= l1:
                n1 = 0
            else:
                n1 = int(v1[i])
            if i >= l2:
                n2 = 0
            else:
                n2 = int(v2[i])
            if n1 > n2:
                return 1
            elif n1 < n2:
                return -1
        return 0

=======

def compareVersion(self, version1: str, version2: str) -> int:
        v1 = version1.split('.')
        v2 = version2.split('.')
        if len(v1) < len(v2):
            v1 += ['0'] * (len(v2) - len(v1))
        elif len(v1) > len(v2):
            v2 += ['0'] * (len(v1) - len(v2))
        for i in range(len(v1)):
            if int(v1[i]) < int(v2[i]):
                return -1
            elif int(v1[i]) > int(v2[i]):
                return 1
        return 0

=======

def compareVersion(self, version1: str, version2: str) -> int:
        v1 = version1.split('.')
        v2 = version2.split('.')
        for i in range(max(len(v1), len(v2))):
            v1i = int(v1[i]) if i < len(v1) else 0
            v2i = int(v2[i]) if i < len(v2) else 0
            if v1i > v2i:
                return 1
            if v1i < v2i:
                return -1
        return 0

=======

def compareVersion(self, version1: str, version2: str) -> int:
        v1 = [int(x) for x in version1.split('.')]
        v2 = [int(x) for x in version2.split('.')]
        if len(v1) > len(v2):
            v2 = v2 + [0] * (len(v1) - len(v2))
        else:
            v1 = v1 + [0] * (len(v2) - len(v1))
        for i in range(len(v1)):
            if v1[i] > v2[i]:
                return 1
            elif v1[i] < v2[i]:
                return -1
        return 0

=======

def compareVersion(self, version1: str, version2: str) -> int:
        v1 = version1.split(".")
        v2 = version2.split(".")
        for i in range(max(len(v1), len(v2))):
            if i >= len(v1):
                v1.append(0)
            if i >= len(v2):
                v2.append(0)
            if int(v1[i]) > int(v2[i]):
                return 1
            if int(v1[i]) < int(v2[i]):
                return -1
        return 0

=======

def compareVersion(self, version1: str, version2: str) -> int:
        v1 = version1.split('.')
        v2 = version2.split('.')
        i = 0
        while i < len(v1) or i < len(v2):
            if i < len(v1):
                v1[i] = int(v1[i])
            else:
                v1.append(0)
            if i < len(v2):
                v2[i] = int(v2[i])
            else:
                v2.append(0)
            if v1[i] > v2[i]:
                return 1
            elif v1[i] < v2[i]:
                return -1
            i += 1
        return 0

=======

def compareVersion(self, version1: str, version2: str) -> int:
        v1 = version1.split('.')
        v2 = version2.split('.')
        n = max(len(v1), len(v2))
        for i in range(n):
            if i < len(v1):
                x = int(v1[i])
            else:
                x = 0
            if i < len(v2):
                y = int(v2[i])
            else:
                y = 0
            if x > y:
                return 1
            elif x < y:
                return -1
        return 0

=======

def compareVersion(self, version1: str, version2: str) -> int:
        v1 = version1.split('.')
        v2 = version2.split('.')
        l = len(v1) if len(v1) >= len(v2) else len(v2)
        for i in range(l):
            a = int(v1[i]) if i < len(v1) else 0
            b = int(v2[i]) if i < len(v2) else 0
            if a > b:
                return 1
            elif a < b:
                return -1
        return 0

=======

def compareVersion(self, version1: str, version2: str) -> int:
        def f(v):
            return [int(i) for i in v.split('.')]
        v1 = f(version1)
        v2 = f(version2)
        for i in range(max(len(v1), len(v2))):
            n1 = v1[i] if i < len(v1) else 0
            n2 = v2[i] if i < len(v2) else 0
            if n1 < n2:
                return -1
            elif n1 > n2:
                return 1
        return 0

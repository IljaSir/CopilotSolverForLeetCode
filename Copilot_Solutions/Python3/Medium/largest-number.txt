Synthesizing 10/10 solutions

=======

def largestNumber(self, nums: List[int]) -> str:
        def compare(a, b):
            if a + b > b + a:
                return 1
            elif a + b < b + a:
                return -1
            else:
                return 0
        nums = [str(x) for x in nums]
        nums = sorted(nums, cmp=compare, reverse=True)
        return str(int(''.join(nums)))

=======

def largestNumber(self, nums: List[int]) -> str:
        def cmp(a, b):
            if a + b > b + a:
                return 1
            elif a + b < b + a:
                return -1
            else:
                return 0
        nums = list(map(str, nums))
        nums.sort(cmp=cmp, reverse=True)
        return ''.join(nums).lstrip('0') or '0'

=======

def largestNumber(self, nums: List[int]) -> str:
        nums = [str(n) for n in nums]
        nums.sort(key = lambda x: x*3, reverse = True)
        return ''.join(nums).lstrip('0') or '0'

=======

def largestNumber(self, nums: List[int]) -> str:
        return str(int(''.join(sorted([str(x) for x in nums], key=lambda x: x*3, reverse=True))))

=======

def largestNumber(self, nums: List[int]) -> str:
        nums = [str(n) for n in nums]
        nums.sort(key = lambda x: x*3, reverse = True)
        return str(int(''.join(nums)))

=======

def largestNumber(self, nums: List[int]) -> str:
        return str(int(''.join(sorted(map(str, nums), key=lambda x: x*4, reverse=True))))

=======

def largestNumber(self, nums: List[int]) -> str:
        if max(nums) == 0:
            return "0"
        return "".join(sorted([str(i) for i in nums], key = lambda x: x*4, reverse = True))

=======

def largestNumber(self, nums: List[int]) -> str:
        s = [str(n) for n in nums]
        s.sort(key = lambda x: x*10, reverse=True)
        return str(int(''.join(s)))

=======

def largestNumber(self, nums: List[int]) -> str:
        def compare(s1, s2):
            return s2+s1 > s1+s2
        return str(int(''.join(sorted([str(n) for n in nums], key=cmp_to_key(compare)))))

=======

def largestNumber(self, nums: List[int]) -> str:
        nums = sorted(nums, key=lambda x: (str(x)[0], str(x)))
        s = ''.join([str(x) for x in nums])
        return s

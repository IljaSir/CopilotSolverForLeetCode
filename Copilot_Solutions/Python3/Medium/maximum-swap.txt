Synthesizing 10/10 solutions (Duplicates hidden)

=======

def maximumSwap(self, num: int) -> int:
        num = list(str(num))
        for i in range(len(num)):
            for j in range(i+1, len(num)):
                if num[i] < num[j]:
                    num[i], num[j] = num[j], num[i]
                    return int("".join(num))
        return int("".join(num))

=======

def maximumSwap(self, num: int) -> int:
        num = list(str(num))
        for i in range(len(num)):
            for j in range(i+1, len(num)):
                num[i], num[j] = num[j], num[i]
                if num > num[i:j+1]:
                    return int(''.join(num))
                num[i], num[j] = num[j], num[i]
        return int(''.join(num))

=======

def maximumSwap(self, num: int) -> int:
        num = list(str(num))
        for i in range(len(num)-1):
            if num[i] < max(num[i+1:]):
                num[num[i+1:].index(max(num[i+1:]))+i+1], num[i] = num[i], num[num[i+1:].index(max(num[i+1:]))+i+1]
                return int("".join(num))
        return int("".join(num))

=======

def maximumSwap(self, num: int) -> int:
        num = list(str(num))
        for i in range(len(num)):
            max_num = max(num[i:])
            if max_num > num[i]:
                for j in range(len(num)-1, i, -1):
                    if num[j] == max_num:
                        num[i], num[j] = num[j], num[i]
                        return int("".join(num))
        return int("".join(num))

=======

def maximumSwap(self, num: int) -> int:
        num = list(str(num))
        for i in range(len(num)):
            max_num = max(num[i:])
            if max_num != num[i]:
                max_index = num[i:].index(max_num) + i
                num[i], num[max_index] = num[max_index], num[i]
                break
        return int(''.join(num))

=======

def maximumSwap(self, num: int) -> int:
        num = list(str(num))
        for i in range(len(num)):
            max_val = max(num[i:])
            if max_val > num[i]:
                max_idx = num[i:].index(max_val) + i
                num[i], num[max_idx] = num[max_idx], num[i]
                break
        return int(''.join(num))

=======

def maximumSwap(self, num: int) -> int:
        num = [int(c) for c in str(num)]
        for i in range(len(num)-1):
            m = max(num[i+1:])
            if m > num[i]:
                for j in range(len(num)-1, i, -1):
                    if num[j] == m:
                        num[i], num[j] = num[j], num[i]
                        return int(''.join(map(str, num)))
        return int(''.join(map(str, num)))

=======

def maximumSwap(self, num: int) -> int:
        s = list(str(num))
        for i in range(len(s)):
            max_num = max(s[i:])
            if max_num > s[i]:
                max_idx = s[i:].index(max_num) + i
                s[i], s[max_idx] = s[max_idx], s[i]
                break
        return int("".join(s))

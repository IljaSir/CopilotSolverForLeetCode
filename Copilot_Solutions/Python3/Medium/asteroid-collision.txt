Synthesizing 10/10 solutions (Duplicates hidden)

=======

def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        stack = []
        for a in asteroids:
            if a > 0:
                stack.append(a)
            else:
                while stack and stack[-1] > 0 and stack[-1] < -a:
                    stack.pop()
                if stack and stack[-1] == -a:
                    stack.pop()
                elif not stack or stack[-1] < 0:
                    stack.append(a)
        return stack

=======

def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        stack = []
        for a in asteroids:
            if a > 0:
                stack.append(a)
            else:
                while stack and stack[-1] > 0 and stack[-1] < -a:
                    stack.pop()
                if not stack or stack[-1] < 0:
                    stack.append(a)
                elif stack[-1] == -a:
                    stack.pop()
        return stack

=======

def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        stack = []
        for a in asteroids:
            while stack and stack[-1] > 0 and a < 0:
                if stack[-1] < -a:
                    stack.pop()
                    continue
                elif stack[-1] == -a:
                    stack.pop()
                break
            else:
                stack.append(a)
        return stack

=======

def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        stack = []
        for asteroid in asteroids:
            if asteroid > 0:
                stack.append(asteroid)
            else:
                while stack and stack[-1] > 0 and stack[-1] < -asteroid:
                    stack.pop()
                if not stack or stack[-1] < 0:
                    stack.append(asteroid)
                elif stack[-1] == -asteroid:
                    stack.pop()
        return stack

=======

def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        stack = []
        for a in asteroids:
            if a > 0:
                stack.append(a)
            else:
                while stack and stack[-1] > 0 and stack[-1] < abs(a):
                    stack.pop()
                if not stack or stack[-1] < 0:
                    stack.append(a)
                elif stack[-1] == abs(a):
                    stack.pop()
        return stack

=======

def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        stack = []
        for a in asteroids:
            if a > 0:
                stack.append(a)
            else:
                while stack and stack[-1] > 0:
                    if stack[-1] < -a:
                        stack.pop()
                        continue
                    elif stack[-1] == -a:
                        stack.pop()
                    break
                else:
                    stack.append(a)
        return stack

=======

def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        stack = []
        for i in range(len(asteroids)):
            if not stack or asteroids[i] > 0:
                stack.append(asteroids[i])
            else:
                while stack and stack[-1] > 0 and stack[-1] < -asteroids[i]:
                    stack.pop()
                if not stack or stack[-1] < 0:
                    stack.append(asteroids[i])
                elif stack[-1] == -asteroids[i]:
                    stack.pop()
        return stack

=======

def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        for i in range(len(asteroids)):
            if len(asteroids) == 1:
                break
            if i == len(asteroids) - 1:
                break
            if asteroids[i] > 0 and asteroids[i + 1] < 0:
                if asteroids[i] == abs(asteroids[i + 1]):
                    asteroids.pop(i)
                    asteroids.pop(i)
                    if i > 1:
                        i -= 2
                    else:
                        i -= 1
                elif asteroids[i] > abs(asteroids[i + 1]):
                    asteroids.pop(i + 1)
                    if i > 0:
                        i -= 1
                else:
                    asteroids.pop(i)
                    if i > 0:
                        i -= 1
        return asteroids

=======

def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        # print(asteroids)
        if len(asteroids) == 0:
            return []
        if len(asteroids) == 1:
            return asteroids
        if len(asteroids) == 2:
            if asteroids[0] > 0 and asteroids[1] < 0:
                if abs(asteroids[0]) == abs(asteroids[1]):
                    return []
                elif abs(asteroids[0]) > abs(asteroids[1]):
                    return [asteroids[0]]
                else:
                    return [asteroids[1]]
            else:
                return asteroids
        # print(asteroids)
        for i in range(len(asteroids)-1):
            if asteroids[i] > 0 and asteroids[i+1] < 0:
                if abs(asteroids[i]) == abs(asteroids[i+1]):
                    asteroids[i] = 0
                    asteroids[i+1] = 0
                elif abs(asteroids[i]) > abs(asteroids[i+1]):
                    asteroids[i+1] = 0
                else:
                    asteroids[i] = 0
        # print(asteroids)
        if 0 in asteroids:
            asteroids = [i for i in asteroids if i != 0]
        # print(asteroids)
        if len(asteroids) > 1:
            return self.asteroidCollision(asteroids)
        else:
            return asteroids

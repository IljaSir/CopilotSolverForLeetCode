Synthesizing 10/10 solutions (Duplicates hidden)

=======

def numPermsDISequence(self, s: str) -> int:
        n = len(s)
        dp = [[0] * (n + 1) for _ in range(n + 1)]
        dp[0][0] = 1
        for i in range(1, n + 1):
            if s[i - 1] == 'I':
                for j in range(i):
                    dp[i][j] = sum(dp[i - 1][:j + 1])
            else:
                for j in range(i):
                    dp[i][j] = sum(dp[i - 1][j:])
        return sum(dp[n]) % (10 ** 9 + 7)

=======

def numPermsDISequence(self, s: str) -> int:
        n = len(s)
        dp = [[0] * (n + 1) for _ in range(n + 1)]
        for i in range(n + 1):
            dp[0][i] = 1
        for i in range(1, n + 1):
            if s[i - 1] == 'I':
                for j in range(1, i + 1):
                    dp[i][j] = dp[i][j - 1] + dp[i - 1][j - 1]
            else:
                for j in range(i, -1, -1):
                    dp[i][j] = dp[i][j + 1] + dp[i - 1][j]
        return dp[-1][0] % (10 ** 9 + 7)

=======

def numPermsDISequence(self, s: str) -> int:
        n = len(s)
        dp = [1] * (n + 1)
        for c in s:
            if c == 'I':
                for i in range(1, n + 1):
                    dp[i] += dp[i - 1]
            else:
                for i in range(n - 1, -1, -1):
                    dp[i] = dp[i + 1] + dp[i]
        return dp[0] % (10 ** 9 + 7)

=======

def numPermsDISequence(self, s: str) -> int:
        N = len(s)
        dp = [1] * (N+1)
        for x in s:
            if x == 'I':
                for i in range(1, N+1):
                    dp[i] += dp[i-1]
            else:
                for i in range(N-1, -1, -1):
                    dp[i] = dp[i] + dp[i+1]
        return dp[0] % (10**9 + 7)

=======

def numPermsDISequence(self, s: str) -> int:
        n = len(s)
        dp = [1] * (n+1)
        for ch in s:
            if ch == 'I':
                for i in range(1, n+1):
                    dp[i] += dp[i-1]
            else:
                for i in range(n-1, -1, -1):
                    dp[i] += dp[i+1]
        return dp[0] % (10**9+7)

=======

def numPermsDISequence(self, s: str) -> int:
        pass

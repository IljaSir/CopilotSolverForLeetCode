Synthesizing 10/10 solutions (Duplicates hidden)

=======

def xorGame(self, nums: List[int]) -> bool:
        if len(nums) % 2 == 0:
            return True
        xor = 0
        for num in nums:
            xor ^= num
        return xor == 0

=======

def xorGame(self, nums: List[int]) -> bool:
        return len(nums) % 2 == 0 or reduce(xor, nums) == 0

=======

def xorGame(self, nums: List[int]) -> bool:
        return sum(nums) == 0 or len(nums) % 2 == 0

=======

def xorGame(self, nums: List[int]) -> bool:
        return len(nums) % 2 == 0 or reduce(lambda x, y: x ^ y, nums) == 0

Synthesizing 10/10 solutions

=======

def tallestBillboard(self, rods: List[int]) -> int:
        dp = {0: 0}
        for r in rods:
            for d in list(dp):
                dp[d + r] = max(dp.get(d + r, 0), dp[d])
                dp[abs(d - r)] = max(dp.get(abs(d - r), 0), dp[d] + min(d, r))
        return dp[0]

=======

def tallestBillboard(self, rods: List[int]) -> int:
        dp = {0: 0}
        for x in rods:
            for d in list(dp):
                dp[d+x] = max(dp.get(d+x, 0), dp[d])
                dp[abs(d-x)] = max(dp.get(abs(d-x), 0), dp[d] + min(d, x))
        return dp[0]

=======

def tallestBillboard(self, rods: List[int]) -> int:
        dp = {0: 0}
        for rod in rods:
            for d in list(dp):
                dp[d + rod] = max(dp.get(d + rod, 0), dp[d])
                dp[abs(d - rod)] = max(dp.get(abs(d - rod), 0), dp[d] + min(d, rod))
        return dp[0]

=======

def tallestBillboard(self, rods: List[int]) -> int:
        dp = {0:0}
        for r in rods:
            for d in list(dp.keys()):
                dp[d+r] = max(dp.get(d+r, 0), dp[d])
                dp[abs(d-r)] = max(dp.get(abs(d-r), 0), dp[d]+min(d, r))
        return dp[0]

=======

def tallestBillboard(self, rods: List[int]) -> int:
        dp = {0:0}
        for rod in rods:
            for diff in list(dp.keys()):
                dp[diff+rod] = max(dp.get(diff+rod, 0), dp[diff])
                dp[abs(diff-rod)] = max(dp.get(abs(diff-rod), 0), dp[diff]+min(diff, rod))
        return dp[0]

=======

def tallestBillboard(self, rods: List[int]) -> int:
        dp = {0:0}
        for rod in rods:
            for d, h in dp.copy().items():
                dp[d + rod] = max(dp.get(d + rod, 0), h)
                dp[abs(d - rod)] = max(dp.get(abs(d - rod), 0), h + min(d, rod))
        return dp[0]

=======

def tallestBillboard(self, rods: List[int]) -> int:
        dp = [0] * 5001
        for rod in rods:
            for i in range(5000, rod-1, -1):
                dp[i] = max(dp[i], dp[i-rod] + rod)
            for i in range(rod, 5000):
                dp[i] = max(dp[i], dp[i+rod] + rod)
        return dp[0] // 2

=======

def tallestBillboard(self, rods: List[int]) -> int:
        dp = {0:0}
        for rod in rods:
            for key in list(dp):
                dp[key+rod] = max(dp.get(key+rod, 0), dp[key])
                dp[abs(key-rod)] = max(dp.get(abs(key-rod), 0), dp[key] + min(key, rod))
        return dp[0]

=======

def tallestBillboard(self, rods: List[int]) -> int:
        dp = {0: 0}
        for rod in rods:
            new_dp = {}
            for d in dp:
                new_dp[d + rod] = max(new_dp.get(d + rod, 0), dp[d])
                new_dp[abs(d - rod)] = max(new_dp.get(abs(d - rod), 0), dp[d] + min(d, rod))
            dp = new_dp
        return dp[0]

=======

def tallestBillboard(self, rods: List[int]) -> int:
        # dp[i][j] = max(dp[i-1][j], dp[i-1][j-rods[i]]+rods[i])
        dp = {0: 0}
        for rod in rods:
            dp2 = dp.copy()
            for d, h in dp.items():
                dp2[d+rod] = max(dp2.get(d+rod, 0), h+rod)
                dp2[abs(d-rod)] = max(dp2.get(abs(d-rod), 0), h)
            dp = dp2
        return dp[0] // 2

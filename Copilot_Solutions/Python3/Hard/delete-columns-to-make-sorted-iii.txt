Synthesizing 10/10 solutions (Duplicates hidden)

=======

def minDeletionSize(self, strs: List[str]) -> int:
        count = 0
        for i in range(len(strs[0])):
            for j in range(len(strs)-1):
                if strs[j][i] > strs[j+1][i]:
                    count += 1
                    break
        return count

=======

def minDeletionSize(self, strs: List[str]) -> int:
        return sum(any(strs[i][j] > strs[i+1][j] for i in range(len(strs)-1)) for j in range(len(strs[0])))

=======

def minDeletionSize(self, strs: List[str]) -> int:
        ans = 0
        for i in zip(*strs):
            if list(i) != sorted(i):
                ans += 1
        return ans

=======

def minDeletionSize(self, strs: List[str]) -> int:
        
        pass

=======

def minDeletionSize(self, strs: List[str]) -> int:
        return sum([1 for i in zip(*strs) if "".join(i) != "".join(sorted(i))])

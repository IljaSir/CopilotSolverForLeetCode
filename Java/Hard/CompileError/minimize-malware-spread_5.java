class Solution {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        
        int n = graph.length;
        int[] colors = new int[n];
        Arrays.fill(colors, -1);

        int c = 0;
        for (int node = 0; node < n; ++node)
            if (colors[node] == -1)
                dfs(graph, colors, node, c++);

        int[] size = new int[c];
        for (int color: colors)
            size[color]++;

        int[] colorCount = new int[c];
        for (int node: initial)
            colorCount[colors[node]]++;

        int ans = Integer.MAX_VALUE;
        for (int node: initial) {
            int c2 = colors[node];
            if (colorCount[c2] == 1) {
                if (ans == Integer.MAX_VALUE)
                    ans = node;
                else if (size[c2] > size[colors[ans]])
                    ans = node;
                else if (size[c2] == size[colors[ans]] && node < ans)
                    ans = node;
            }
        }

        if (ans == Integer.MAX_VALUE)
            for (int node: initial)
                ans = Math.min(ans, node);

        return ans;
    }
}
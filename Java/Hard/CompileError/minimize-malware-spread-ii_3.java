class Solution {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        
        int n = graph.length;
        int[] color = new int[n];
        Arrays.fill(color, -1);
        for (int c = 0, i = 0; i < n; ++i)
            if (color[i] == -1)
                dfs(graph, color, i, c++);

        int[] size = new int[n];
        for (int c: color)
            size[c]++;

        int[] malwareCount = new int[n];
        for (int i: initial)
            malwareCount[color[i]]++;

        int ans = Integer.MAX_VALUE;
        for (int i: initial) {
            int c = color[i];
            if (malwareCount[c] == 1) {
                if (ans == Integer.MAX_VALUE)
                    ans = i;
                else if (size[c] > size[color[ans]])
                    ans = i;
                else if (size[c] == size[color[ans]] && i < ans)
                    ans = i;
            }
        }

        if (ans == Integer.MAX_VALUE)
            for (int i: initial)
                ans = Math.min(ans, i);

        return ans;
    }
}
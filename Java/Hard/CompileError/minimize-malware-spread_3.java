class Solution {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        
        int n = graph.length;
        int[] color = new int[n];
        Arrays.fill(color, -1);
        int c = 0;
        for (int i = 0; i < n; ++i)
            if (color[i] == -1)
                dfs(graph, color, i, c++);

        int[] size = new int[c];
        for (int x: color)
            size[x]++;

        int[] malwareCount = new int[c];
        for (int x: initial)
            malwareCount[color[x]]++;

        int ans = Integer.MAX_VALUE;
        for (int x: initial) {
            int c1 = color[x];
            if (malwareCount[c1] == 1) {
                if (ans == Integer.MAX_VALUE)
                    ans = x;
                else if (size[c1] > size[color[ans]])
                    ans = x;
                else if (size[c1] == size[color[ans]] && x < ans)
                    ans = x;
            }
        }

        if (ans == Integer.MAX_VALUE) {
            for (int x: initial)
                ans = Math.min(ans, x);
        }

        return ans;
    }
}
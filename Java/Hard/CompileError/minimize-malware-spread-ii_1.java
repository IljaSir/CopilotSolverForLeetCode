class Solution {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        
        int n = graph.length;
        int[] colors = new int[n];
        Arrays.fill(colors, -1);
        int c = 0;
        for (int i = 0; i < n; ++i)
            if (colors[i] == -1)
                dfs(graph, colors, i, c++);

        int[] colorSize = new int[c];
        for (int color: colors)
            colorSize[color]++;

        int[] infected = new int[c];
        for (int node: initial) {
            int color = colors[node];
            infected[color]++;
        }

        int ans = Integer.MAX_VALUE;
        for (int node: initial) {
            int color = colors[node];
            if (infected[color] == 1) {
                if (ans == Integer.MAX_VALUE)
                    ans = node;
                else if (colorSize[color] > colorSize[colors[ans]])
                    ans = node;
                else if (colorSize[color] == colorSize[colors[ans]] && node < ans)
                    ans = node;
            }
        }

        if (ans == Integer.MAX_VALUE) {
            for (int node: initial)
                ans = Math.min(ans, node);
        }

        return ans;
    }
}